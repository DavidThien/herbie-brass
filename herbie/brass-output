Running Herbie on 497 tests (seed: 1191530849)...
Now running test: Random Jason Timeout Test 001
Starting program: (λ (x) (+ x (asin (cosh x))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Random Jason Timeout Test 009
Starting program: (λ (x y) (fabs (fmod y (asin (- 2.821952756469356e+184 x)))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Area of a triangle
Starting program: (λ (a b c) (sqrt (* (* (* (/ (+ (+ a b) c) 2) (- (/ (+ (+ a b) c) 2) a)) (- (/ (+ (+ a b) c) 2) b)) (- (/ (+ (+ a b) c) 2) c))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Toniolo and Linder, Equation (13)
Starting program: (λ (n U t l Om U*) (sqrt (* (* (* 2 n) U) (- (- t (* 2 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2)) (- U U*))))))
Precision double result: (λ (n U t l Om U*) (if (<= U -2.733840479149005e+144) (* (sqrt (sqrt (* (* 2 (* n U)) (- (- t (/ (* l 2) (/ Om l))) (* (* (/ l Om) (/ l Om)) (* n (- U U*))))))) (sqrt (sqrt (* (* 2 (* n U)) (- (- t (/ (* l 2) (/ Om l))) (* (* (/ l Om) (/ l Om)) (* n (- U U*)))))))) (if (<= U -4.750595392011835e-279) (sqrt (+ (+ (* t (* 2 (* n U))) (* (* -4 (* n (* U l))) (/ l Om))) (* (* n (- U U*)) (* (/ l Om) (* (/ l Om) (* -2 (* n U))))))) (sqrt (+ (* n (* (* (/ l Om) (* (/ l Om) (* -2 (* n U)))) (- U U*))) (+ (* t (* 2 (* n U))) (* (/ l Om) (* (* -4 l) (* n U)))))))))
Precision single result: (λ (n U t l Om U*) 0)
|      |start prog|double|single|
|double|32.9424369|27.715|61.503|
|single|27.8154492|27.702|11.070|

Now running test: Random Jason Timeout Test 003
Starting program: (λ (a b) (sin (pow (sqrt (atan2 b b)) (- b a))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Random Jason Timeout Test 015
Starting program: (λ (a b) (sin (pow (sqrt (atan2 b b)) (- b a))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: (/ (- x lo) (- hi lo))
Starting program: (λ (lo hi x) (/ (- x lo) (- hi lo)))
Precision double result: (λ (lo hi x) 0)
Precision single result: (λ (lo hi x) 0)
|      |start prog|double|single|
|double|61.9971116|61.997|61.997|
|single|30.0175597|29.976|29.976|

Now running test: Random Jason Timeout Test 002
Starting program: (λ (c) (fmod (sinh c) (- c (pow -2.9807307601812193e+165 2))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Random Jason Timeout Test 004
Starting program: (λ (a c) (fmod (cosh c) (log1p a)))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Random Jason Timeout Test 012
Starting program: (λ (a) (acos (pow (fmod (cosh a) (* a a)) (log1p a))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Random Jason Timeout Test 014
Starting program: (λ (c) (fmod (sinh c) (- c (pow -2.9807307601812193e+165 2))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Random Jason Timeout Test 006
Starting program: (λ (a) (fabs (fmod (atan2 (expm1 (sin (expm1 a))) (atan a)) a)))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: exp with complex power real part (p55)
Starting program: (λ (xre xim) (re (/.c (+.c (exp.c (complex xre xim)) (exp.c (neg.c (complex xre xim)))) (complex 2 0))))
Precision double result: (λ (xre xim) (re (/.c (+.c (exp.c (complex xre xim)) (exp.c (neg.c (complex xre xim)))) (complex 2 0))))
Precision single result: (λ (xre xim) (re (/.c (+.c (exp.c (complex xre xim)) (exp.c (neg.c (complex xre xim)))) (complex 2 0))))
|      |start prog|double|single|
|double|0.01019812|0.0101|0.0101|
|single|14.7773214|14.777|14.777|

Now running test: exp with complex power imaginary part (p55)
Starting program: (λ (xre xim) (im (/.c (+.c (exp.c (complex xre xim)) (exp.c (neg.c (complex xre xim)))) (complex 2 0))))
Precision double result: (λ (xre xim) (im (/.c (+.c (exp.c (complex xre xim)) (exp.c (neg.c (complex xre xim)))) (complex 2 0))))
Precision single result: (λ (xre xim) (im (/.c (+.c (exp.c (complex xre xim)) (exp.c (neg.c (complex xre xim)))) (complex 2 0))))
|      |start prog|double|single|
|double|43.5507624|43.550|43.550|
|single|13.9477342|13.947|13.947|

Now running test: Euler formula real part (p55)
Starting program: (λ (x y) (re (complex (* (/ (+ (exp x) (exp (- x))) 2) (cos y)) (* (/ (- (exp x) (exp (- x))) 2) (sin y)))))
Precision double result: (λ (x y) (/ (+ (* (/ (cos y) (sqrt (exp x))) (/ 1 (sqrt (exp x)))) (* (cos y) (exp x))) 2))
Precision single result: (λ (x y) (/ (+ (* (cos y) (exp x)) (/ (cos y) (exp x))) 2))
|      |start prog|double|single|
|double|0.01866035|0.0272|0.0131|
|single|14.8800713|14.880|14.878|

Now running test: Euler formula imaginary part (p55)
Starting program: (λ (x y) (im (complex (* (/ (+ (exp x) (exp (- x))) 2) (cos y)) (* (/ (- (exp x) (exp (- x))) 2) (sin y)))))
Precision double result: (λ (x y) (im (complex (* (cos y) (/ (+ (exp (- x)) (exp x)) 2)) (* (/ (+ (* (pow x 3) 1/3) (+ (* 2 x) (* 1/60 (pow x 5)))) 2) (sin y)))))
Precision single result: (λ (x y) (/ (* (* x y) 2) 2))
|      |start prog|double|single|
|double|43.7662027|0.7916|32.057|
|single|13.9790331|13.848|13.936|

Now running test: 3.9.1 real part (p56)
Starting program: (λ () (re (+.c (+.c (+.c (+.c (+.c (+.c (*.c (*.c (*.c (*.c (*.c (complex -1 1) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1)) (*.c (*.c (*.c (*.c (*.c (complex 6 0) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1))) (*.c (*.c (*.c (*.c (complex 15 0) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1))) (*.c (*.c (*.c (complex 20 0) (complex -1 1)) (complex -1 1)) (complex -1 1))) (*.c (*.c (complex 15 0) (complex -1 1)) (complex -1 1))) (*.c (complex 6 0) (complex -1 1))) (complex 1 0))))
Precision double result: (λ () (re (+.c (+.c (complex -60 0) (+.c (complex 24 -24) (complex 0 8))) (+.c (complex 0 -30) (+.c (complex 40 40) (complex -5 6))))))
Precision single result: (λ () (re (+.c (+.c (complex -60 0) (+.c (complex 24 -24) (complex 0 8))) (+.c (complex 0 -30) (+.c (complex 40 40) (complex -5 6))))))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0         |0     |0     |

Now running test: 3.9.1 imaginary part (p56)
Starting program: (λ () (im (+.c (+.c (+.c (+.c (+.c (+.c (*.c (*.c (*.c (*.c (*.c (complex -1 1) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1)) (*.c (*.c (*.c (*.c (*.c (complex 6 0) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1))) (*.c (*.c (*.c (*.c (complex 15 0) (complex -1 1)) (complex -1 1)) (complex -1 1)) (complex -1 1))) (*.c (*.c (*.c (complex 20 0) (complex -1 1)) (complex -1 1)) (complex -1 1))) (*.c (*.c (complex 15 0) (complex -1 1)) (complex -1 1))) (*.c (complex 6 0) (complex -1 1))) (complex 1 0))))
Precision double result: (λ () (im (+.c (+.c (complex -60 0) (+.c (complex 24 -24) (complex 0 8))) (+.c (complex 0 -30) (+.c (complex 40 40) (complex -5 6))))))
Precision single result: (λ () (im (+.c (+.c (complex -60 0) (+.c (complex 24 -24) (complex 0 8))) (+.c (complex 0 -30) (+.c (complex 40 40) (complex -5 6))))))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0         |0     |0     |

Now running test: 3.9.2 real part (p56)
Starting program: (λ () (re (+.c (+.c (+.c (+.c (*.c (*.c (*.c (complex (/ (- 1) 2) (/ (sqrt 3) 2)) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (*.c (*.c (*.c (complex (- 2) 0) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2)))) (*.c (*.c (complex 5 0) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2)))) (*.c (complex 4 0) (complex (/ (- 1) 2) (/ (sqrt 3) 2)))) (complex 7 0))))
Precision double result: (λ () (re (+.c (complex 5 (/ 4 (/ 2 (sqrt 3)))) (*.c (+.c (complex 6 (* -2 (/ (sqrt 3) 2))) (*.c (complex -1/2 (/ (sqrt 3) 2)) (complex -1/2 (/ (sqrt 3) 2)))) (*.c (complex -1/2 (/ (sqrt 3) 2)) (complex -1/2 (/ (sqrt 3) 2)))))))
Precision single result: (λ () (re (+.c (complex -1/2 (* 1/2 (sqrt 3))) (complex 1/2 (+ (* 1/2 (sqrt 3)) (+ (* (sqrt 3) 2) (* (sqrt 3) -3)))))))
|      |start prog|double|single|
|double|61.9262959|0     |0     |
|single|29.7115875|29.711|0     |

Now running test: 3.9.2 imaginary part (p56)
Starting program: (λ () (im (+.c (+.c (+.c (+.c (*.c (*.c (*.c (complex (/ (- 1) 2) (/ (sqrt 3) 2)) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (*.c (*.c (*.c (complex (- 2) 0) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2)))) (*.c (*.c (complex 5 0) (complex (/ (- 1) 2) (/ (sqrt 3) 2))) (complex (/ (- 1) 2) (/ (sqrt 3) 2)))) (*.c (complex 4 0) (complex (/ (- 1) 2) (/ (sqrt 3) 2)))) (complex 7 0))))
Precision double result: (λ () (im (+.c (complex 7 0) (+.c (*.c (complex -1/2 (/ (sqrt 3) 2)) (complex 4 0)) (+.c (*.c (complex -1/2 (/ (sqrt 3) 2)) (*.c (complex -1/2 (/ (sqrt 3) 2)) (complex 5 0))) (+.c (*.c (*.c (complex -1/2 (/ (sqrt 3) 2)) (*.c (complex -1/2 (/ (sqrt 3) 2)) (complex -1/2 (/ (sqrt 3) 2)))) (complex -1/2 (/ (sqrt 3) 2))) (*.c (complex -1/2 (/ (sqrt 3) 2)) (*.c (complex -1/2 (/ (sqrt 3) 2)) (*.c (complex -2 0) (complex -1/2 (/ (sqrt 3) 2)))))))))))
Precision single result: (λ () (im (+.c (*.c (complex 11/2 (+ (+ (* -1/4 (sqrt 3)) (* -1/4 (sqrt 3))) (- (sqrt 3)))) (+.c (complex -3/4 (* -1/4 (sqrt 3))) (complex 1/4 (* -1/4 (sqrt 3))))) (complex 5 (* (sqrt 3) 2)))))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|29.6943881|29.694|0     |

Now running test: expax (section 3.5)
Starting program: (λ (a x) (- (exp (* a x)) 1))
Precision double result: (λ (a x) (if (<= (* x a) -0.0011705725117707273) (/ (+ (pow (exp (* x a)) 3) -1) (+ (* (exp (* x a)) (exp (* x a))) (- 1 (- (exp (* x a)))))) (+ (* (* (* x a) 1/6) (* (* x a) (* x a))) (+ (* x a) (* 1/2 (* (* x a) (* x a)))))))
Precision single result: (λ (a x) (- (pow (exp a) x) 1))
|      |start prog|double|single|
|double|29.1084844|0.2571|35.419|
|single|12.0947014|11.881|6.6418|

Now running test: expq2 (section 3.11)
Starting program: (λ (x) (/ (exp x) (- (exp x) 1)))
Precision double result: (λ (x) (/ (exp x) (+ x (* (* x x) (+ (* x 1/6) 1/2)))))
Precision single result: (λ (x) (* (* (/ 1 (cbrt (* (cbrt (+ x (* (* x x) (+ (* x 1/6) 1/2)))) (cbrt (+ x (* (* x x) (+ (* x 1/6) 1/2))))))) (cbrt (/ (exp x) (cbrt (+ x (* (* x x) (+ (* x 1/6) 1/2))))))) (* (cbrt (/ (exp x) (+ x (* (* x x) (+ (* x 1/6) 1/2))))) (cbrt (/ (exp x) (+ x (* (* x x) (+ (* x 1/6) 1/2))))))))
|      |start prog|double|single|
|double|40.6627376|0.9628|1.8728|
|single|5.56085841|0.9031|0.9791|

Now running test: quadp (p42, positive)
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* 4 (* a c))))) (* 2 a)))
Precision double result: (λ (a b c) (if (<= b -5.822911301617661e+149) (- (/ c b) (/ b a)) (if (<= b 2.098930371492006e-288) (* (/ 1 (* 2 a)) (- (sqrt (- (* b b) (* (* c 4) a))) b)) (if (<= b 1.940534068021198e+69) (* (/ (* -4 c) (* (sqrt (+ (sqrt (- (* b b) (* (* c 4) a))) b)) (sqrt (+ (sqrt (- (* b b) (* (* c 4) a))) b)))) (/ a (* 2 a))) (- (/ c b))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|33.1297393|6.8841|#f    |
|single|#f        |#f    |#f    |

Now running test: quadm (p42, negative)
Starting program: (λ (a b c) (/ (- (- b) (sqrt (- (* b b) (* 4 (* a c))))) (* 2 a)))
Precision double result: (λ (a b c) (if (<= b -5.496453642059583e-80) (- (/ c b)) (if (<= b 2.3600239350704878e+48) (/ (- (- b) (sqrt (- (pow b 2) (* 4 (* a c))))) (* 2 a)) (- (/ c b) (/ b a)))))
Precision single result: (λ (a b c) 0)
|      |start prog|double|single|
|double|33.9183389|10.435|56.311|
|single|29.3837376|20.046|8.1350|

Now running test: quad2m (problem 3.2.1, negative)
Starting program: (λ (a b_2 c) (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a))
Precision double result: (λ (a b_2 c) (if (<= b_2 -9.616862939881457e+69) (* -1/2 (/ c b_2)) (if (<= b_2 -3.566029770551389e-15) (/ (/ (* a c) a) (- (sqrt (- (* b_2 b_2) (* a c))) b_2)) (if (<= b_2 -8.407000097692146e-151) (* (/ c a) (/ a (- (sqrt (- (* b_2 b_2) (* a c))) b_2))) (if (<= b_2 2.1207040091231992e+52) (/ (- (- b_2) (sqrt (- (pow b_2 2) (* a c)))) a) (- (* (/ c b_2) 1/2) (* 2 (/ b_2 a))))))))
Precision single result: (λ (a b_2 c) 0)
|      |start prog|double|single|
|double|33.5429114|8.9970|56.408|
|single|29.4938599|21.548|8.3811|

Now running test: quad2p (problem 3.2.1, positive)
Starting program: (λ (a b_2 c) (/ (+ (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a))
Precision double result: (λ (a b_2 c) (if (<= b_2 -1.0176838279426597e+116) (- (* 1/2 (/ c b_2)) (* (/ b_2 a) 2)) (if (<= b_2 6.451727732860999e-100) (/ (- (sqrt (+ (* b_2 b_2) (* a (- c)))) b_2) a) (if (<= b_2 5110824310.819156) (/ (* a (- c)) (* (+ b_2 (sqrt (- (* b_2 b_2) (* a c)))) a)) (* -1/2 (/ c b_2))))))
Precision single result: (λ (a b_2 c) (log (exp (* (/ c b_2) -1/2))))
|      |start prog|double|single|
|double|33.2194501|9.4213|56.138|
|single|29.4861549|20.158|18.399|

Now running test: 2sqrt (example 3.1)
Starting program: (λ (x) (- (sqrt (+ x 1)) (sqrt x)))
Precision double result: (λ (x) (/ 1 (+ (sqrt (+ x 1)) (sqrt x))))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.5521269|0.1541|#f    |
|single|#f        |#f    |#f    |

Now running test: 2sin (example 3.3)
Starting program: (λ (x eps) (- (sin (+ x eps)) (sin x)))
Precision double result: (λ (x eps) (+ (* (cos x) (sin eps)) (* (* (cbrt (* (- (cos eps) 1) (sin x))) (cbrt (* (- (cos eps) 1) (sin x)))) (cbrt (* (- (cos eps) 1) (sin x))))))
Precision single result: (λ (x eps) (* (* (log (exp (cos (/ (+ (+ eps x) x) 2)))) (* (* (cbrt (sin (/ eps 2))) (cbrt (sin (/ eps 2)))) (cbrt (sin (/ eps 2))))) 2))
|      |start prog|double|single|
|double|36.5859240|0.6087|15.870|
|single|22.2719534|22.205|22.235|

Now running test: tanhf (example 3.4)
Starting program: (λ (x) (/ (- 1 (cos x)) (sin x)))
Precision double result: (λ (x) (tan (/ x 2)))
Precision single result: (λ (x) (* (* (/ (cbrt (sin (/ x 2))) (cbrt (cos (/ x 2)))) (/ (cbrt (sin (/ x 2))) (cbrt (cos (/ x 2))))) (/ (cbrt (sin (/ x 2))) (cbrt (cos (/ x 2))))))
|      |start prog|double|single|
|double|30.3779739|0.0002|1.5725|
|single|29.9554477|14.914|14.960|

Now running test: 2atan (example 3.5)
Starting program: (λ (N) (- (atan (+ N 1)) (atan N)))
Precision double result: (λ (N) (atan2 1 (+ 1 (* (+ N 1) N))))
Precision single result: (λ (N) (atan2 1 (+ 1 (* (+ N 1) N))))
|      |start prog|double|single|
|double|15.0558629|0.4239|0.4239|
|single|0.89568143|0.0928|0.0928|

Now running test: 2isqrt (example 3.6)
Starting program: (λ (x) (- (/ 1 (sqrt x)) (/ 1 (sqrt (+ x 1)))))
Precision double result: (λ (x) (* (/ 1 (+ (sqrt (+ x 1)) (sqrt x))) (/ 1 (* (sqrt x) (sqrt (+ x 1))))))
Precision single result: (λ (x) (exp (* (* (cbrt (log (- (/ 1 (sqrt x)) (/ 1 (sqrt (+ x 1)))))) (cbrt (log (- (/ 1 (sqrt x)) (/ 1 (sqrt (+ x 1))))))) (cbrt (log (- (/ 1 (sqrt x)) (/ 1 (sqrt (+ x 1)))))))))
|      |start prog|double|single|
|double|20.1238611|0.4062|23.595|
|single|3.96222475|2.4273|4.2946|

Now running test: 2frac (problem 3.3.1)
Starting program: (λ (x) (- (/ 1 (+ x 1)) (/ 1 x)))
Precision double result: (λ (x) (/ (/ -1 (+ x 1)) x))
Precision single result: (λ (x) (/ -1 (* (* x (cbrt (+ x 1))) (* (cbrt (+ x 1)) (cbrt (+ x 1))))))
|      |start prog|double|single|
|double|14.2152687|0.0691|0.6651|
|single|1.28117511|0.0592|0.0837|

Now running test: 2tan (problem 3.3.2)
Starting program: (λ (x eps) (- (tan (+ x eps)) (tan x)))
Precision double result: (λ (x eps) (if (<= eps -2.1143452313525425e-38) (/ (- (* (cos x) (+ (tan x) (tan eps))) (* (sin x) (- 1 (/ (* (sin x) (sin eps)) (* (cos eps) (cos x)))))) (* (cos x) (- 1 (/ (* (sin x) (sin eps)) (* (cos eps) (cos x)))))) (if (<= eps 1.8820512651594685e-18) (+ (* (+ x (* 1/3 eps)) (* eps eps)) eps) (- (/ 1 (/ (- 1 (/ (* (sin x) (sin eps)) (* (cos eps) (cos x)))) (+ (tan x) (tan eps)))) (tan x)))))
Precision single result: (λ (x eps) (+ (* (* x eps) (+ x eps)) eps))
|      |start prog|double|single|
|double|37.2201355|14.023|46.772|
|single|22.0574508|22.000|22.217|

Now running test: 3frac (problem 3.3.3)
Starting program: (λ (x) (+ (- (/ 1 (+ x 1)) (/ 2 x)) (/ 1 (- x 1))))
Precision double result: (λ (x) (if (or (<= x -108.30282874728564) (not (<= x 100.88446103396096))) (+ (+ (/ 2 (pow x 5)) (/ 2 (pow x 7))) (/ (/ 2 x) (* x x))) (- (/ 1 (+ 1 x)) (- (/ 2 x) (/ 1 (- x 1))))))
Precision single result: (λ (x) (* (* (cbrt (+ (/ -2 x) (+ (/ 1 (- x 1)) (/ 1 (+ x 1))))) (cbrt (+ (/ -2 x) (+ (/ 1 (- x 1)) (/ 1 (+ x 1)))))) (cbrt (+ (/ -2 x) (+ (/ 1 (- x 1)) (/ 1 (+ x 1)))))))
|      |start prog|double|single|
|double|9.60876491|0.0790|10.254|
|single|0.92818536|0.0923|0.9855|

Now running test: 2cbrt (problem 3.3.4)
Starting program: (λ (x) (- (cbrt (+ x 1)) (cbrt x)))
Precision double result: (λ (x) (if (or (<= x -1.0270270689157528) (not (<= x 0.992877858801727))) (+ (- (cbrt x) (* (cbrt -1) (cbrt (- x)))) (* (- 1/3 (/ 1/9 x)) (/ (cbrt x) x))) (- (- (+ (* x 1/3) 1) (* (pow x 2) 1/9)) (cbrt x))))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.3124464|0.8712|#f    |
|single|#f        |#f    |#f    |

Now running test: 2cos (problem 3.3.5)
Starting program: (λ (x eps) (- (cos (+ x eps)) (cos x)))
Precision double result: (λ (x eps) (if (or (<= eps -239549.37573921404) (not (<= eps 6.950130528056686))) (- (- (* (cos eps) (cos x)) (* (sin x) (sin eps))) (cos x)) (* -2 (* (sin (/ (+ x (+ x eps)) 2)) (sin (/ eps 2))))))
Precision single result: (λ (x eps) (* (* (* (* (cbrt (sin (/ eps 2))) (cbrt (sin (/ eps 2)))) (cbrt (sin (/ eps 2)))) (* (cbrt (sin (/ (+ (+ x eps) x) 2))) (* (cbrt (sin (/ (+ (+ x eps) x) 2))) (cbrt (sin (/ (+ (+ x eps) x) 2)))))) -2))
|      |start prog|double|single|
|double|39.6603597|1.0150|16.273|
|single|22.6873736|22.248|22.265|

Now running test: 2log (problem 3.3.6)
Starting program: (λ (N) (- (log (+ N 1)) (log N)))
Precision double result: (λ (N) (if (<= N 11171.507394181934) (log (/ (+ N 1) N)) (+ (/ 1 N) (+ (/ (/ 1/3 N) (* N N)) (/ -1/2 (* N N))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.0413802|0.0410|#f    |
|single|#f        |#f    |#f    |

Now running test: exp2 (problem 3.3.7)
Starting program: (λ (x) (+ (- (exp x) 2) (exp (- x))))
Precision double result: (λ (x) (+ (pow x 2) (+ (* 1/12 (pow x 4)) (log (exp (* (pow x 6) 1/360))))))
Precision single result: (λ (x) (+ (+ (* (pow x 4) 1/12) (* 1/360 (pow x 6))) (* (* (sqrt (pow x 2)) (sqrt (* (cbrt (pow x 2)) (cbrt (pow x 2))))) (sqrt (* (cbrt (* (cbrt (pow x 2)) (cbrt (pow x 2)))) (cbrt (cbrt (pow x 2))))))))
|      |start prog|double|single|
|double|29.4569757|0.6720|1.1566|
|single|1.61750680|0.1948|0.1869|

Now running test: expm1 (example 3.7)
Starting program: (λ (x) (- (exp x) 1))
Precision double result: (λ (x) (+ (* (+ (* 1/6 x) 1/2) (* x x)) x))
Precision single result: (λ (x) (+ (* (+ (* 1/6 x) 1/2) (* x x)) x))
|      |start prog|double|single|
|double|58.6172069|0.5579|0.5579|
|single|3.29090299|0.1084|0.1084|

Now running test: logs (example 3.8)
Starting program: (λ (n) (- (- (* (+ n 1) (log (+ n 1))) (* n (log n))) 1))
Precision double result: (λ (n) (- (/ (/ -1/6 n) n) (- (/ -1/2 n) (log n))))
Precision single result: (λ (n) (- (/ (/ -1/6 n) n) (- (/ -1/2 n) (log n))))
|      |start prog|double|single|
|double|62.9776520|0     |0     |
|single|29.9954325|27.559|27.559|

Now running test: invcot (example 3.9)
Starting program: (λ (x) (- (/ 1 x) (/ 1 (tan x))))
Precision double result: (λ (x) (+ (* (pow x 3) 1/45) (+ (* 2/945 (pow x 5)) (* 1/3 x))))
Precision single result: (λ (x) (+ (* (pow x 3) 1/45) (+ (* 2/945 (pow x 5)) (* 1/3 x))))
|      |start prog|double|single|
|double|59.9102838|0.3409|0.3409|
|single|30.8064972|0.042 |0.042 |

Now running test: qlog (example 3.10)
Starting program: (λ (x) (/ (log (- 1 x)) (log (+ 1 x))))
Precision double result: (λ (x) (- -1 (- x (* -1/2 (* x x)))))
Precision single result: (λ (x) (* (* (cbrt (+ (* (* x x) -1/2) (/ (- 1 (* x x)) (+ -1 x)))) (cbrt (+ (* (* x x) -1/2) (/ (- 1 (* x x)) (+ -1 x))))) (cbrt (+ (* (* x x) -1/2) (/ (- 1 (* x x)) (+ -1 x))))))
|      |start prog|double|single|
|double|60.8764701|0.4568|0.5009|
|single|30.9906556|0.0913|0.1017|

Now running test: cos2 (problem 3.4.1)
Starting program: (λ (x) (/ (- 1 (cos x)) (* x x)))
Precision double result: (λ (x) (/ (/ (sin x) (/ x (sin x))) (* x (+ 1 (cos x)))))
Precision single result: (λ (x) (exp (- (log 1/2) (+ (* 1/12 (pow x 2)) (* (pow x 4) 1/1440)))))
|      |start prog|double|single|
|double|30.8925805|0.2764|15.280|
|single|29.1158693|27.043|0.9192|

Now running test: expq3 (problem 3.4.2)
Starting program: (λ (a b eps) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))
Precision double result: (λ (a b eps) (if (<= (/ (* (- (exp (* (+ a b) eps)) 1) eps) (* (- (exp (* eps b)) 1) (- (exp (* a eps)) 1))) -inf.0) (+ (/ 1 a) (/ 1 b)) (if (<= (/ (* (- (exp (* (+ a b) eps)) 1) eps) (* (- (exp (* eps b)) 1) (- (exp (* a eps)) 1))) 1.979735377739744e-23) (/ (* (- (exp (* (+ a b) eps)) 1) eps) (* (- (exp (* eps b)) 1) (- (exp (* a eps)) 1))) (+ (/ 1 a) (/ 1 b)))))
Precision single result: (λ (a b eps) (+ (/ 1 b) (* (* (cbrt (/ 1 a)) (cbrt (/ 1 a))) (* (cbrt (cbrt (/ 1 a))) (cbrt (* (/ 1 (cbrt a)) (cbrt (/ 1 a))))))))
|      |start prog|double|single|
|double|58.9804238|0.3872|3.6332|
|single|29.5127968|0.6927|1.5531|

Now running test: logq (problem 3.4.3)
Starting program: (λ (eps) (log (/ (- 1 eps) (+ 1 eps))))
Precision double result: (λ (eps) (+ (* -2/3 (pow eps 3)) (+ (* -2 eps) (* -2/5 (pow eps 5)))))
Precision single result: (λ (eps) (+ (* -2/3 (pow eps 3)) (+ (* -2 eps) (* -2/5 (pow eps 5)))))
|      |start prog|double|single|
|double|58.7808251|0.1296|0.1296|
|single|3.29832369|0.0630|0.0630|

Now running test: sqrtexp (problem 3.4.4)
Starting program: (λ (x) (sqrt (/ (- (exp (* 2 x)) 1) (- (exp x) 1))))
Precision double result: (λ (x) (sqrt (cbrt (* (+ 1 (exp x)) (* (+ 1 (exp x)) (+ 1 (exp x)))))))
Precision single result: (λ (x) (sqrt (cbrt (* (+ 1 (exp x)) (* (+ 1 (exp x)) (+ 1 (exp x)))))))
|      |start prog|double|single|
|double|39.7615553|0.0584|0.0584|
|single|19.7150753|0.0428|0.0428|

Now running test: sintan (problem 3.4.5)
Starting program: (λ (x) (/ (- x (sin x)) (- x (tan x))))
Precision double result: (λ (x) (if (<= x -0.032026065035743984) (/ (- (* (/ x (- x (tan x))) (/ x (- x (tan x)))) (* (/ (sin x) (- x (tan x))) (/ (sin x) (- x (tan x))))) (+ (/ x (- x (tan x))) (/ (sin x) (- x (tan x))))) (if (<= x 0.03595483868468968) (- (* 9/40 (pow x 2)) (+ 1/2 (* (pow x 4) 27/2800))) (/ (/ (- (* (/ x (- x (tan x))) x) (* (* (sin x) (/ (cbrt (sin x)) (cbrt (- x (tan x))))) (/ (* (cbrt (sin x)) (cbrt (sin x))) (* (cbrt (- x (tan x))) (cbrt (- x (tan x))))))) (- x (tan x))) (+ (/ x (- x (tan x))) (/ (sin x) (- x (tan x))))))))
Precision single result: (λ (x) (if (<= (/ (- x (sin x)) (- x (tan x))) 1.0f0) (/ (- x (sin x)) (- x (tan x))) (- (* (pow x 2) 9/40) (+ 1/2 (* (pow x 4) 27/2800)))))
|      |start prog|double|single|
|double|31.2137107|0.0460|1.0315|
|single|28.8046794|13.015|13.477|

Now running test: 2nthrt (problem 3.4.6)
Starting program: (λ (x n) (- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))
Precision double result: (λ (x n) (if (<= (/ 1 n) -4.279102975391229e-12) (+ (log (sqrt (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n)))))) (log (sqrt (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n))))))) (if (<= (/ 1 n) 1.2193172143833595e-13) (+ (/ (/ (log x) (* n n)) x) (+ (/ (/ -1/2 x) (* x n)) (/ 1 (* x n)))) (* (cbrt (* (* (cbrt (log (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n)))))) (cbrt (log (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n))))))) (cbrt (log (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n)))))))) (* (cbrt (log (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n)))))) (cbrt (log (exp (- (pow (+ 1 x) (/ 1 n)) (pow x (/ 1 n)))))))))))
Precision single result: (λ (x n) (- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))
|      |start prog|double|single|
|double|32.8955357|24.176|32.895|
|single|2.15845237|19.529|2.1584|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, A
Starting program: (λ (x y) (sqrt (+ x y)))
Precision double result: (λ (x y) (sqrt (+ y x)))
Precision single result: (λ (x y) (sqrt (+ y x)))
|      |start prog|double|single|
|double|0.007625  |0.0076|0.0076|
|single|8.88849988|8.8884|8.8884|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, B
Starting program: (λ (x y z t) (/ (- (+ x y) z) (* t 2.0)))
Precision double result: (λ (x y z t) (- (/ y (* t 2.0)) (- (/ z (* t 2.0)) (/ x (* t 2.0)))))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|0.07410804|0.0770|60.870|
|single|21.3277984|21.335|11.601|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, C
Starting program: (λ (x y) (sqrt (fabs (- x y))))
Precision double result: (λ (x y) (sqrt (fabs (- x y))))
Precision single result: (λ (x y) (sqrt (fabs (- x y))))
|      |start prog|double|single|
|double|0.00575   |0.0057|0.0057|
|single|8.70541409|8.7054|8.7054|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, D
Starting program: (λ (x y z t) (+ x (/ (* y (- z x)) t)))
Precision double result: (λ (x y z t) (if (<= y -2.2148971267012774e+54) (+ (/ (/ (- z x) t) (/ 1 y)) x) (if (<= y -4.974563004297713e-216) (+ (/ (* (- z x) y) t) x) (+ (* (- z x) (/ y t)) x))))
Precision single result: (λ (x y z t) (+ (/ (* (- z x) y) t) x))
|      |start prog|double|single|
|double|5.99550894|1.6583|5.9955|
|single|19.9989501|20.001|19.998|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, E
Starting program: (λ (x y z t a) (+ x (/ (* y (- z t)) a)))
Precision double result: (λ (x y z t a) (+ x (/ (- z t) (/ a y))))
Precision single result: (λ (x y z t a) (+ x (/ (- z t) (/ a y))))
|      |start prog|double|single|
|double|5.82213230|2.1407|2.1407|
|single|23.4833499|23.452|23.452|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, F
Starting program: (λ (x y z t a) (- x (/ (* y (- z t)) a)))
Precision double result: (λ (x y z t a) (if (or (<= a -1.8718305968785995e-16) (not (<= a 1.2263298743595833e-20))) (+ x (* y (/ (- t z) a))) (+ (* (/ 1 a) (* y (- t z))) x)))
Precision single result: (λ (x y z t a) (+ x (/ (- t z) (/ a y))))
|      |start prog|double|single|
|double|5.77540443|0.5503|2.3034|
|single|23.4220677|23.489|23.387|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, G
Starting program: (λ (x y z) (* (+ x y) (+ z 1.0)))
Precision double result: (λ (x y z) (+ (+ (* (+ x y) 1.0) (* x z)) (* y z)))
Precision single result: (λ (x y z) (* (+ y x) (+ z 1.0)))
|      |start prog|double|single|
|double|0.016125  |0.0163|0.0161|
|single|6.02786479|6.0429|6.0278|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, H
Starting program: (λ (x y z) (* (+ x y) (- 1.0 z)))
Precision double result: (λ (x y z) (+ (* (+ y x) (- z)) (* (+ y x) 1.0)))
Precision single result: (λ (x y z) (* (- 1.0 z) (+ x y)))
|      |start prog|double|single|
|double|0.01575   |0.0163|0.0157|
|single|5.82901309|5.8277|5.8290|

Now running test: Optimisation.CirclePacking:place from circle-packing-0.1.0.4, I
Starting program: (λ (x y z) (+ (+ x y) z))
Precision double result: (λ (x y z) (+ z (+ y x)))
Precision single result: (λ (x y z) (+ z (+ y x)))
|      |start prog|double|single|
|double|0.000625  |0.0006|0.0006|
|single|0.00748836|0.0074|0.0074|

Now running test: Data.Colour.Matrix:determinant from colour-2.3.3, A
Starting program: (λ (x y z t a b c i j) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* t i)))) (* j (- (* c a) (* y i)))))
Precision double result: (λ (x y z t a b c i j) (if (<= b -4.206813821976247e-146) (+ (- (* (* (cbrt (* (- (* z y) (* a t)) x)) (cbrt (* (- (* z y) (* a t)) x))) (cbrt (* (- (* z y) (* a t)) x))) (* b (- (* c z) (* i t)))) (* (- (* a c) (* y i)) j)) (if (<= b 6.602201935741976e-284) (+ (* (- (* a c) (* y i)) j) (* (- (* z y) (* a t)) x)) (+ (- (* (* (cbrt (* (- (* z y) (* a t)) x)) (cbrt (* (- (* z y) (* a t)) x))) (cbrt (* (* (* (cbrt (- (* z y) (* a t))) (cbrt (- (* z y) (* a t)))) x) (cbrt (- (* z y) (* a t)))))) (* b (- (* c z) (* i t)))) (* (- (* a c) (* y i)) j)))))
Precision single result: (λ (x y z t a b c i j) 0)
|      |start prog|double|single|
|double|11.7114267|11.995|62.260|
|single|28.8628354|28.862|14.919|

Now running test: Data.Colour.Matrix:inverse from colour-2.3.3, B
Starting program: (λ (x y z t a) (/ (- (* x y) (* z t)) a))
Precision double result: (λ (x y z t a) (if (<= a -2.0154939047717905e+24) (- (/ y (/ a x)) (/ 1 (/ (/ a t) z))) (if (<= a 3.563583901840071e-16) (* (/ 1 a) (- (* y x) (* z t))) (- (* x (/ y a)) (/ z (/ a t))))))
Precision single result: (λ (x y z t a) 0)
|      |start prog|double|single|
|double|7.22403454|4.5638|58.347|
|single|25.9978013|26.032|8.1825|

Now running test: Data.Colour.CIE.Chromaticity:chromaCoords from colour-2.3.3
Starting program: (λ (x y) (- (- 1.0 x) y))
Precision double result: (λ (x y) (- (- 1.0 x) y))
Precision single result: (λ (x y) (- (- 1.0 x) y))
|      |start prog|double|single|
|double|0.000125  |0.0001|0.0001|
|single|0.00677000|0.0067|0.0067|

Now running test: Data.Colour.RGB:hslsv from colour-2.3.3, A
Starting program: (λ (x y) (/ (+ x y) 2.0))
Precision double result: (λ (x y) (/ (+ y x) 2.0))
Precision single result: (λ (x y) (/ (+ x y) 2.0))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.05913444|0.0591|0.0591|

Now running test: Data.Colour.RGB:hslsv from colour-2.3.3, B
Starting program: (λ (x y z t a) (+ (/ (* 60.0 (- x y)) (- z t)) (* a 120.0)))
Precision double result: (λ (x y z t a) (+ (* a 120.0) (/ (- x y) (/ (- z t) 60.0))))
Precision single result: (λ (x y z t a) (* 120.0 a))
|      |start prog|double|single|
|double|0.41750647|0.1451|29.221|
|single|18.8454340|18.777|7.4903|

Now running test: Data.Colour.RGB:hslsv from colour-2.3.3, C
Starting program: (λ (x y) (/ (- x y) (- 2.0 (+ x y))))
Precision double result: (λ (x y) (/ (- x y) (- 2.0 (+ y x))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.02103308|0.0210|#f    |
|single|#f        |#f    |#f    |

Now running test: Data.Colour.RGB:hslsv from colour-2.3.3, D
Starting program: (λ (x y) (/ (- x y) (+ x y)))
Precision double result: (λ (x y) (- (/ x (+ y x)) (log (exp (/ y (+ y x))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.03091992|0.0292|#f    |
|single|#f        |#f    |#f    |

Now running test: Data.Colour.RGB:hslsv from colour-2.3.3, E
Starting program: (λ (x y) (/ (- x y) x))
Precision double result: (λ (x y) (- 1 (/ y x)))
Precision single result: (λ (x y) (- 1 (/ 1 (/ x y))))
|      |start prog|double|single|
|double|0.01675   |0.0008|0.1094|
|single|26.1441464|13.069|13.069|

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, A
Starting program: (λ (x y) (- (+ x y) (* x y)))
Precision double result: (λ (x y) (- (+ y x) (* y x)))
Precision single result: (λ (x y) (- (+ x y) (* x y)))
|      |start prog|double|single|
|double|0.00973836|0.0097|0.0097|
|single|0.00657028|0.0065|0.0065|

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, B
Starting program: (λ (x y) (* x (+ y 1.0)))
Precision double result: (λ (x y) (+ (* 1.0 x) (* x y)))
Precision single result: (λ (x y) (* (+ 1.0 y) x))
|      |start prog|double|single|
|double|0.009625  |0.0096|0.0096|
|single|8.42603677|8.4264|8.4260|

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, C
Starting program: (λ (x y) (- (* x 2.0) y))
Precision double result: (λ (x y) (- (* x 2.0) y))
Precision single result: (λ (x y) (- (* 2.0 x) y))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.012     |0.012 |0.012 |

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, D
Starting program: (λ (x y z) (+ x (* (* (- y x) 6.0) (- (/ 2.0 3.0) z))))
Precision double result: (λ (x y z) (+ (* (* (- (/ 2.0 3.0) z) 6.0) (- y x)) x))
Precision single result: (λ (x y z) (+ x (* (* (cbrt (* (* 6.0 (- y x)) (- (/ 2.0 3.0) z))) (cbrt (* (* 6.0 (- y x)) (- (/ 2.0 3.0) z)))) (cbrt (* (* (cbrt (- (/ 2.0 3.0) z)) (cbrt (- (/ 2.0 3.0) z))) (* (* 6.0 (- y x)) (cbrt (- (/ 2.0 3.0) z))))))))
|      |start prog|double|single|
|double|0.38929768|0.2233|1.3135|
|single|6.32556159|6.2587|6.4816|

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, E
Starting program: (λ (x y z) (+ x (* (* (- y x) 6.0) z)))
Precision double result: (λ (x y z) (+ (* z (* (- y x) 6.0)) x))
Precision single result: (λ (x y z) (+ (* 6.0 (* (* (cbrt (cbrt (* z (- y x)))) (* (cbrt (cbrt (* z (- y x)))) (cbrt (cbrt (* z (- y x)))))) (* (cbrt (* z (- y x))) (cbrt (* z (- y x)))))) x))
|      |start prog|double|single|
|double|0.24773552|0.2477|0.9400|
|single|12.3725880|12.372|12.339|

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, F
Starting program: (λ (x) (+ x (/ 1.0 3.0)))
Precision double result: (λ (x) (+ x (/ 1.0 3.0)))
Precision single result: (λ (x) (+ x (/ 1.0 3.0)))
|      |start prog|double|single|
|double|0.01007312|0.0100|0.0100|
|single|0.01817403|0.0181|0.0181|

Now running test: Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, G
Starting program: (λ (x) (- x (/ 1.0 3.0)))
Precision double result: (λ (x) (- x (/ 1.0 3.0)))
Precision single result: (λ (x) (- x (/ 1.0 3.0)))
|      |start prog|double|single|
|double|0.00955742|0.0095|0.0095|
|single|0.01554903|0.0155|0.0155|

Now running test: Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, H
Starting program: (λ (x y) (* x (- 1.0 y)))
Precision double result: (λ (x y) (* (- 1.0 y) x))
Precision single result: (λ (x y) (* (- 1.0 y) x))
|      |start prog|double|single|
|double|0.01      |0.01  |0.01  |
|single|8.75774392|8.7577|8.7577|

Now running test: Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, I
Starting program: (λ (x y z) (* x (- 1.0 (* y z))))
Precision double result: (λ (x y z) (* (- 1.0 (* y z)) x))
Precision single result: (λ (x y z) (* x 1.0))
|      |start prog|double|single|
|double|2.97490077|2.9749|25.479|
|single|17.5141012|17.514|3.4331|

Now running test: Data.Colour.RGBSpace.HSV:hsv from colour-2.3.3, J
Starting program: (λ (x y z) (* x (- 1.0 (* (- 1.0 y) z))))
Precision double result: (λ (x y z) (if (<= (* (- 1.0 y) z) -1.9630403430963094e+32) (+ (+ (* x 1.0) (* (* x y) z)) (* (- 1.0) (* z x))) (if (<= (* (- 1.0 y) z) 6.105349774182464e+195) (* (- 1.0 (* (- 1.0 y) z)) x) (+ (+ (* x 1.0) (* (* x y) z)) (* (- 1.0) (* z x))))))
Precision single result: (λ (x y z) (* (sqrt (sqrt (- 1 z))) (* (sqrt (sqrt (- 1 z))) (* (* 1.0 x) (sqrt (- 1 z))))))
|      |start prog|double|single|
|double|3.22486556|0.7739|26.669|
|single|16.2457424|16.217|9.2311|

Now running test: Data.Colour.SRGB:invTransferFunction from colour-2.3.3
Starting program: (λ (x y) (/ (+ x y) (+ y 1.0)))
Precision double result: (λ (x y) (/ (+ x y) (+ y 1.0)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.015625  |0.0156|#f    |
|single|#f        |#f    |#f    |

Now running test: Data.Colour.SRGB:transferFunction from colour-2.3.3
Starting program: (λ (x y) (- (* (+ x 1.0) y) x))
Precision double result: (λ (x y) (- (* (+ 1.0 x) y) x))
Precision single result: (λ (x y) (- (* (+ 1.0 x) y) x))
|      |start prog|double|single|
|double|0.01179024|0.0117|0.0117|
|single|0.00432312|0.0043|0.0043|

Now running test: Data.Colour.CIE:lightness from colour-2.3.3
Starting program: (λ (x) (- (* x 116.0) 16.0))
Precision double result: (λ (x) (- (* 116.0 x) 16.0))
Precision single result: (λ (x) (- (* 116.0 x) 16.0))
|      |start prog|double|single|
|double|0.01232347|0.0123|0.0123|
|single|0.02708048|0.0270|0.0270|

Now running test: Data.Colour.CIE:cieLABView from colour-2.3.3, A
Starting program: (λ (x) (+ (* (/ 841.0 108.0) x) (/ 4.0 29.0)))
Precision double result: (λ (x) (+ (/ 4.0 29.0) (* (/ 841.0 108.0) x)))
Precision single result: (λ (x) (+ (/ 4.0 29.0) (* (/ 841.0 108.0) x)))
|      |start prog|double|single|
|double|0.072     |0.072 |0.072 |
|single|0.03869812|0.0386|0.0386|

Now running test: Data.Colour.CIE:cieLABView from colour-2.3.3, B
Starting program: (λ (x y) (* 500.0 (- x y)))
Precision double result: (λ (x y) (* (- x y) 500.0))
Precision single result: (λ (x y) (* (- x y) 500.0))
|      |start prog|double|single|
|double|0.018375  |0.0183|0.0183|
|single|0.32413394|0.3241|0.3241|

Now running test: Data.Colour.CIE:cieLABView from colour-2.3.3, C
Starting program: (λ (x y) (* 200.0 (- x y)))
Precision double result: (λ (x y) (* (- x y) 200.0))
Precision single result: (λ (x y) (* (- x y) 200.0))
|      |start prog|double|single|
|double|0.03075   |0.0307|0.0307|
|single|0.26940946|0.2694|0.2694|

Now running test: Data.Colour.CIE:cieLAB from colour-2.3.3, A
Starting program: (λ (x y) (* (* (- x (/ 16.0 116.0)) 3.0) y))
Precision double result: (λ (x y) (* y (* 3.0 (- x (/ 16.0 116.0)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.19811587|0.1981|#f    |
|single|#f        |#f    |#f    |

Now running test: Data.Colour.CIE:cieLAB from colour-2.3.3, B
Starting program: (λ (x) (/ (+ x 16.0) 116.0))
Precision double result: (λ (x) (/ (+ x 16.0) 116.0))
Precision single result: (λ (x) (+ 0.13793103448275862 (* x 0.008620689655172414)))
|      |start prog|double|single|
|double|0.005875  |0.0058|0.0551|
|single|0.16651385|0.1665|0.1635|

Now running test: Data.Colour.CIE:cieLAB from colour-2.3.3, C
Starting program: (λ (x y) (+ x (/ y 500.0)))
Precision double result: (λ (x y) (+ x (/ y 500.0)))
Precision single result: (λ (x y) (+ x (/ y 500.0)))
|      |start prog|double|single|
|double|0.00807312|0.0080|0.0080|
|single|0.26042884|0.2604|0.2604|

Now running test: Data.Colour.CIE:cieLAB from colour-2.3.3, D
Starting program: (λ (x y) (- x (/ y 200.0)))
Precision double result: (λ (x y) (- x (/ y 200.0)))
Precision single result: (λ (x y) (- x (/ y 200.0)))
|      |start prog|double|single|
|double|0.006     |0.006 |0.006 |
|single|0.21398752|0.2139|0.2139|

Now running test: Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, A
Starting program: (λ (x y z t a) (/ (- x (* y z)) (- t (* a z))))
Precision double result: (λ (x y z t a) (- (/ x (- t (* z a))) (* y (/ z (- t (* z a))))))
Precision single result: (λ (x y z t a) 0)
|      |start prog|double|single|
|double|10.3489478|8.0382|56.309|
|single|26.9128408|26.876|7.4792|

Now running test: Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, B
Starting program: (λ (x y z t) (/ x (- y (* z t))))
Precision double result: (λ (x y z t) (/ x (- y (* z t))))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|2.77923578|2.7792|46.146|
|single|20.8505312|20.850|4.6384|

Now running test: Diagrams.Solve.Tridiagonal:solveTriDiagonal from diagrams-solve-0.1, C
Starting program: (λ (x y z) (- x (* y z)))
Precision double result: (λ (x y z) (- x (* y z)))
Precision single result: (λ (x y z) (- x (* (sqrt (* y z)) (sqrt (* y z)))))
|      |start prog|double|single|
|double|0.0055    |0.0055|26.534|
|single|13.5809128|13.580|13.963|

Now running test: Diagrams.Solve.Tridiagonal:solveCyclicTriDiagonal from diagrams-solve-0.1, A
Starting program: (λ (x y z) (/ (* x y) z))
Precision double result: (λ (x y z) (if (<= (* y x) -3.0870796128910333e+157) (/ y (/ z x)) (if (<= (* y x) -9.357205893005281e-86) (/ (* y x) z) (if (<= (* y x) 3.753874629401308e-175) (* y (/ x z)) (if (<= (* y x) 4.465474352125588e+159) (/ (* y x) z) (* (* (/ 1 z) y) x))))))
Precision single result: (λ (x y z) (/ (* y x) z))
|      |start prog|double|single|
|double|5.81041190|1.4235|5.8104|
|single|20.4115691|20.389|20.411|

Now running test: Diagrams.Solve.Tridiagonal:solveCyclicTriDiagonal from diagrams-solve-0.1, B
Starting program: (λ (x y z t a b) (/ (+ x (/ (* y z) t)) (+ (+ a 1.0) (/ (* y b) t))))
Precision double result: (λ (x y z t a b) (if (or (<= y -5.731875620845827e+24) (not (<= y 236434288.95907858))) (* (/ 1 (+ (+ 1.0 a) (/ y (/ t b)))) (+ x (/ y (/ t z)))) (/ (+ (/ (/ y t) (/ 1 z)) x) (+ (/ (* b y) t) (+ 1.0 a)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|16.5387126|12.912|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, A
Starting program: (λ (x y z) (- x (* (* y 4.0) z)))
Precision double result: (λ (x y z) (- x (* (* 4.0 y) z)))
Precision single result: (λ (x y z) x)
|      |start prog|double|single|
|double|0.04404580|0.0440|27.310|
|single|13.6426942|13.642|5.7385|

Now running test: Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, B
Starting program: (λ (x y z) (* (/ 1.0 2.0) (+ x (* y (sqrt z)))))
Precision double result: (λ (x y z) (* (/ 1.0 2.0) (+ (* (sqrt z) y) x)))
Precision single result: (λ (x y z) (* x 0.5))
|      |start prog|double|single|
|double|0.14557963|0.1455|29.519|
|single|13.9337486|13.933|5.9779|

Now running test: Diagrams.Solve.Polynomial:quadForm from diagrams-solve-0.1, C
Starting program: (λ (x y) (/ x (* y 2.0)))
Precision double result: (λ (x y) (/ x (* 2.0 y)))
Precision single result: (λ (x y) (/ x (* 2.0 y)))
|      |start prog|double|single|
|double|0.02059577|0.0205|0.0205|
|single|13.3318110|13.331|13.331|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, A
Starting program: (λ (x y z t a b) (+ (- (* x 2.0) (* (* (* y 9.0) z) t)) (* (* a 27.0) b)))
Precision double result: (λ (x y z t a b) (if (<= y 9.082849946793715e-153) (+ (* b (* a 27.0)) (- (* x 2.0) (* t (* z (* y 9.0))))) (+ (- (* x 2.0) (* (* (* z 9.0) t) y)) (* 27.0 (* a b)))))
Precision single result: (λ (x y z t a b) (- (* b (* (cbrt (* 27.0 a)) (* (cbrt (* 27.0 a)) (cbrt (* 27.0 a))))) (* (- x) 2.0)))
|      |start prog|double|single|
|double|3.68521683|2.5879|19.247|
|single|25.1745033|25.145|16.249|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, B
Starting program: (λ (x y z) (- (* (* x 3.0) y) z))
Precision double result: (λ (x y z) (- (* (* 3.0 y) x) z))
Precision single result: (λ (x y z) (- (* (* 3.0 x) y) z))
|      |start prog|double|single|
|double|0.16372558|0.1501|0.1637|
|single|13.3572602|13.343|13.357|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, C
Starting program: (λ (x y) (/ x (* y 3.0)))
Precision double result: (λ (x y) (/ (/ x y) 3.0))
Precision single result: (λ (x y) (/ x (* 3.0 y)))
|      |start prog|double|single|
|double|0.23465337|0.2545|0.2346|
|single|13.4555341|13.453|13.455|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, D
Starting program: (λ (x y z t) (* (/ 1.0 3.0) (acos (* (/ (* 3.0 (/ x (* y 27.0))) (* z 2.0)) (sqrt t)))))
Precision double result: (λ (x y z t) (* 0.3333333333333333 (acos (* (* (sqrt t) (/ x (* z y))) 0.05555555555555555))))
Precision single result: (λ (x y z t) (* (acos (/ (* (sqrt t) (* (/ x (* 27.0 y)) 3.0)) (* 2.0 z))) (/ 1.0 3.0)))
|      |start prog|double|single|
|double|1.22289866|1.2496|1.2222|
|single|23.6565835|23.667|23.652|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, E
Starting program: (λ (x y z t a b c i j k) (- (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (* (* j 27.0) k)))
Precision double result: (λ (x y z t a b c i j k) (if (<= (- (+ (- (* t (* z (* (* 18.0 x) y))) (* t (* 4.0 a))) (* b c)) (* i (* x 4.0))) 2.7829647080952467e+287) (+ (- (- (* b c) (* i (* x 4.0))) (* 27.0 (* k j))) (* t (- (* (* z (* y x)) 18.0) (* 4.0 a)))) (- (- (* b c) (* i (* x 4.0))) (* 27.0 (* k j)))))
Precision single result: (λ (x y z t a b c i j k) (- (- (* c b) (* i (* 4.0 x))) (cbrt (* (* j (* k 27.0)) (* (* j (* k 27.0)) (* j (* k 27.0)))))))
|      |start prog|double|single|
|double|5.12342721|4.8836|35.239|
|single|29.4530162|26.428|26.571|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, F
Starting program: (λ (x y) (* (* x 27.0) y))
Precision double result: (λ (x y) (* (* x y) 27.0))
Precision single result: (λ (x y) (* (* y 27.0) x))
|      |start prog|double|single|
|double|0.29553186|0.2590|0.2852|
|single|14.0275777|13.969|14.012|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, G
Starting program: (λ (x y) (* (/ 1.0 2.0) (+ x y)))
Precision double result: (λ (x y) (* (/ 1.0 2.0) (+ x y)))
Precision single result: (λ (x y) (* (/ 1.0 2.0) (+ x y)))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.06359018|0.0635|0.0635|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, H
Starting program: (λ (x y z t) (+ (- x (/ y (* z 3.0))) (/ t (* (* z 3.0) y))))
Precision double result: (λ (x y z t) (+ (- x (/ (/ y z) 3.0)) (/ (/ t (* z 3.0)) y)))
Precision single result: (λ (x y z t) (+ (/ t (* (* 3.0 z) y)) (- x (/ (* (cbrt (/ y z)) (cbrt (/ y z))) (/ 3.0 (cbrt (/ y z)))))))
|      |start prog|double|single|
|double|3.44224369|1.7087|3.8155|
|single|27.0570464|26.958|27.065|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, I
Starting program: (λ (x y z t a) (/ (- (* x y) (* (* z 9.0) t)) (* a 2.0)))
Precision double result: (λ (x y z t a) (if (<= (- (* y x) (* t (* z 9.0))) -2.252860837078943e+255) (- (* (/ y (/ a x)) 0.5) (/ (* z 4.5) (/ a t))) (if (<= (- (* y x) (* t (* z 9.0))) 8.560175164296559e+222) (- (* 0.5 (/ (* y x) a)) (* (/ 4.5 a) (* z t))) (- (* (/ y (/ a x)) 0.5) (/ (* z 4.5) (/ a t))))))
Precision single result: (λ (x y z t a) 0)
|      |start prog|double|single|
|double|7.16123854|0.8256|57.762|
|single|25.9161790|25.992|8.1402|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, J
Starting program: (λ (x y z t a b c) (/ (+ (- (* (* x 9.0) y) (* (* (* z 4.0) t) a)) b) (* z c)))
Precision double result: (λ (x y z t a b c) (if (<= c -1.3854226376154543e+23) (- (+ (/ b (* c z)) (* (/ y (/ z (/ x c))) 9.0)) (* 4.0 (/ a (/ c t)))) (if (<= c 1.1693408116227116e-119) (- (+ (* 9.0 (/ (/ (* y x) z) c)) (/ b (* c z))) (* (/ (* a t) c) 4.0)) (if (<= c 2.1904482884692676e+192) (- (+ (* 9.0 (/ y (/ (* c z) x))) (/ (/ b z) c)) (* 4.0 (/ a (/ c t)))) (if (<= c 4.074325361178889e+295) (- (+ (/ b (* c z)) (* 9.0 (/ (/ y (* c z)) (/ 1 x)))) (* 4.0 (/ a (/ c t)))) (* (/ (+ (- (* y (* x 9.0)) (* a (* (* 4.0 z) t))) b) c) (/ 1 z)))))))
Precision single result: (λ (x y z t a b c) 0)
|      |start prog|double|single|
|double|19.9690981|8.1191|59.517|
|single|30.4077014|28.761|9.5553|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, K
Starting program: (λ (x y z t a b) (- (* (* 2.0 (sqrt x)) (cos (- y (/ (* z t) 3.0)))) (/ a (* b 3.0))))
Precision double result: (λ (x y z t a b) (if (<= (* (* 2.0 (sqrt x)) (cos (- y (/ (* t z) 3.0)))) 8.459792101030846e+153) (- (* (* 2.0 (sqrt x)) (- (* (* (cbrt (* (cbrt (cos (* (/ z 3.0) t))) (* (cbrt (cos (* (/ z 3.0) t))) (cbrt (cos (* (/ z 3.0) t)))))) (* (cbrt (cos (* (/ z 3.0) t))) (cbrt (cos (* (/ z 3.0) t))))) (cos y)) (cbrt (* (* (sin (/ z (/ 3.0 t))) (sin (/ z (/ 3.0 t)))) (* (sin (/ z (/ 3.0 t))) (- (pow (sin y) 3))))))) (/ a (* 3.0 b))) (- (* (* 2.0 (sqrt x)) (- 1 (* 1/2 (pow y 2)))) (/ a (* 3.0 b)))))
Precision single result: (λ (x y z t a b) (- (+ (* (* y -1/2) (* (* 2.0 y) (sqrt x))) (* 2.0 (sqrt x))) (/ a (* b 3.0))))
|      |start prog|double|single|
|double|20.1184926|17.494|36.322|
|single|28.0563454|23.885|23.702|

Now running test: Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, A
Starting program: (λ (x y) (- x (* (/ 3.0 8.0) y)))
Precision double result: (λ (x y) (- x (* (/ 3.0 8.0) y)))
Precision single result: (λ (x y) (- x (* (* y (cbrt (/ 3.0 8.0))) (cbrt (* (/ 3.0 8.0) (/ 3.0 8.0))))))
|      |start prog|double|single|
|double|0.08825   |0.0882|0.9515|
|single|0.08369204|0.0836|0.0853|

Now running test: Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, B
Starting program: (λ (x y z t) (+ (- (* (/ 1.0 8.0) x) (/ (* y z) 2.0)) t))
Precision double result: (λ (x y z t) (+ t (- (* (/ 1.0 8.0) x) (* (/ y 2.0) z))))
Precision single result: (λ (x y z t) (+ t (* x 0.125)))
|      |start prog|double|single|
|double|0.02701868|0.0078|17.653|
|single|13.5531095|13.556|5.3843|

Now running test: Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, C
Starting program: (λ (x y z t a b c) (+ (- (+ (* x y) (/ (* z t) 16.0)) (/ (* a b) 4.0)) c))
Precision double result: (λ (x y z t a b c) (+ (* (+ (+ (* (/ t 16.0) z) (* (/ a 4.0) b)) (* y x)) (- (/ (+ (* y x) (/ (* t z) 16.0)) (+ (+ (* y x) (/ (* t z) 16.0)) (/ (* a b) 4.0))) (/ (/ (* a b) 4.0) (+ (+ (* y x) (/ (* t z) 16.0)) (/ (* a b) 4.0))))) c))
Precision single result: (λ (x y z t a b c) (+ c (- (+ (/ (* (* (cbrt (* z t)) (cbrt (* z t))) (cbrt (* z t))) 16.0) (* y x)) (/ (* b a) 4.0))))
|      |start prog|double|single|
|double|0.13940379|0.2664|0.4234|
|single|25.3494833|30.026|25.351|

Now running test: Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, D
Starting program: (λ (x y z) (- (/ (* x y) 2.0) (/ z 8.0)))
Precision double result: (λ (x y z) (- (/ (* y x) 2.0) (/ z 8.0)))
Precision single result: (λ (x y z) (- (/ (/ x (* (cbrt (/ 2.0 y)) (cbrt (/ 2.0 y)))) (cbrt (/ 2.0 y))) (/ z 8.0)))
|      |start prog|double|single|
|double|0.01323198|0.0132|0.6193|
|single|13.7456676|13.745|13.775|

Now running test: Diagrams.Solve.Polynomial:quartForm  from diagrams-solve-0.1, E
Starting program: (λ (x y) (- x (/ y 4.0)))
Precision double result: (λ (x y) (- x (/ y 4.0)))
Precision single result: (λ (x y) (- x (/ y 4.0)))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.03144081|0.0314|0.0314|

Now running test: Text.Parsec.Token:makeTokenParser from parsec-3.1.9, A
Starting program: (λ (x y) (/ (+ x y) 10.0))
Precision double result: (λ (x y) (/ (+ x y) 10.0))
Precision single result: (λ (x y) (* (+ x y) 0.1))
|      |start prog|double|single|
|double|0.015125  |0.0151|0.3592|
|single|0.24369898|0.2436|0.2610|

Now running test: Text.Parsec.Token:makeTokenParser from parsec-3.1.9, B
Starting program: (λ (x y z) (* (+ x y) z))
Precision double result: (λ (x y z) (* (+ y x) z))
Precision single result: (λ (x y z) 0)
|      |start prog|double|single|
|double|0.01275   |0.0127|59.035|
|single|17.1815215|17.181|9.3622|

Now running test: Numeric.Interval.Internal:bisect from intervals-0.7.1, A
Starting program: (λ (x y) (+ x (/ (- y x) 2.0)))
Precision double result: (λ (x y) (* (+ x y) 0.5))
Precision single result: (λ (x y) (* (+ x y) 0.5))
|      |start prog|double|single|
|double|0.01622734|0     |0     |
|single|0.05263588|0.0468|0.0468|

Now running test: Numeric.Interval.Internal:scale from intervals-0.7.1, B
Starting program: (λ (x y) (/ (* x y) 2.0))
Precision double result: (λ (x y) (/ (* y x) 2.0))
Precision single result: (λ (x y) (/ (* x y) 2.0))
|      |start prog|double|single|
|double|0.02867543|0.0286|0.0286|
|single|13.7903540|13.790|13.790|

Now running test: Linear.V2:$cdot from linear-1.19.1.3, A
Starting program: (λ (x y z t) (+ (* x y) (* z t)))
Precision double result: (λ (x y z t) (+ (* x y) (* z t)))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|0.01225   |0.0122|60.888|
|single|21.2659413|21.265|11.604|

Now running test: Linear.V3:cross from linear-1.19.1.3
Starting program: (λ (x y z t) (- (* x y) (* z t)))
Precision double result: (λ (x y z t) (- (* y x) (* z t)))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|0.009375  |0.0093|60.933|
|single|21.1502555|21.150|11.682|

Now running test: Linear.V3:$cdot from linear-1.19.1.3, B
Starting program: (λ (x y z t a b) (+ (+ (* x y) (* z t)) (* a b)))
Precision double result: (λ (x y z t a b) (+ (* a b) (+ (* y x) (* t z))))
Precision single result: (λ (x y z t a b) 0)
|      |start prog|double|single|
|double|0.02131544|0.0213|62.230|
|single|25.4074779|25.407|15.851|

Now running test: Linear.V4:$cdot from linear-1.19.1.3, C
Starting program: (λ (x y z t a b c i) (+ (+ (+ (* x y) (* z t)) (* a b)) (* c i)))
Precision double timed out or failed
Precision single result: (λ (x y z t a b c i) (+ (+ (* b a) (+ (* y x) (* z t))) (* c i)))
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|27.8130413|#f    |27.813|

Now running test: Main:bigenough2 from A
Starting program: (λ (x y z) (+ x (* y (+ z x))))
Precision double result: (λ (x y z) (+ (* (+ x z) y) x))
Precision single result: (λ (x y z) (+ (* (+ x z) y) x))
|      |start prog|double|single|
|double|0.01527124|0.0152|0.0152|
|single|11.7658842|11.765|11.765|

Now running test: Main:bigenough1 from B
Starting program: (λ (x) (+ x (* x x)))
Precision double result: (λ (x) (+ (* x x) x))
Precision single result: (λ (x) (+ (* x x) x))
|      |start prog|double|single|
|double|0.010125  |0.0101|0.0101|
|single|0.03847180|0.0384|0.0384|

Now running test: Main:bigenough3 from C
Starting program: (λ (x) (- (sqrt (+ x 1.0)) (sqrt x)))
Precision double result: (λ (x) (/ 1.0 (+ (sqrt (+ x 1.0)) (sqrt x))))
Precision single result: (λ (x) (exp (- (log 1.0) (log (+ (* (* (sqrt (sqrt (sqrt x))) (sqrt (sqrt (sqrt x)))) (sqrt (sqrt x))) (sqrt (+ 1.0 x)))))))
|      |start prog|double|single|
|double|29.4935935|0.1639|2.3900|
|single|14.8684462|1.7892|1.9210|

Now running test: Linear.Quaternion:$c/ from linear-1.19.1.3, A
Starting program: (λ (x y z) (+ (+ (+ (* x y) (* z z)) (* z z)) (* z z)))
Precision double result: (λ (x y z) (+ (+ (* z z) (* y x)) (* z (+ z z))))
Precision single result: (λ (x y z) (+ (+ (* (cbrt (* z z)) (* (* (* (pow (cbrt (* z z)) 1/3) (cbrt (cbrt (* z z)))) (cbrt (cbrt (* z z)))) (cbrt (* z z)))) (+ (* z z) (* y x))) (* z z)))
|      |start prog|double|single|
|double|0.12642145|0.1190|0.8330|
|single|13.5740418|13.571|13.583|

Now running test: Linear.Quaternion:$c/ from linear-1.19.1.3, B
Starting program: (λ (x y z) (+ (- (- (* x y) (* y z)) (* y y)) (* y y)))
Precision double result: (λ (x y z) (* (- x z) y))
Precision single result: (λ (x y z) 0)
|      |start prog|double|single|
|double|17.6097190|0.015 |59.132|
|single|18.2368901|17.430|9.3264|

Now running test: Linear.Quaternion:$c/ from linear-1.19.1.3, C
Starting program: (λ (x y z) (- (- (+ (* x y) (* y y)) (* y z)) (* y y)))
Precision double result: (λ (x y z) (+ (* y x) (* y (- z))))
Precision single result: (λ (x y z) (* (- x z) y))
|      |start prog|double|single|
|double|17.3451989|0.0164|0.0143|
|single|18.0467845|17.145|17.134|

Now running test: Linear.Quaternion:$c/ from linear-1.19.1.3, D
Starting program: (λ (x y z) (- (+ (- (* x y) (* y y)) (* y y)) (* y z)))
Precision double result: (λ (x y z) (* (- x z) y))
Precision single result: (λ (x y z) 0)
|      |start prog|double|single|
|double|13.0660849|0.0121|59.118|
|single|17.9284721|17.307|9.2788|

Now running test: Linear.Quaternion:$c/ from linear-1.19.1.3, E
Starting program: (λ (x y) (+ (+ (+ (* x x) (* y y)) (* y y)) (* y y)))
Precision double result: (λ (x y) (+ (* (+ y y) y) (+ (* x x) (* y y))))
Precision single result: (λ (x y) (+ (+ (* y y) (+ (* (* (cbrt (* y y)) (cbrt (* y y))) (cbrt (* y y))) (* x x))) (* (* (cbrt (* y y)) (cbrt (* y y))) (cbrt (* y y)))))
|      |start prog|double|single|
|double|0.13899060|0.1297|0.4741|
|single|0.11839417|0.1138|0.1324|

Now running test: Graphics.Rasterific.Linear:$cquadrance from Rasterific-0.6.1
Starting program: (λ (x y) (+ (* x x) (* y y)))
Precision double result: (λ (x y) (* (sqrt (+ (* y y) (* x x))) (sqrt (+ (* y y) (* x x)))))
Precision single result: (λ (x y) (+ (* y y) (* (cbrt (* x x)) (* (cbrt (* x x)) (* (sqrt (cbrt (* x x))) (sqrt (cbrt (* x x))))))))
|      |start prog|double|single|
|double|0.0055    |0.0140|0.6173|
|single|0.11164868|0.1122|0.1605|

Now running test: Linear.Quaternion:$ctanh from linear-1.19.1.3
Starting program: (λ (x y z) (/ (* x (/ (sin y) y)) z))
Precision double result: (λ (x y z) (if (or (<= z -2.8185065034880113e+165) (not (<= z 1.7212115324315846e-62))) (/ (* x (/ (sin y) y)) z) (/ x (/ z (/ 1 (/ y (sin y)))))))
Precision single result: (λ (x y z) (* (cbrt (/ x z)) (* (cbrt (/ x z)) (cbrt (/ x z)))))
|      |start prog|double|single|
|double|2.68567547|0.7068|28.856|
|single|28.8413638|28.841|15.924|

Now running test: Linear.Quaternion:$ccosh from linear-1.19.1.3
Starting program: (λ (x y) (/ (* (sin x) (sinh y)) x))
Precision double result: (λ (x y) (* (sinh y) (/ (sin x) x)))
Precision single result: (λ (x y) (- y (* (* 1/6 y) (- (* x x) (* y y)))))
|      |start prog|double|single|
|double|14.0280364|0.0918|31.499|
|single|26.8397992|26.839|14.834|

Now running test: Linear.Quaternion:$csinh from linear-1.19.1.3
Starting program: (λ (x y) (* (cosh x) (/ (sin y) y)))
Precision double result: (λ (x y) (* (cosh x) (/ (sin y) y)))
Precision single result: (λ (x y) (* (- (+ (* 1/120 (pow y 4)) 1) (* (pow y 2) 1/6)) (cosh x)))
|      |start prog|double|single|
|double|0.14299924|0.1429|30.789|
|single|27.7407600|27.740|15.586|

Now running test: Linear.Quaternion:$ctan from linear-1.19.1.3
Starting program: (λ (x y z) (/ (* (cosh x) (/ y x)) z))
Precision double result: (λ (x y z) (if (or (<= z -4.945768567559668e-59) (not (<= z 46845612.122368954))) (/ (* (+ (/ y (exp x)) (* y (exp x))) 1/2) (* z x)) (/ (/ y z) (/ x (cosh x)))))
Precision single result: (λ (x y z) (/ (/ y z) (- (+ (* 5/24 (pow x 5)) x) (* (pow x 3) 1/2))))
|      |start prog|double|single|
|double|7.42055332|0.4300|7.7111|
|single|27.0617329|26.943|26.799|

Now running test: Linear.Quaternion:$ccos from linear-1.19.1.3
Starting program: (λ (x y) (* (sin x) (/ (sinh y) y)))
Precision double result: (λ (x y) (* (sin x) (/ (sinh y) y)))
Precision single result: (λ (x y) (* (* (* (cbrt (sin x)) (cbrt (sin x))) (* (* (cbrt (cbrt (sin x))) (cbrt (cbrt (sin x)))) (cbrt (cbrt (sin x))))) (+ (* 1/120 (pow y 4)) (+ 1 (* 1/6 (pow y 2))))))
|      |start prog|double|single|
|double|0.02485534|0.0248|2.3690|
|single|28.3983212|28.398|15.022|

Now running test: Linear.Quaternion:$csin from linear-1.19.1.3
Starting program: (λ (x y) (* (cos x) (/ (sinh y) y)))
Precision double result: (λ (x y) (* (cos x) (/ (sinh y) y)))
Precision single result: (λ (x y) (* (log (log (* (* (cbrt (exp (exp (cos x)))) (cbrt (exp (exp (cos x))))) (cbrt (exp (exp (cos x))))))) (+ (* 1/120 (pow y 4)) (+ (* 1/6 (pow y 2)) 1))))
|      |start prog|double|single|
|double|0.01368872|0.0136|1.7568|
|single|27.9595336|27.959|14.925|

Now running test: Linear.Quaternion:$clog from linear-1.19.1.3
Starting program: (λ (x y) (sqrt (+ (* x x) y)))
Precision double result: (λ (x y) (if (<= x -2.401200916230685e+147) (- (/ y (/ x -1/2)) x) (if (<= x 7.462397572364918e+135) (sqrt (+ (* x x) y)) (+ (* 1/2 (/ y x)) x))))
Precision single timed out or failed
|      |start prog|double|single|
|double|19.8808914|0.0207|#f    |
|single|#f        |#f    |#f    |

Now running test: Linear.Quaternion:$cexp from linear-1.19.1.3
Starting program: (λ (x y) (* x (/ (sin y) y)))
Precision double result: (λ (x y) (* (/ (sin y) y) x))
Precision single result: (λ (x y) x)
|      |start prog|double|single|
|double|0.12983496|0.1298|30.650|
|single|27.5577240|27.557|8.2976|

Now running test: Linear.Matrix:det44 from linear-1.19.1.3
Starting program: (λ (x y z t a b c i j k y0 y1 y2 y3 y4 y5) (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0)))))
Precision double result: (λ (x y z t a b c i j k y0 y1 y2 y3 y4 y5) (- (+ (* (- (* y1 y4) (* y0 y5)) (- (* y2 k) (* y3 j))) (* (- (* x y) (* t z)) (- (* a b) (* c i)))) (- (- (* (* (cbrt (* (- (* x j) (* k z)) (- (* y0 b) (* y1 i)))) (cbrt (* (cbrt (- (* y0 b) (* y1 i))) (* (* (cbrt (- (* y0 b) (* y1 i))) (cbrt (- (* y0 b) (* y1 i)))) (- (* x j) (* k z)))))) (cbrt (* (- (* x j) (* k z)) (- (* y0 b) (* y1 i))))) (* (- (* y2 x) (* z y3)) (- (* c y0) (* a y1)))) (- (* (- (* y4 b) (* y5 i)) (- (* j t) (* k y))) (* (- (* y4 c) (* y5 a)) (- (* t y2) (* y y3)))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|25.2071807|25.297|#f    |
|single|#f        |#f    |#f    |

Now running test: Linear.Matrix:det33 from linear-1.19.1.3
Starting program: (λ (x y z t a b c i j) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y)))))
Precision double result: (λ (x y z t a b c i j) (+ (- (* (- (* z y) (* a t)) x) (* (- (* z c) (* i a)) b)) (* (* (cbrt (* (* (cbrt (* j (- (* c t) (* i y)))) (cbrt (* j (- (* c t) (* i y))))) (cbrt (* j (- (* c t) (* i y)))))) (cbrt (* j (- (* c t) (* i y))))) (* (cbrt (- (* c t) (* i y))) (cbrt j)))))
Precision single result: (λ (x y z t a b c i j) 0)
|      |start prog|double|single|
|double|11.2700749|11.541|62.256|
|single|28.8005232|28.800|14.689|

Now running test: Linear.Matrix:fromQuaternion from linear-1.19.1.3, A
Starting program: (λ (x y) (* 2.0 (- (* x x) (* x y))))
Precision double result: (λ (x y) (* (- x y) (* 2.0 x)))
Precision single result: (λ (x y) (* (- x y) (* 2.0 x)))
|      |start prog|double|single|
|double|0.01639624|0.0098|0.0098|
|single|9.42727056|9.4231|9.4231|

Now running test: Linear.Matrix:fromQuaternion from linear-1.19.1.3, B
Starting program: (λ (x y) (* 2.0 (+ (* x x) (* x y))))
Precision double result: (λ (x y) (* (+ x y) (* 2.0 x)))
Precision single result: (λ (x y) (* (+ x y) (* 2.0 x)))
|      |start prog|double|single|
|double|0.01757312|0.0083|0.0083|
|single|9.19761711|9.1936|9.1936|

Now running test: Linear.Projection:inverseInfinitePerspective from linear-1.19.1.3
Starting program: (λ (x y z t) (* (- (* x y) (* z y)) t))
Precision double result: (λ (x y z t) (if (<= (* t (- (* y x) (* z y))) -1.970606888563847e+251) (* (- x z) (* t y)) (if (<= (* t (- (* y x) (* z y))) 1.0025302747574846e+295) (* t (- (* y x) (* z y))) (* (- x z) (* t y)))))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|6.54089663|1.6449|55.306|
|single|23.5816629|23.521|6.7726|

Now running test: Linear.Projection:infinitePerspective from linear-1.19.1.3, A
Starting program: (λ (x y z t) (/ (* x 2.0) (- (* y z) (* t z))))
Precision double result: (λ (x y z t) (if (or (<= z -3.076439097065832e-31) (not (<= z 2.3930553992656453e-06))) (/ (* 2.0 (/ x (- y t))) z) (/ (* 2.0 x) (* z (- y t)))))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|6.80411083|2.0766|45.097|
|single|26.7994339|20.293|4.1998|

Now running test: Linear.Projection:inversePerspective from linear-1.19.1.3, B
Starting program: (λ (x y) (/ (- x y) (* (* x 2.0) y)))
Precision double result: (λ (x y) (- (/ 0.5 y) (/ 0.5 x)))
Precision single result: (λ (x y) (- (/ 0.5 y) (/ 0.5 x)))
|      |start prog|double|single|
|double|14.4844018|0.0126|0.0126|
|single|29.5181209|0.3604|0.3604|

Now running test: Linear.Projection:inversePerspective from linear-1.19.1.3, C
Starting program: (λ (x y) (/ (+ x y) (* (* x 2.0) y)))
Precision double result: (λ (x y) (+ (/ 0.5 y) (/ 0.5 x)))
Precision single result: (λ (x y) (+ (/ 0.5 y) (* (cbrt (/ 0.5 x)) (* (cbrt (/ 0.5 x)) (* (cbrt (/ 1 x)) (cbrt 0.5))))))
|      |start prog|double|single|
|double|14.5892438|0.0128|0.6609|
|single|29.7357473|0.4225|0.5235|

Now running test: Linear.Projection:perspective from linear-1.19.1.3, A
Starting program: (λ (x y) (/ (+ x y) (- x y)))
Precision double result: (λ (x y) (/ (+ x y) (- x y)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.02575244|0.0257|#f    |
|single|#f        |#f    |#f    |

Now running test: Linear.Projection:perspective from linear-1.19.1.3, B
Starting program: (λ (x y) (/ (* (* x 2.0) y) (- x y)))
Precision double result: (λ (x y) (if (or (<= y -0.0014172573500038253) (not (<= y 1.4208307423572617e+28))) (* (/ 1 (/ (- x y) (* y 2.0))) x) (* (/ x (- x y)) (* y 2.0))))
Precision single result: (λ (x y) 0)
|      |start prog|double|single|
|double|14.6731628|0.1128|60.851|
|single|25.9188811|25.756|4.7497|

Now running test: Physics.ForceLayout:coulombForce from force-layout-0.4.0.2
Starting program: (λ (x y) (/ x (* y y)))
Precision double result: (λ (x y) (/ (/ x y) y))
Precision single result: (λ (x y) (/ 1 (/ y (/ x y))))
|      |start prog|double|single|
|double|10.0879035|0.1701|0.6153|
|single|13.8003966|12.926|12.945|

Now running test: Codec.Picture.Types:toneMapping from JuicyPixels-3.2.6.1
Starting program: (λ (x y) (/ (* x (+ (/ x y) 1.0)) (+ x 1.0)))
Precision double result: (λ (x y) (* (/ x (+ 1.0 x)) (+ 1.0 (/ x y))))
Precision single result: (λ (x y) (* (/ x (+ 1.0 x)) (+ 1.0 (/ x y))))
|      |start prog|double|single|
|double|8.63342997|0.0584|0.0584|
|single|14.5954872|14.496|14.496|

Now running test: Codec.Picture.Jpg.FastDct:referenceDct from JuicyPixels-3.2.6.1
Starting program: (λ (x y z t a b) (* (* x (cos (/ (* (* (+ (* y 2.0) 1.0) z) t) 16.0))) (cos (/ (* (* (+ (* a 2.0) 1.0) b) t) 16.0))))
Precision double result: (λ (x y z t a b) (* x (log (pow E (cos (* 0.0625 (* b t)))))))
Precision single result: (λ (x y z t a b) x)
|      |start prog|double|single|
|double|45.9452465|44.862|44.420|
|single|29.2588570|22.079|4.6091|

Now running test: Main:i from 
Starting program: (λ (x) (+ (+ (+ (+ x x) x) x) x))
Precision double result: (λ (x) (+ x (+ x (+ (+ x x) x))))
Precision single result: (λ (x) (+ x (+ x (+ (+ x x) x))))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.08466090|0.0846|0.0846|

Now running test: Main:z from 
Starting program: (λ (x y z t) (+ (+ (+ (- (sqrt (+ x 1.0)) (sqrt x)) (- (sqrt (+ y 1.0)) (sqrt y))) (- (sqrt (+ z 1.0)) (sqrt z))) (- (sqrt (+ t 1.0)) (sqrt t))))
Precision double result: (λ (x y z t) (+ (+ (/ 1.0 (+ (sqrt x) (sqrt (+ x 1.0)))) (- (sqrt (+ t 1.0)) (sqrt t))) (+ (/ 1.0 (+ (sqrt y) (sqrt (+ 1.0 y)))) (- (sqrt (+ 1.0 z)) (sqrt z)))))
Precision single result: (λ (x y z t) (+ (+ (- (sqrt (+ z 1.0)) (sqrt z)) (- (sqrt (+ y 1.0)) (sqrt y))) (+ (- (sqrt (+ t 1.0)) (sqrt t)) (- (sqrt (+ x 1.0)) (sqrt x)))))
|      |start prog|double|single|
|double|5.33041555|2.8598|5.3305|
|single|27.0415762|20.789|27.041|

Now running test: Diagrams.ThreeD.Shapes:frustum from diagrams-lib-1.3.0.3, A
Starting program: (λ (x y z t a b c i) (* 2.0 (- (+ (* x y) (* z t)) (* (* (+ a (* b c)) c) i))))
Precision double result: (λ (x y z t a b c i) (- (* 2.0 (+ (* z t) (* y x))) (* (* (cbrt (* (* 2.0 (* i c)) (+ (* b c) a))) (cbrt (* (* 2.0 (* i c)) (+ (* b c) a)))) (cbrt (* (* 2.0 (* i c)) (+ (* b c) a))))))
Precision single result: (λ (x y z t a b c i) 0)
|      |start prog|double|single|
|double|6.30006926|2.0649|62.239|
|single|28.5627389|28.564|15.358|

Now running test: Diagrams.ThreeD.Shapes:frustum from diagrams-lib-1.3.0.3, B
Starting program: (λ (x y z) (+ x (* (- y x) z)))
Precision double result: (λ (x y z) (+ (* (- y x) z) x))
Precision single result: (λ (x y z) x)
|      |start prog|double|single|
|double|0.01432312|0.0143|34.448|
|single|12.1041690|12.104|6.5541|

Now running test: Diagrams.ThreeD.Transform:aboutY from diagrams-lib-1.3.0.3
Starting program: (λ (x y z) (+ (* x (cos y)) (* z (sin y))))
Precision double result: (λ (x y z) (+ (* (sin y) z) (* (cbrt (cos y)) (* (pow (* (cos y) (cos y)) 1/3) x))))
Precision single result: (λ (x y z) (+ x (* (* (* (cbrt (sin y)) (cbrt (sin y))) (cbrt (sin y))) z)))
|      |start prog|double|single|
|double|0.1255    |0.2337|15.264|
|single|17.3628853|17.362|17.390|

Now running test: Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, A
Starting program: (λ (x y z) (- (* x (cos y)) (* z (sin y))))
Precision double result: (λ (x y z) (- (* (cbrt (cos y)) (* x (cbrt (cbrt (pow (cos y) 6))))) (* z (sin y))))
Precision single result: (λ (x y z) (- (* x (cos y)) (* (* (cbrt (* z (sin y))) (cbrt (* z (sin y)))) (cbrt (* z (sin y))))))
|      |start prog|double|single|
|double|0.13191524|0.2968|0.6116|
|single|16.9594499|16.959|16.963|

Now running test: Diagrams.ThreeD.Transform:aboutX from diagrams-lib-1.3.0.3, B
Starting program: (λ (x y z) (+ (* x (sin y)) (* z (cos y))))
Precision double result: (λ (x y z) (+ (* x (sin y)) (* (cbrt (* (cos y) (cos y))) (* z (cbrt (cos y))))))
Precision single result: (λ (x y z) (+ (* (* (cbrt (sin y)) (* (cbrt (sin y)) (cbrt (sin y)))) x) z))
|      |start prog|double|single|
|double|0.12368648|0.2847|15.189|
|single|17.1388272|17.139|17.183|

Now running test: Diagrams.Color.HSV:lerp  from diagrams-contrib-1.3.0.5
Starting program: (λ (x y z) (+ (* (- 1.0 x) y) (* x z)))
Precision double result: (λ (x y z) (+ (* (- 1.0 x) y) (* z x)))
Precision single result: (λ (x y z) (+ (* (* (cbrt (* z x)) (cbrt (* z x))) (cbrt (* z x))) (* (- 1.0 x) y)))
|      |start prog|double|single|
|double|0.0145    |0.0145|0.5028|
|single|12.1149604|12.114|12.123|

Now running test: Diagrams.TwoD.Segment.Bernstein:evaluateBernstein from diagrams-lib-1.3.0.3
Starting program: (λ (x y z) (/ (* x (+ (- y z) 1.0)) z))
Precision double result: (λ (x y z) (if (or (<= x -6.735793756076037e-61) (not (<= x 1.7999256201790732e-193))) (- (* (+ 1.0 y) (/ x z)) x) (- (/ (* (+ 1.0 y) x) z) x)))
Precision single result: (λ (x y z) (- (* (/ x z) (+ y 1.0)) x))
|      |start prog|double|single|
|double|9.42269314|0.3395|1.6206|
|single|27.4780775|16.072|16.072|

Now running test: Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, A
Starting program: (λ (x y) (* (* (* x 3.0) x) y))
Precision double result: (λ (x y) (* x (* (* 3.0 y) x)))
Precision single result: (λ (x y) (* (* y x) (* 3.0 x)))
|      |start prog|double|single|
|double|10.3835342|0.2623|0.2501|
|single|13.8431343|13.145|13.130|

Now running test: Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, B
Starting program: (λ (x y) (* (* (* x 3.0) y) y))
Precision double result: (λ (x y) (* y (* (* x y) 3.0)))
Precision single result: (λ (x y) (* (* y (* 3.0 x)) y))
|      |start prog|double|single|
|double|0.27619234|0.2563|0.2761|
|single|13.0497558|13.033|13.049|

Now running test: Diagrams.Segment:$catParam from diagrams-lib-1.3.0.3, C
Starting program: (λ (x) (* (* x x) x))
Precision double result: (λ (x) (pow x 3))
Precision single result: (λ (x) (pow x 3))
|      |start prog|double|single|
|double|0.134875  |0     |0     |
|single|0.05287782|0.0538|0.0538|

Now running test: Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, D
Starting program: (λ (x) (* 3.0 (+ (- (* (* x 3.0) x) (* x 4.0)) 1.0)))
Precision double result: (λ (x) (- (+ (* (* x 9.0) x) 3.0) (* 12.0 x)))
Precision single result: (λ (x) (+ (* (* x (- (* x 3.0) 4.0)) 3.0) (* 3.0 1.0)))
|      |start prog|double|single|
|double|0.14108740|0.0963|0.1295|
|single|0.04273609|0.0341|0.0331|

Now running test: Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, E
Starting program: (λ (x) (* (* 3.0 (- 2.0 (* x 3.0))) x))
Precision double result: (λ (x) (* x (- 6.0 (* x 9.0))))
Precision single result: (λ (x) (* (* x (- 2.0 (* x 3.0))) 3.0))
|      |start prog|double|single|
|double|0.24920300|0.2037|0.2487|
|single|0.09250302|0.0901|0.0942|

Now running test: Diagrams.Tangent:$catParam from diagrams-lib-1.3.0.3, F
Starting program: (λ (x) (* (* x 3.0) x))
Precision double result: (λ (x) (* x (* 3.0 x)))
Precision single result: (λ (x) (* x (* 3.0 x)))
|      |start prog|double|single|
|double|0.17475   |0.1747|0.1747|
|single|0.06051917|0.0605|0.0605|

Now running test: Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, A
Starting program: (λ (x y z t) (/ (+ x (/ (- (* y z) x) (- (* t z) x))) (+ x 1.0)))
Precision double result: (λ (x y z t) (/ (+ (- (/ y (- t (/ x z))) (/ x (- (* t z) x))) x) (+ 1.0 x)))
Precision single timed out or failed
|      |start prog|double|single|
|double|7.21302280|0.3567|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, B
Starting program: (λ (x y) (/ (* x y) (+ y 1.0)))
Precision double result: (λ (x y) (* (/ y (+ 1.0 y)) x))
Precision single timed out or failed
|      |start prog|double|single|
|double|7.47887694|0.0158|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, C
Starting program: (λ (x y) (/ (- x y) (- 1.0 y)))
Precision double result: (λ (x y) (/ (- x y) (- 1.0 y)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.01625   |0.0162|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.Trail:splitAtParam  from diagrams-lib-1.3.0.3, D
Starting program: (λ (x y) (- 1.0 (/ (* (- 1.0 x) y) (+ y 1.0))))
Precision double result: (λ (x y) (if (or (<= y -12159.403076122911) (not (<= y 12874.153995529656))) (+ (+ (/ (- (/ 1.0 y) 1.0) (* y y)) (/ 1.0 y)) (* x (/ y (+ 1.0 y)))) (+ (+ (* (/ y (+ 1.0 y)) (- 1.0)) 1.0) (/ (* x y) (+ 1.0 y)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|21.7952638|0.0337|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.TwoD.Arc:bezierFromSweepQ1 from diagrams-lib-1.3.0.3
Starting program: (λ (x y) (/ (* (- 1.0 x) (- 3.0 x)) (* y 3.0)))
Precision double result: (λ (x y) (* (/ (/ (- 3.0 x) 3.0) y) (- 1.0 x)))
Precision single result: (λ (x y) (* (- 1.0 x) (- (/ 1.0 y) (* 0.3333333333333333 (/ x y)))))
|      |start prog|double|single|
|double|5.40960812|0.1327|0.1680|
|single|5.63162766|4.5611|4.5621|

Now running test: Diagrams.TwoD.Arc:arcBetween from diagrams-lib-1.3.0.3
Starting program: (λ (x y) (/ (- (* x x) (* (* y 4.0) y)) (+ (* x x) (* (* y 4.0) y))))
Precision double result: (λ (x y) (if (<= (* y (* 4.0 y)) 2.7507792552213108e-247) 1 (if (<= (* y (* 4.0 y)) 1.7836421413065344e+308) (/ (- (* x x) (* y (* 4.0 y))) (+ (* x x) (* y (* 4.0 y)))) -1.0)))
Precision single timed out or failed
|      |start prog|double|single|
|double|31.0908891|12.117|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.TwoD.Ellipse:ellipse from diagrams-lib-1.3.0.3
Starting program: (λ (x) (sqrt (- 1.0 (* x x))))
Precision double result: (λ (x) (sqrt (- 1.0 (* x x))))
Precision single result: (λ (x) (sqrt (- 1.0 (* x x))))
|      |start prog|double|single|
|double|0.00475   |0.0047|0.0047|
|single|0.00294812|0.0029|0.0029|

Now running test: Graphics.Rendering.Chart.Axis.Types:invLinMap from Chart-1.5.3
Starting program: (λ (x y z t a) (+ x (/ (* (- y z) (- t x)) (- a z))))
Precision double result: (λ (x y z t a) (if (or (<= a -2.6595812458456444e-107) (not (<= a 1.7458687679565412e-78))) (+ x (* (cbrt (* (* (/ 1 (* (cbrt (- a z)) (cbrt (- a z)))) (- y z)) (/ (- t x) (cbrt (- a z))))) (* (cbrt (* (* (/ 1 (* (cbrt (- a z)) (cbrt (- a z)))) (- y z)) (/ (- t x) (cbrt (- a z))))) (cbrt (* (* (/ 1 (* (cbrt (- a z)) (cbrt (- a z)))) (- y z)) (/ (- t x) (cbrt (- a z)))))))) (+ t (* (- x t) (/ y z)))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|23.4402569|9.8293|45.825|
|single|24.8732871|24.841|10.997|

Now running test: Diagrams.TwoD.Segment:bezierClip from diagrams-lib-1.3.0.3
Starting program: (λ (x y z) (+ (* x y) (* z (- 1.0 y))))
Precision double result: (λ (x y z) (+ (* y x) (* z (- 1.0 y))))
Precision single result: (λ (x y z) (- (* 1.0 z) (* y z)))
|      |start prog|double|single|
|double|0.016375  |0.0163|23.787|
|single|11.9717963|11.971|7.8710|

Now running test: Data.Octree.Internal:octantDistance  from Octree-0.5.4.2
Starting program: (λ (x y) (sqrt (+ (* x x) (* y y))))
Precision double result: (λ (x y) (if (<= y -4.8607757270239125e+155) (- y) (if (<= y 1.7386292765746018e+145) (sqrt (+ (* x x) (* y y))) y)))
Precision single result: (λ (x y) (sqrt (+ (* y y) (* x x))))
|      |start prog|double|single|
|double|29.6740794|16.637|29.674|
|single|5.20248736|5.2024|5.2024|

Now running test: Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1
Starting program: (λ (x y) (- x (* y y)))
Precision double result: (λ (x y) (- x (* y y)))
Precision single result: (λ (x y) (- x (* y y)))
|      |start prog|double|single|
|double|0.0045    |0.0045|0.0045|
|single|0.04580432|0.0458|0.0458|

Now running test: Diagrams.TwoD.Path.Metafont.Internal:hobbyF from diagrams-contrib-1.3.0.5
Starting program: (λ (x y) (/ (+ 2.0 (* (* (* (sqrt 2.0) (- (sin x) (/ (sin y) 16.0))) (- (sin y) (/ (sin x) 16.0))) (- (cos x) (cos y)))) (* 3.0 (+ (+ 1.0 (* (/ (- (sqrt 5.0) 1.0) 2.0) (cos x))) (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y))))))
Precision double result: (λ (x y) (/ (+ 2.0 (* (* (* (cbrt (- (sin x) (/ (sin y) 16.0))) (* (sqrt 2.0) (* (* (log (exp (* (cbrt (cbrt (- (sin x) (/ (sin y) 16.0)))) (cbrt (cbrt (- (sin x) (/ (sin y) 16.0))))))) (cbrt (cbrt (- (sin x) (/ (sin y) 16.0))))) (cbrt (- (sin x) (/ (sin y) 16.0)))))) (- (sin y) (/ (sin x) 16.0))) (- (cos x) (cos y)))) (* (+ (* (/ (- 3.0 (sqrt 5.0)) 2.0) (cos y)) (+ 1.0 (* (cos x) (/ (- (sqrt 5.0) 1.0) 2.0)))) 3.0)))
Precision single result: (λ (x y) (/ (+ 2.0 (* (* (* (sqrt 2.0) (- (cos x) (cos y))) (- (sin y) (/ (sin x) 16.0))) (- (sin x) (/ (sin y) 16.0)))) (* 3.0 (+ (+ (/ (- (sqrt 5.0) 1.0) (/ 2.0 (* (cbrt (cos x)) (* (cbrt (cos x)) (cbrt (cos x)))))) (/ (- 3.0 (sqrt 5.0)) (/ 2.0 (cos y)))) 1.0))))
|      |start prog|double|single|
|double|0.45979218|0.4874|0.5699|
|single|21.9071786|21.907|21.907|

Now running test: Diagrams.TwoD.Layout.CirclePacking:approxRadius from diagrams-contrib-1.3.0.5
Starting program: (λ (x y) (/ (tan (/ x (* y 2.0))) (sin (/ x (* y 2.0)))))
Precision double result: (λ (x y) (if (<= (/ (tan (/ x (* 2.0 y))) (sin (/ x (* 2.0 y)))) 4.31877567463058) (cbrt (pow (/ (tan (/ x (* 2.0 y))) (sin (/ x (* 2.0 y)))) 3)) 1.0))
Precision single result: (λ (x y) 1.0)
|      |start prog|double|single|
|double|35.1299392|27.279|28.138|
|single|30.1016098|12.866|12.905|

Now running test: Diagrams.TwoD.Apollonian:descartes from diagrams-contrib-1.3.0.5
Starting program: (λ (x y z) (* 2.0 (sqrt (+ (+ (* x y) (* x z)) (* y z)))))
Precision double result: (λ (x y z) (* 2.0 (sqrt (+ (* x (+ y z)) (* z y)))))
Precision single result: (λ (x y z) 0)
|      |start prog|double|single|
|double|19.0913487|19.091|62.233|
|single|16.4154093|16.414|15.839|

Now running test: Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, A
Starting program: (λ (x y z) (/ (- (+ (* x x) (* y y)) (* z z)) (* y 2.0)))
Precision double result: (λ (x y z) (+ (* y 0.5) (/ (* (- x z) 0.5) (/ y (+ x z)))))
Precision single result: (λ (x y z) (+ (* y 0.5) (/ (* (- x z) (* (+ x z) 0.5)) y)))
|      |start prog|double|single|
|double|26.6847248|0.1156|11.906|
|single|24.0844226|19.427|19.924|

Now running test: Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, B
Starting program: (λ (x y z) (* x (sqrt (- (* y y) (* z z)))))
Precision double timed out or failed
Precision single result: (λ (x y z) 0)
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|18.7141069|#f    |9.3508|

Now running test: Diagrams.Backend.Rasterific:rasterificRadialGradient from diagrams-rasterific-1.3.1.3
Starting program: (λ (x y z) (/ (+ x (* y (- z x))) z))
Precision double result: (λ (x y z) (- (+ y (/ x z)) (* (/ x z) y)))
Precision single result: (λ (x y z) (- (+ y (/ 1 (/ z x))) (/ (* x y) z)))
|      |start prog|double|single|
|double|9.41505717|0.0464|3.1513|
|single|27.2513313|13.535|13.673|

Now running test: Data.HashTable.ST.Basic:computeOverhead from hashtables-1.2.0.2
Starting program: (λ (x y z t) (+ (/ x y) (/ (+ 2.0 (* (* z 2.0) (- 1.0 t))) (* t z))))
Precision double result: (λ (x y z t) (+ (/ x y) (- (/ (/ 2.0 z) t) (- 2.0 (/ 2.0 t)))))
Precision single result: (λ (x y z t) (+ (/ x y) (- (/ (/ 2.0 z) t) (- 2.0 (/ 2.0 t)))))
|      |start prog|double|single|
|double|9.17605280|0.0829|0.0829|
|single|30.7229435|18.434|18.434|

Now running test: Language.Haskell.HsColour.ColourHighlight:unbase from hscolour-1.23
Starting program: (λ (x y z t) (+ (* (+ (* x y) z) y) t))
Precision double result: (λ (x y z t) (+ (* y (* x y)) (+ t (* y z))))
Precision single result: (λ (x y z t) (+ t (* y (+ z (* y x)))))
|      |start prog|double|single|
|double|0.05715178|0.0579|0.0571|
|single|17.8679755|17.867|17.867|

Now running test: System.Random.MWC.Distributions:blocks from mwc-random-0.13.3.2
Starting program: (λ (x) (* (* x 0.5) x))
Precision double result: (λ (x) (* x (* 0.5 x)))
Precision single result: (λ (x) (* x (* 0.5 x)))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.05748120|0.0574|0.0574|

Now running test: System.Random.MWC.Distributions:standard from mwc-random-0.13.3.2
Starting program: (λ (x y) (* 0.5 (- (* x x) y)))
Precision double result: (λ (x y) (* 0.5 (- (* x x) y)))
Precision single result: (λ (x y) (* 0.5 (- (* x x) y)))
|      |start prog|double|single|
|double|0.01840685|0.0184|0.0184|
|single|0.11077923|0.1107|0.1107|

Now running test: SynthBasics:oscSampleBasedAux from YampaSynth-0.2
Starting program: (λ (x y z) (+ x (* y (- z x))))
Precision double result: (λ (x y z) (+ x (* (- z x) y)))
Precision single result: (λ (x y z) x)
|      |start prog|double|single|
|double|0.015125  |0.0151|35.271|
|single|12.2513371|12.251|6.6563|

Now running test: System.Random.MWC.Distributions:truncatedExp from mwc-random-0.13.3.2
Starting program: (λ (x y z t) (- x (/ (log (+ (- 1.0 y) (* y (exp z)))) t)))
Precision double result: (λ (x y z t) (if (<= z -1.8348811592590218e-13) (- x (* (/ 1 t) (log (- (* (exp z) y) (- y 1.0))))) (- x (+ (* 1.0 (* (/ 1 t) (* z y))) (/ (log 1.0) t)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|24.8740164|8.8665|#f    |
|single|#f        |#f    |#f    |

Now running test: System.Random.MWC.Distributions:gamma from mwc-random-0.13.3.2
Starting program: (λ (x y z) (+ (* x 0.5) (* y (+ (- 1.0 z) (log z)))))
Precision double result: (λ (x y z) (+ (* x 0.5) (* y (+ (log z) (- 1.0 z)))))
Precision single result: (λ (x y z) (+ (* x 0.5) (* y (+ (log z) (- 1.0 z)))))
|      |start prog|double|single|
|double|0.08791748|0.0879|0.0879|
|single|25.3546502|25.354|25.354|

Now running test: AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, A
Starting program: (λ (x y) (/ x (+ x y)))
Precision double result: (λ (x y) (/ x (+ y x)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.012125  |0.0121|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.Integration.TanhSinh:nonNegative from integration-0.2.1
Starting program: (λ (x) (/ x (- 1.0 x)))
Precision double result: (λ (x) (* x (/ 1 (- 1.0 x))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.007375  |0.0923|#f    |
|single|#f        |#f    |#f    |

Now running test: Graphics.Rasterific.QuadraticFormula:discriminant from Rasterific-0.6.1
Starting program: (λ (x y z) (- (* x x) (* (* y 4.0) z)))
Precision double result: (λ (x y z) (- (* x x) (* z (* y 4.0))))
Precision single result: (λ (x y z) (- (* (cbrt (* x x)) (* (cbrt (* x x)) (cbrt (* x x)))) (* y (* z 4.0))))
|      |start prog|double|single|
|double|0.02400673|0.0240|0.5642|
|single|13.4917131|13.491|13.542|

Now running test: Graphics.Rasterific.CubicBezier:cachedBezierAt from Rasterific-0.6.1
Starting program: (λ (x y z t a b) (+ (+ (+ x (* y z)) (* t a)) (* (* a z) b)))
Precision double result: (λ (x y z t a b) (if (or (<= z -3.1309846106270836e+55) (not (<= z 2.3131585922877344e+94))) (+ (+ (* a t) (+ (* z y) x)) (* z (* a b))) (+ (* a (+ t (* z b))) (+ (* z y) x))))
Precision single result: (λ (x y z t a b) (+ x (* z y)))
|      |start prog|double|single|
|double|1.89713799|0.2840|25.240|
|single|23.8990635|23.895|16.549|

Now running test: Graphics.Rasterific.CubicBezier:isSufficientlyFlat from Rasterific-0.6.1
Starting program: (λ (x) (* (* x 16.0) x))
Precision double result: (λ (x) (* x (* 16.0 x)))
Precision single result: (λ (x) (* x (* 16.0 x)))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.06632556|0.0663|0.0663|

Now running test: Graphics.Rasterific.Shading:$sgradientColorAt from Rasterific-0.6.1
Starting program: (λ (x y z) (/ (- x y) (- z y)))
Precision double result: (λ (x y z) (/ (- x y) (- z y)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.026375  |0.0263|#f    |
|single|#f        |#f    |#f    |

Now running test: Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1, A
Starting program: (λ (x) (+ (* x x) 1.0))
Precision double result: (λ (x) (+ (* x x) 1.0))
Precision single result: (λ (x) (+ (* x x) 1.0))
|      |start prog|double|single|
|double|0.001     |0.001 |0.001 |
|single|0.03213684|0.0321|0.0321|

Now running test: Graphics.Rasterific.Shading:$sradialGradientWithFocusShader from Rasterific-0.6.1, B
Starting program: (λ (x y z t) (- (* x x) (* (* y 4.0) (- (* z z) t))))
Precision double result: (λ (x y z t) (+ (* (* 4.0 y) t) (+ (* z (* (* 4.0 y) (- z))) (* x x))))
Precision single result: (λ (x y z t) (+ (* (* t y) 4.0) (* x x)))
|      |start prog|double|single|
|double|5.59705728|0.0942|17.946|
|single|15.8796813|15.173|14.095|

Now running test: Data.Number.Erf:$dmerfcx from erf-2.0.0.0
Starting program: (λ (x y) (* x (exp (* y y))))
Precision double result: (λ (x y) (* (pow (exp y) y) x))
Precision single result: (λ (x y) (* (exp (* y y)) x))
|      |start prog|double|single|
|double|0.04577678|0.0365|0.0457|
|single|0.03532179|0.0351|0.0353|

Now running test: Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, A
Starting program: (λ (x y z t) (* (* (- (* x 0.5) y) (sqrt (* z 2.0))) (exp (/ (* t t) 2.0))))
Precision double result: (λ (x y z t) (* (exp (/ (* t t) 2.0)) (* (sqrt (* 2.0 z)) (- (* 0.5 x) y))))
Precision single result: (λ (x y z t) (* (* (* x 0.5) (sqrt (* 2.0 z))) (exp (/ (* t t) 2.0))))
|      |start prog|double|single|
|double|0.29197609|0.2919|31.647|
|single|15.6814966|15.681|15.539|

Now running test: Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, B
Starting program: (λ (x y) (- x (/ y (+ 1.0 (/ (* x y) 2.0)))))
Precision double result: (λ (x y) (- x (/ 1 (+ (/ 1.0 y) (* x 0.5)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.03890116|0.0564|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.AD.Rank1.Halley:findZero from ad-4.2.4
Starting program: (λ (x y z t) (- x (/ (* (* y 2.0) z) (- (* (* z 2.0) z) (* y t)))))
Precision double result: (λ (x y z t) (- x (/ 2.0 (- (* z (/ 2.0 y)) (/ t z)))))
Precision single result: (λ (x y z t) x)
|      |start prog|double|single|
|double|11.3762238|0.0923|15.774|
|single|28.4827160|18.433|3.7880|

Now running test: Crypto.Random.Test:calculate from crypto-random-0.0.9
Starting program: (λ (x y z) (+ x (/ (* y y) z)))
Precision double result: (λ (x y z) (+ (/ y (/ z y)) x))
Precision single result: (λ (x y z) (+ x (* y (/ 1 (/ z y)))))
|      |start prog|double|single|
|double|5.99542326|0.0913|0.1242|
|single|13.4096235|12.654|12.656|

Now running test: Numeric.Log:$cexpm1 from log-domain-0.10.2.1, A
Starting program: (λ (x) (* (* x 2.0) x))
Precision double result: (λ (x) (* x (* 2.0 x)))
Precision single result: (λ (x) (* x (* 2.0 x)))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.05843872|0.0584|0.0584|

Now running test: Numeric.Log:$cexpm1 from log-domain-0.10.2.1, B
Starting program: (λ (x y) (+ (+ (* x y) x) y))
Precision double result: (λ (x y) (+ (+ x (* y x)) y))
Precision single result: (λ (x y) (+ (+ x y) (* x y)))
|      |start prog|double|single|
|double|0.00857312|0.0085|0.0088|
|single|0.00532312|0.0053|0.0056|

Now running test: Numeric.Log:$clog1p from log-domain-0.10.2.1, A
Starting program: (λ (x y) (+ (+ (* x 2.0) (* x x)) (* y y)))
Precision double result: (λ (x y) (+ (* y y) (* x (+ 2.0 x))))
Precision single result: (λ (x y) (+ (* (* (cbrt (* y y)) (cbrt (* y y))) (cbrt (* y y))) (+ (* x x) (* 2.0 x))))
|      |start prog|double|single|
|double|0.01277124|0.0143|0.5327|
|single|0.10145300|0.1039|0.1378|

Now running test: Numeric.Log:$clog1p from log-domain-0.10.2.1, B
Starting program: (λ (x) (/ x (+ 1.0 (sqrt (+ x 1.0)))))
Precision double result: (λ (x) (/ (/ 1 (+ 1.0 (sqrt (+ 1.0 x)))) (/ 1 x)))
Precision single result: (λ (x) (/ x (+ (sqrt (+ 1.0 x)) 1.0)))
|      |start prog|double|single|
|double|0.18346936|0.3235|0.1834|
|single|1.51802224|1.7273|1.5180|

Now running test: Data.Approximate.Numerics:blog from approximate-0.2.2.1
Starting program: (λ (x) (/ (* 6.0 (- x 1.0)) (+ (+ x 1.0) (* 4.0 (sqrt x)))))
Precision double result: (λ (x) (* 6.0 (cbrt (pow (/ (- x 1.0) (+ (* 4.0 (sqrt x)) (+ x 1.0))) 3))))
Precision single result: (λ (x) (* 6.0 (- (/ x (+ (* (sqrt x) 4.0) (+ x 1.0))) (/ 1.0 (+ (* (sqrt x) 4.0) (+ x 1.0))))))
|      |start prog|double|single|
|double|0.24041331|0.0643|0.0476|
|single|13.1928033|13.152|13.144|

Now running test: Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, A
Starting program: (λ (x) (/ (* (* (/ 8.0 3.0) (sin (* x 0.5))) (sin (* x 0.5))) (sin x)))
Precision double result: (λ (x) (* (/ (sin (* 0.5 x)) 3.0) (/ (* 8.0 (sin (* 0.5 x))) (sin x))))
Precision single result: (λ (x) (+ (* (pow x 3) 0.05555555555555555) (+ (* 0.005555555555555554 (pow x 5)) (* 0.6666666666666666 x))))
|      |start prog|double|single|
|double|14.6666068|0.3038|31.812|
|single|28.2562831|28.249|15.573|

Now running test: Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, B
Starting program: (λ (x y z) (- (+ x (cos y)) (* z (sin y))))
Precision double result: (λ (x y z) (- (+ x (cos y)) (* z (sin y))))
Precision single result: (λ (x y z) (- (+ (log (exp (cos y))) x) (* z (sin y))))
|      |start prog|double|single|
|double|0.04954024|0.0495|0.1202|
|single|17.4843599|17.484|17.485|

Now running test: Graphics.Rasterific.Svg.PathConverter:segmentToBezier from rasterific-svg-0.2.3.1, C
Starting program: (λ (x y z) (+ (+ x (sin y)) (* z (cos y))))
Precision double result: (λ (x y z) (+ (sin y) (+ (* z (cos y)) x)))
Precision single result: (λ (x y z) (+ (+ (* (* (* (cbrt (cbrt (sin y))) (cbrt (cbrt (sin y)))) (cbrt (cbrt (sin y)))) (* (cbrt (sin y)) (cbrt (sin y)))) x) z))
|      |start prog|double|single|
|double|0.05337215|0.0531|11.685|
|single|14.8800421|14.880|14.968|

Now running test: Graphics.Rasterific.Svg.PathConverter:arcToSegments from rasterific-svg-0.2.3.1
Starting program: (λ (x y z t) (+ (/ (* x x) (* y y)) (/ (* z z) (* t t))))
Precision double result: (λ (x y z t) (+ (* (/ x y) (/ x y)) (* (* (cbrt (/ z t)) (/ z t)) (* (/ (cbrt z) (cbrt t)) (cbrt (/ z t))))))
Precision single result: (λ (x y z t) (+ (* (/ z t) (/ z t)) (* (/ x y) (/ x y))))
|      |start prog|double|single|
|double|32.7727939|0.7373|0.4316|
|single|21.8866877|19.821|19.820|

Now running test: Development.Shake.Profile:generateTrace from shake-0.15.5
Starting program: (λ (x) (* 1000000.0 (- x x)))
Precision double result: (λ (x) 0)
Precision single result: (λ (x) 0)
|      |start prog|double|single|
|double|0         |0     |0     |
|single|13.4682744|0     |0     |

Now running test: Development.Shake.Progress:decay from shake-0.15.5
Starting program: (λ (x y z t a b) (/ (+ (* x y) (* z (- t a))) (+ y (* z (- b y)))))
Precision double result: (λ (x y z t a b) (* (/ 1 (+ (* z (- b y)) y)) (+ (* z (- t a)) (* y x))))
Precision single result: (λ (x y z t a b) 0)
|      |start prog|double|single|
|double|22.8593286|22.924|60.510|
|single|29.9997757|30.030|10.349|

Now running test: Development.Shake.Progress:message from shake-0.15.5
Starting program: (λ (x y) (/ (* x 100.0) (+ x y)))
Precision double result: (λ (x y) (* x (/ 100.0 (+ x y))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.37811493|0.1674|#f    |
|single|#f        |#f    |#f    |

Now running test: Diagrams.Backend.Rasterific:$crender from diagrams-rasterific-1.3.1.3
Starting program: (λ (x y z) (+ (* x y) (* (- 1.0 x) z)))
Precision double result: (λ (x y z) (+ (* y x) (* z (- 1.0 x))))
Precision single result: (λ (x y z) (- (* z 1.0) (* x (- z y))))
|      |start prog|double|single|
|double|0.01739624|0.0173|0.0161|
|single|11.9269656|11.926|11.913|

Now running test: Numeric.Histogram:binBounds from Chart-1.5.3
Starting program: (λ (x y z t) (+ x (/ (* (- y x) z) t)))
Precision double result: (λ (x y z t) (if (<= t 9.096594780926465e-158) (+ x (/ (- y x) (/ t z))) (+ x (* (cbrt (- y x)) (* (* (/ 1 t) (* (cbrt (- y x)) (cbrt (- y x)))) z)))))
Precision single result: (λ (x y z t) (+ x (* (* (/ 1 t) (- y x)) z)))
|      |start prog|double|single|
|double|6.07323129|2.0414|6.3425|
|single|20.0875057|20.066|20.246|

Now running test: Graphics.Rendering.Chart.Drawing:drawTextsR from Chart-1.5.3
Starting program: (λ (x y z) (+ (* x y) (* (- x 1.0) z)))
Precision double result: (λ (x y z) (+ (* y x) (* z (- x 1.0))))
Precision single result: (λ (x y z) (+ (* y x) (* z (- x 1.0))))
|      |start prog|double|single|
|double|0.01357312|0.0135|0.0135|
|single|12.1287489|12.128|12.128|

Now running test: Graphics.Rendering.Chart.Axis.Types:hBufferRect from Chart-1.5.3
Starting program: (λ (x y) (+ x (/ (- x y) 2.0)))
Precision double result: (λ (x y) (- (/ x 2.0) (- (/ y 2.0) x)))
Precision single result: (λ (x y) (- (* x 1.5) (* 0.5 y)))
|      |start prog|double|single|
|double|0.08407312|0.0842|0.0830|
|single|0.08463031|0.0851|0.0845|

Now running test: Graphics.Rendering.Chart.Axis.Types:linMap from Chart-1.5.3
Starting program: (λ (x y z t a) (+ x (/ (* (- y x) (- z t)) (- a t))))
Precision double result: (λ (x y z t a) (if (<= a -1.188982040448424e-86) (+ x (* (* (* (/ 1 (* (cbrt (- a t)) (cbrt (- a t)))) (- z t)) (/ 1 (cbrt (* (cbrt (- a t)) (cbrt (- a t)))))) (/ (- y x) (cbrt (cbrt (- a t)))))) (if (<= a 6.489713530058334e-224) (+ y (* (/ z t) (- x y))) (+ x (* (* (* (* (/ 1 (* (cbrt (- a t)) (cbrt (- a t)))) (- z t)) (/ 1 (cbrt (* (cbrt (- a t)) (cbrt (- a t)))))) (* (cbrt (- y x)) (cbrt (- y x)))) (/ (cbrt (- y x)) (cbrt (cbrt (- a t)))))))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|23.2832193|9.9545|45.878|
|single|25.2599599|25.197|11.220|

Now running test: Graphics.Rendering.Chart.Plot.Vectors:renderPlotVectors from Chart-1.5.3
Starting program: (λ (x y) (+ x (* (- 1.0 x) (- 1.0 y))))
Precision double result: (λ (x y) (+ (+ (* (- y) 1.0) (* x y)) 1.0))
Precision single result: (λ (x y) (+ (* (- x 1.0) y) 1.0))
|      |start prog|double|single|
|double|16.4593744|0.0073|0.0075|
|single|10.1663543|8.5167|8.5164|

Now running test: Graphics.Rendering.Chart.Plot.AreaSpots:renderSpotLegend from Chart-1.5.3
Starting program: (λ (x y) (+ x (/ (fabs (- y x)) 2.0)))
Precision double result: (λ (x y) (+ x (/ (fabs (- y x)) 2.0)))
Precision single result: (λ (x y) (+ x (/ (fabs (- y x)) 2.0)))
|      |start prog|double|single|
|double|0.05514903|0.0551|0.0551|
|single|0.07333844|0.0733|0.0733|

Now running test: Graphics.Rendering.Chart.Plot.AreaSpots:renderAreaSpots4D from Chart-1.5.3
Starting program: (λ (x y z t) (/ (* x (- y z)) (- t z)))
Precision double result: (λ (x y z t) (if (or (<= z -1.4629572575924706e-65) (not (<= z 1.812439456006747e-275))) (/ x (- (/ t (- y z)) (/ z (- y z)))) (/ (/ x (- t z)) (/ 1 (- y z)))))
Precision single result: (λ (x y z t) x)
|      |start prog|double|single|
|double|10.8428202|1.9997|39.389|
|single|24.4479315|27.606|8.2016|

Now running test: Graphics.Rendering.Chart.Plot.Pie:renderPie from Chart-1.5.3
Starting program: (λ (x y) (- (+ x y) x))
Precision double result: (λ (x y) y)
Precision single result: (λ (x y) y)
|      |start prog|double|single|
|double|29.8032436|0     |0     |
|single|14.0272141|0     |0     |

Now running test: Graphics.Rendering.Chart.SparkLine:renderSparkLine from Chart-1.5.3
Starting program: (λ (x y z t a) (- x (/ (- y z) (/ (+ (- t z) 1.0) a))))
Precision double result: (λ (x y z t a) (- x (* (/ (- y z) (+ 1.0 (- t z))) a)))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|1.93593782|0.2013|27.160|
|single|21.7611402|21.736|5.5699|

Now running test: Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, A
Starting program: (λ (x y z) (/ (+ x y) (- 1.0 (/ y z))))
Precision double result: (λ (x y z) (/ (+ x y) (- 1.0 (/ y z))))
Precision single timed out or failed
|      |start prog|double|single|
|double|7.59471703|7.5947|#f    |
|single|#f        |#f    |#f    |

Now running test: Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1, B
Starting program: (λ (x y z t) (* x (/ (* (/ y z) t) t)))
Precision double result: (λ (x y z t) (if (<= (/ y z) -2.938496622850363e+185) (/ (* x y) z) (if (<= (/ y z) -8.073239101747028e-220) (* (/ y z) x) (if (<= (/ y z) -0.0) (* (/ 1 z) (* x y)) (if (<= (/ y z) 3.7476446854791624e+223) (/ x (/ z y)) (* (/ 1 z) (* x y)))))))
Precision single result: (λ (x y z t) (/ y (/ z x)))
|      |start prog|double|single|
|double|14.2196130|0.5373|6.0312|
|single|29.5274178|20.868|20.878|

Now running test: AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, B
Starting program: (λ (x y) (/ x (+ y x)))
Precision double result: (λ (x y) (/ x (+ y x)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.013375  |0.0133|#f    |
|single|#f        |#f    |#f    |

Now running test: AI.Clustering.Hierarchical.Internal:ward from clustering-0.2.1
Starting program: (λ (x y z t a b) (/ (- (+ (* (+ x y) z) (* (+ t y) a)) (* y b)) (+ (+ x t) y)))
Precision double result: (λ (x y z t a b) (if (<= y -6.118079694393145e+141) (- (+ z a) b) (if (<= y -1.183364281971577e-168) (- (/ (+ (* z (+ x y)) (* (+ y t) a)) (+ (+ y t) x)) (* y (/ b (+ (+ y t) x)))) (if (<= y -5.24513770496011e-263) (- (+ z a) (/ (* y b) (+ (+ y t) x))) (if (<= y 7.08360459525266e+77) (- (/ (+ (* z (+ x y)) (* (+ y t) a)) (+ (+ y t) x)) (* y (/ b (+ (+ y t) x)))) (- (+ z a) b))))))
Precision single result: (λ (x y z t a b) a)
|      |start prog|double|single|
|double|24.8690238|16.552|43.424|
|single|29.2283177|26.070|12.007|

Now running test: Numeric.SpecFunctions:invErfc from math-functions-0.1.5.2, A
Starting program: (λ (x y z) (+ x (/ y (- (* 1.1283791670955126 (exp z)) (* x y)))))
Precision double result: (λ (x y z) (+ x (/ 1 (- (/ (exp z) (/ y 1.1283791670955126)) x))))
Precision single result: (λ (x y z) (+ (/ y (- (* (sqrt (* (exp z) 1.1283791670955126)) (sqrt (* (exp z) 1.1283791670955126))) (* x y))) x))
|      |start prog|double|single|
|double|2.87159578|0.0276|3.0068|
|single|10.0705114|6.7132|10.043|

Now running test: Numeric.SpecFunctions:invErfc from math-functions-0.1.5.2, B
Starting program: (λ (x) (* 0.70711 (- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x)))
Precision double result: (λ (x) (- (/ (* 0.70711 (+ 2.30753 (* 0.27061 x))) (+ (+ (* x 0.99229) 1.0) (* (* x x) 0.04481))) (* 0.70711 x)))
Precision single result: (λ (x) (- (* (/ (+ 2.30753 (* 0.27061 x)) (* (sqrt (sqrt (+ (* 0.04481 (* x x)) (+ 1.0 (* 0.99229 x))))) (sqrt (sqrt (+ (* 0.04481 (* x x)) (+ 1.0 (* 0.99229 x))))))) (/ 0.70711 (sqrt (+ (* 0.04481 (* x x)) (+ 1.0 (* 0.99229 x)))))) (* 0.70711 x)))
|      |start prog|double|single|
|double|0.01856616|0.0205|0.0783|
|single|0.05511641|0.0532|0.1056|

Now running test: Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, A
Starting program: (λ (x y) (+ (- (* x (- y 1.0)) (* y 0.5)) 0.918938533204673))
Precision double result: (λ (x y) (+ 0.918938533204673 (- (* (- y 1.0) x) (* 0.5 y))))
Precision single result: (λ (x y) (+ (- (* (* y (pow (cbrt (- x 0.5)) 2)) (cbrt (- x 0.5))) (* 1.0 x)) 0.918938533204673))
|      |start prog|double|single|
|double|0.00975   |0.0097|0.6105|
|single|0.04639767|0.0463|0.0471|

Now running test: Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, B
Starting program: (λ (x y z) (+ x (/ (* y (+ (* (+ (* z 0.0692910599291889) 0.4917317610505968) z) 0.279195317918525)) (+ (* (+ z 6.012459259764103) z) 3.350343815022304))))
Precision double result: (λ (x y z) (if (or (<= z -1.0974697603954643e+35) (not (<= z 339611012.4752058))) (+ (* 0.07512208616047561 (/ y z)) (+ x (* 0.0692910599291889 y))) (+ x (* (* (sqrt (/ (+ (+ 0.279195317918525 (* 0.4917317610505968 z)) (* (* z z) 0.0692910599291889)) (+ 3.350343815022304 (* z (+ z 6.012459259764103))))) y) (sqrt (/ (+ (+ 0.279195317918525 (* 0.4917317610505968 z)) (* (* z z) 0.0692910599291889)) (+ 3.350343815022304 (* z (+ z 6.012459259764103)))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|19.5339452|0.0924|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, C
Starting program: (λ (x y z) (/ (* (- x 2.0) (+ (* (+ (* (+ (* (+ (* x 4.16438922228) 78.6994924154) x) 137.519416416) x) y) x) z)) (+ (* (+ (* (+ (* (+ x 43.3400022514) x) 263.505074721) x) 313.399215894) x) 47.066876606)))
Precision double result: (λ (x y z) (if (<= (/ (* (+ z (* x (+ y (* (+ 137.519416416 (* x (+ (* 4.16438922228 x) 78.6994924154))) x)))) (- x 2.0)) (+ (* (+ 313.399215894 (* x (+ 263.505074721 (* x (+ 43.3400022514 x))))) x) 47.066876606)) 2.963741637866232e+306) (/ (- x 2.0) (/ (+ (+ (* (+ 43.3400022514 x) (pow x 3)) 47.066876606) (* (+ (* 263.505074721 x) 313.399215894) x)) (+ (* (+ (* 4.16438922228 x) 78.6994924154) (pow x 3)) (+ (+ z (* x y)) (* 137.519416416 (* x x)))))) (- (+ (* 4.16438922228 x) (/ y (pow x 2))) 110.1139242984811)))
Precision single result: (λ (x y z) (* (+ (+ (+ z (* x y)) (* (* x x) 137.519416416)) (* (pow x 3) (+ (* x 4.16438922228) 78.6994924154))) (/ (- x 2.0) (+ (* (+ x 43.3400022514) (pow x 3)) (+ (* x (* 263.505074721 x)) (+ (* 313.399215894 x) 47.066876606))))))
|      |start prog|double|single|
|double|26.0010078|0.7107|24.263|
|single|11.3298808|9.2192|11.050|

Now running test: Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2, D
Starting program: (λ (x y z t a b) (+ x (/ (* y (+ (* (+ (* (+ (* (+ (* z 3.13060547623) 11.1667541262) z) t) z) a) z) b)) (+ (* (+ (* (+ (* (+ z 15.234687407) z) 31.4690115749) z) 11.9400905721) z) 0.607771387771))))
Precision double result: (λ (x y z t a b) (if (or (<= z -31500059153665264.0) (not (<= z 5.7503117707254045e+20))) (+ x (+ (* 3.13060547623 y) (* (- (/ t z) 36.527041698806414) (/ y z)))) (+ (* (/ (+ (* (pow z 3) (+ (* z 3.13060547623) 11.1667541262)) (+ (* t (pow z 2)) (+ (* z a) b))) (+ (* (* z 31.4690115749) z) (+ (* (+ 15.234687407 z) (pow z 3)) (+ (* z 11.9400905721) 0.607771387771)))) y) x)))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.0793668|1.5544|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, A
Starting program: (λ (x) (/ 1.0 (* x x)))
Precision double result: (λ (x) (/ (/ 1.0 x) x))
Precision single result: (λ (x) (* (/ 1.0 x) (/ 1 x)))
|      |start prog|double|single|
|double|0.59386309|0.1773|0.3418|
|single|0.15875841|0.0577|0.0700|

Now running test: Numeric.SpecFunctions:$slogFactorial from math-functions-0.1.5.2, B
Starting program: (λ (x y z) (+ (+ (- (* (- x 0.5) (log x)) x) 0.91893853320467) (/ (+ (* (- (* (+ y 0.0007936500793651) z) 0.0027777777777778) z) 0.083333333333333) x)))
Precision double result: (λ (x y z) (if (<= (* z (- (* z (+ 0.0007936500793651 y)) 0.0027777777777778)) -6.464405573256544e+184) (+ (+ 0.91893853320467 (- (* (log x) (- x 0.5)) x)) (/ 1 (- (/ (/ (/ x z) z) y) (* (- 0.0007936500793651 (/ 6.298804484762296e-07 y)) (/ x (* (* z y) (* z y))))))) (if (<= (* z (- (* z (+ 0.0007936500793651 y)) 0.0027777777777778)) 4.644818937163754e+207) (+ (/ (+ (- (* (+ 0.0007936500793651 y) (* z z)) (* z 0.0027777777777778)) 0.083333333333333) x) (+ (- 0.91893853320467 x) (* (log x) (- x 0.5)))) (+ (* (- (* z (+ 0.0007936500793651 y)) 0.0027777777777778) (/ z x)) (+ 0.91893853320467 (- (* (log x) (- x 0.5)) x))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|5.46203814|0.7521|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:logGammaL from math-functions-0.1.5.2
Starting program: (λ (x y z t a) (+ (- (+ (log (+ x y)) (log z)) t) (* (- a 0.5) (log t))))
Precision double result: (λ (x y z t a) (- (+ (log (* (cbrt (+ x y)) (cbrt (+ x y)))) (- (log (cbrt (+ x y))) t)) (- (* (log t) (- 0.5 a)) (log z))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.26314941|0.2769|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:logGammaCorrection from math-functions-0.1.5.2
Starting program: (λ (x) (- (* (* x x) 2.0) 1.0))
Precision double result: (λ (x) (- (* x (* 2.0 x)) 1.0))
Precision single result: (λ (x) (- (* (sqrt (* (* (cbrt (* x (* 2.0 x))) (cbrt (* x (* 2.0 x)))) (cbrt (* x (* 2.0 x))))) (sqrt (* x (* 2.0 x)))) 1.0))
|      |start prog|double|single|
|double|0.00069812|0.0006|0.2985|
|single|0.03259172|0.0325|0.0495|

Now running test: Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, A
Starting program: (λ (x y) (* x (- 1.0 (* x y))))
Precision double result: (λ (x y) (* x (- 1.0 (* x y))))
Precision single result: (λ (x y) (* x (- 1.0 (* x y))))
|      |start prog|double|single|
|double|0.093875  |0.0938|0.0938|
|single|10.8897294|10.889|10.889|

Now running test: Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, B
Starting program: (λ (x) (* x (- 1.0 (* x 0.5))))
Precision double result: (λ (x) (* x (- 1.0 (* x 0.5))))
Precision single result: (λ (x) (* x (- 1.0 (* x 0.5))))
|      |start prog|double|single|
|double|0.011625  |0.0116|0.0116|
|single|0.04033496|0.0403|0.0403|

Now running test: Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, A
Starting program: (λ (x y z t a b) (+ (- (+ (+ x y) z) (* z (log t))) (* (- a 0.5) b)))
Precision double result: (λ (x y z t a b) (+ (+ (+ y x) (/ (- 1 (* (log t) (log t))) (/ (+ 1 (log t)) z))) (* (- a 0.5) b)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.10080691|0.1134|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, B
Starting program: (λ (x y z t a b c i) (+ (+ (+ (+ (+ (* x (log y)) z) t) a) (* (- b 0.5) (log c))) (* y i)))
Precision double result: (λ (x y z t a b c i) (+ (+ (+ (* (* (cbrt (log y)) (cbrt x)) (* (cbrt (* (log y) x)) (cbrt (* (log y) x)))) (+ (+ t z) (* i y))) (* (- b 0.5) (log c))) a))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.11043648|0.2593|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:choose from math-functions-0.1.5.2
Starting program: (λ (x y z) (/ (* x (+ y z)) z))
Precision double result: (λ (x y z) (if (<= (/ (* (+ y z) x) z) -inf.0) (/ x (/ z (+ y z))) (if (<= (/ (* (+ y z) x) z) -3.798249012518289e+151) (/ (* (+ y z) x) z) (if (<= (/ (* (+ y z) x) z) 8.418117825724867e+80) (/ x (/ z (+ y z))) (if (<= (/ (* (+ y z) x) z) 9.301382865829037e+262) (/ (* (+ y z) x) z) (/ x (/ z (+ y z))))))))
Precision single result: (λ (x y z) (+ (/ y (/ z x)) x))
|      |start prog|double|single|
|double|11.6735940|0.9453|4.4305|
|single|27.9134133|27.843|17.818|

Now running test: Numeric.SpecFunctions:stirlingError from math-functions-0.1.5.2
Starting program: (λ (x y z) (- (+ (- x (* (+ y 0.5) (log y))) y) z))
Precision double result: (λ (x y z) (- x (+ (- (* (+ y 0.5) (log y)) y) z)))
Precision single result: (λ (x y z) (- (+ (- x (* (log y) (+ 0.5 y))) y) z))
|      |start prog|double|single|
|double|0.11420996|0.1119|0.1142|
|single|23.1337413|23.133|23.133|

Now running test: Numeric.SpecFunctions:incompleteGamma from math-functions-0.1.5.2, A
Starting program: (λ (x y z t) (+ (- (- (* x (log y)) y) z) (log t)))
Precision double result: (λ (x y z t) (+ (log t) (- (- (* x (log y)) y) z)))
Precision single result: (λ (x y z t) (+ (* (log y) x) (- (* (cbrt (log t)) (* (cbrt (log t)) (cbrt (log t)))) (+ z y))))
|      |start prog|double|single|
|double|0.08007312|0.0800|0.2289|
|single|29.5054932|29.505|29.514|

Now running test: Numeric.SpecFunctions:incompleteGamma from math-functions-0.1.5.2, B
Starting program: (λ (x y) (* (* 3.0 (sqrt x)) (- (+ y (/ 1.0 (* x 9.0))) 1.0)))
Precision double result: (λ (x y) (* (* 3.0 (+ (- y 1.0) (/ 0.1111111111111111 x))) (sqrt x)))
Precision single result: (λ (x y) (* (+ (- y 1.0) (/ 1.0 (* 9.0 x))) (sqrt (* 3.0 (* 3.0 x)))))
|      |start prog|double|single|
|double|0.40404812|0.4260|0.3988|
|single|13.9544186|14.037|14.096|

Now running test: Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, A
Starting program: (λ (x) (- 1.0 (* x (+ 0.253 (* x 0.12)))))
Precision double result: (λ (x) (- 1.0 (* (+ (* 0.12 x) 0.253) x)))
Precision single result: (λ (x) (- 1.0 (* x (+ (* (* (cbrt (* 0.12 x)) (cbrt (* 0.12 x))) (cbrt (* 0.12 x))) 0.253))))
|      |start prog|double|single|
|double|0.09207312|0.0920|0.4409|
|single|0.03327785|0.0332|0.0535|

Now running test: Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, B
Starting program: (λ (x y) (- 1.0 (log (- 1.0 (/ (- x y) (- 1.0 y))))))
Precision double result: (λ (x y) (if (or (<= y -23655323100841604.0) (not (<= y 89839329.46032171))) (- 1.0 (log (+ (* (/ 1.0 y) (/ x y)) (- (/ x y) (/ 1.0 y))))) (- 1.0 (log (- 1.0 (* (- x y) (/ 1 (- 1.0 y))))))))
Precision single result: (λ (x y) (- 1.0 (log (+ 1.0 (/ (- y x) (- 1.0 y))))))
|      |start prog|double|single|
|double|17.3121623|0.2895|17.312|
|single|17.3760042|16.957|17.376|

Now running test: Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, C
Starting program: (λ (x) (- (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* x (+ 0.99229 (* x 0.04481))))) x))
Precision double result: (λ (x) (- (/ 1 (/ (+ 1.0 (* x (+ (* x 0.04481) 0.99229))) (+ (* x 0.27061) 2.30753))) x))
Precision single result: (λ (x) (- (/ (/ (+ (* (* (cbrt (* x 0.27061)) (cbrt (* x 0.27061))) (cbrt (* x 0.27061))) 2.30753) (sqrt (+ (+ 1.0 (* x 0.99229)) (* 0.04481 (* x x))))) (sqrt (+ (+ 1.0 (* x 0.99229)) (* 0.04481 (* x x))))) x))
|      |start prog|double|single|
|double|0.01079248|0.0112|0.1020|
|single|0.01538176|0.0157|0.0707|

Now running test: Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, D
Starting program: (λ (x y) (- (- 1.0 (/ 1.0 (* x 9.0))) (/ y (* 3.0 (sqrt x)))))
Precision double result: (λ (x y) (- (- 1.0 (/ (/ y 3.0) (sqrt x))) (/ 0.1111111111111111 x)))
Precision single result: (λ (x y) (- (- 1.0 (* (/ (/ 1 3.0) (sqrt x)) y)) (/ 1.0 (* 9.0 x))))
|      |start prog|double|single|
|double|0.21671956|0.2475|0.2449|
|single|5.24584740|5.2407|5.2478|

Now running test: Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, A
Starting program: (λ (x y) (/ (* x y) (* (* (+ x y) (+ x y)) (+ (+ x y) 1.0))))
Precision double result: (λ (x y) (/ (* (/ y (+ (+ y 1.0) x)) (/ x (+ x y))) (+ x y)))
Precision single result: (λ (x y) 0)
|      |start prog|double|single|
|double|19.5126451|0.1073|31.181|
|single|28.0512698|27.001|1.8116|

Now running test: Numeric.SpecFunctions:incompleteBetaApprox from math-functions-0.1.5.2, B
Starting program: (λ (x y z t a b) (* x (exp (+ (* y (- (log z) t)) (* a (- (log (- 1.0 z)) b))))))
Precision double result: (λ (x y z t a b) (* x (* (sqrt (exp (* (cbrt (+ (* (- (- (log 1.0) (+ (* 1.0 z) (* 1/2 (/ (pow z 2) (pow 1.0 2))))) b) a) (* (- (log z) t) y))) (* (cbrt (+ (* (- (- (log 1.0) (+ (* 1.0 z) (* 1/2 (/ (pow z 2) (pow 1.0 2))))) b) a) (* (- (log z) t) y))) (cbrt (+ (* (- (- (log 1.0) (+ (* 1.0 z) (* 1/2 (/ (pow z 2) (pow 1.0 2))))) b) a) (* (- (log z) t) y))))))) (sqrt (exp (+ (* (- (- (log 1.0) (+ (* 1.0 z) (* 1/2 (/ (pow z 2) (pow 1.0 2))))) b) a) (* (- (log z) t) y)))))))
Precision single result: (λ (x y z t a b) (if (<= (+ (* (- (log (- 1.0 z)) b) a) (* y (- (log z) t))) -inf.f) (* x (exp (+ (* (- (log (- 1.0 z)) b) a) (* y (- (log z) t))))) (* (pow (/ (- 1.0 z) (exp b)) a) (/ (* x (pow z y)) (exp (* t y))))))
|      |start prog|double|single|
|double|1.99341614|0.4283|18.543|
|single|26.5527109|26.331|20.098|

Now running test: Numeric.SpecFunctions:incompleteBetaWorker from math-functions-0.1.5.2, A
Starting program: (λ (x y z t a b) (/ (* x (exp (- (+ (* y (log z)) (* (- t 1.0) (log a))) b))) y))
Precision double result: (λ (x y z t a b) (/ (* (exp (- (+ (* (log z) y) (* (log a) (- t 1.0))) b)) x) y))
Precision single result: (λ (x y z t a b) (/ (/ x (pow a 1.0)) y))
|      |start prog|double|single|
|double|2.00710622|2.0071|42.514|
|single|26.4172857|26.417|25.034|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, B
Starting program: (λ (x y z t) (- (+ (* x (log y)) (* z (log (- 1.0 y)))) t))
Precision double result: (λ (x y z t) (- (+ (+ (* z (- (log 1.0) (* y 1.0))) (/ (* -1/2 z) (* (/ 1.0 y) (/ 1.0 y)))) (* x (log y))) t))
Precision single result: (λ (x y z t) (- (+ (+ (* z (- (log 1.0) (* y 1.0))) (/ (* -1/2 z) (* (/ 1.0 y) (/ 1.0 y)))) (* x (log y))) t))
|      |start prog|double|single|
|double|9.19125775|0.3699|0.3699|
|single|27.8924210|27.622|27.622|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, C
Starting program: (λ (x y z t) (* x (- (/ y z) (/ t (- 1.0 z)))))
Precision double result: (λ (x y z t) (if (<= (- (/ y z) (/ t (- 1.0 z))) -inf.0) (/ (* (- (* (- 1.0 z) y) (* t z)) x) (* (- 1.0 z) z)) (if (<= (- (/ y z) (/ t (- 1.0 z))) 9.618500680347509e+203) (* x (- (/ y z) (/ t (- 1.0 z)))) (- (/ y (/ z x)) (/ (* x t) (- 1.0 z))))))
Precision single result: (λ (x y z t) (/ (* x y) z))
|      |start prog|double|single|
|double|4.45563273|1.5056|28.098|
|single|23.9298861|23.914|20.548|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, D
Starting program: (λ (x) (- x (/ (+ 2.30753 (* x 0.27061)) (+ 1.0 (* (+ 0.99229 (* x 0.04481)) x)))))
Precision double result: (λ (x) (- x (* (+ (* x 0.27061) 2.30753) (/ 1 (+ (* x (+ (* x 0.04481) 0.99229)) 1.0)))))
Precision single result: (λ (x) (- x (/ (+ (* (* (cbrt (* x 0.27061)) (cbrt (* x 0.27061))) (cbrt (* x 0.27061))) 2.30753) (+ (* x (+ (* x 0.04481) 0.99229)) 1.0))))
|      |start prog|double|single|
|double|0.00966748|0.0108|0.0097|
|single|0.01787373|0.0185|0.0140|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, E
Starting program: (λ (x y) (+ (- 1.0 x) (* y (sqrt x))))
Precision double result: (λ (x y) (+ (- 1.0 x) (* y (sqrt x))))
Precision single result: (λ (x y) (+ (- 1.0 x) (* y (sqrt x))))
|      |start prog|double|single|
|double|0.08525   |0.0852|0.0852|
|single|5.09721745|5.0972|5.0972|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, F
Starting program: (λ (x y) (/ (exp (* x (log (/ x (+ x y))))) x))
Precision double result: (λ (x y) (if (or (<= x -5.768477289827423e+68) (not (<= x 6.147017772379285e-42))) (/ (exp (- y)) x) (/ 1 x)))
Precision single result: (λ (x y) (/ 1 x))
|      |start prog|double|single|
|double|10.9653946|1.2148|9.5428|
|single|25.5783321|1.0141|1.0169|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, G
Starting program: (λ (x y z) (+ x (/ (exp (* y (log (/ y (+ z y))))) y)))
Precision double result: (λ (x y z) (+ (/ (pow (exp y) (log (/ y (+ z y)))) y) x))
Precision single result: (λ (x y z) (+ (/ 1 y) x))
|      |start prog|double|single|
|double|5.96728547|0.9671|2.2359|
|single|25.3839944|24.530|0.8854|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, H
Starting program: (λ (x) (/ (- (* x x) 3.0) 6.0))
Precision double result: (λ (x) (- (* (pow x 2) 0.16666666666666666) 0.5))
Precision single result: (λ (x) (- (* (* x 0.16666666666666666) x) (/ 3.0 6.0)))
|      |start prog|double|single|
|double|0.13485104|0.1716|0.1199|
|single|0.04431231|0.0448|0.0365|

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, I
Starting program: (λ (x y z t a b c) (/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0)))))))))))
Precision double result: (λ (x y z t a b c) (if (or (<= t -9.209968280333804e-244) (not (<= t 8.192245974325879e-111))) (/ x (+ (* (exp (* 2.0 (log (exp (- (/ z (/ t (sqrt (+ t a)))) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0))))))))) y) x)) (/ x (+ (* (exp (* (log (exp (/ (- (* (- a (/ 5.0 6.0)) (* z (* t 3.0))) (* (* (- a (/ 5.0 6.0)) (- (* (* t 3.0) (+ a (/ 5.0 6.0))) 2.0)) (/ (* (- b c) t) (sqrt (+ t a))))) (* (/ t (sqrt (+ t a))) (* (- a (/ 5.0 6.0)) (* t 3.0)))))) 2.0)) y) x))))
Precision single result: (λ (x y z t a b c) 0)
|      |start prog|double|single|
|double|4.17024977|2.0977|32.763|
|single|29.8823360|29.882|15.189|

Now running test: Numeric.SpecFunctions.Extra:bd0 from math-functions-0.1.5.2
Starting program: (λ (x y z) (- (* x (log (/ x y))) z))
Precision double result: (λ (x y z) (if (<= x -6.5365242933845e-311) (- (+ (* x (- (log (* (cbrt x) (cbrt x))) (log (* (cbrt y) (cbrt y))))) (* x (log (* (pow (/ -1 x) -1/3) (cbrt (/ -1 y)))))) z) (- (+ (* (log (* (cbrt x) (pow (/ 1 y) 1/3))) x) (* x (- (log (* (cbrt x) (cbrt x))) (log (* (cbrt y) (cbrt y)))))) z)))
Precision single result: (λ (x y z) (- (* (+ (log (* (cbrt (/ x y)) (cbrt (/ x y)))) (+ (log (sqrt (cbrt (/ x y)))) (log (sqrt (cbrt (/ x y)))))) x) z))
|      |start prog|double|single|
|double|14.7236683|0.3079|14.767|
|single|29.9263697|29.811|29.926|

Now running test: Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2
Starting program: (λ (x y z t a b c i) (/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i)))
Precision double result: (λ (x y z t a b c i) (/ (+ (* (+ 230661.510616 (* (+ 27464.7644705 (* y (+ z (* y x)))) y)) y) t) (+ (* y (+ c (* (cbrt (* (+ (* y (+ y a)) b) y)) (* (cbrt (* (+ (* y (+ y a)) b) y)) (cbrt (* (+ (* y (+ y a)) b) y)))))) i)))
Precision single result: (λ (x y z t a b c i) 0)
|      |start prog|double|single|
|double|28.5063571|28.593|59.262|
|single|30.0160010|30.012|8.4489|

Now running test: Statistics.Math.RootFinding:ridders from math-functions-0.1.5.2
Starting program: (λ (x y z t a) (/ (* (* x y) z) (sqrt (- (* z z) (* t a)))))
Precision double result: (λ (x y z t a) (if (<= z -1.6216233028475804e+154) (* y (- x)) (if (<= z -1.2374379366668439e-129) (* y (* x (/ 1 (/ (sqrt (- (* z z) (* t a))) z)))) (if (<= z 3.101143185542008e-218) (/ 1 (/ (sqrt (- (* z z) (* t a))) (* z (* y x)))) (if (<= z 1.2341815736615114e+78) (* (* (sqrt (/ z (sqrt (- (* z z) (* t a))))) (* (sqrt (/ 1 (/ (sqrt (- (* z z) (* t a))) z))) x)) y) (* y x))))))
Precision single result: (λ (x y z t a) 0)
|      |start prog|double|single|
|double|24.2845925|6.5228|48.912|
|single|28.5638000|24.390|5.4415|

Now running test: Statistics.Distribution.Poisson.Internal:probability from math-functions-0.1.5.2
Starting program: (λ (x y z) (exp (- (+ x (* y (log y))) z)))
Precision double result: (λ (x y z) (exp (- (+ x (* (log y) y)) z)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.01210097|0.0121|#f    |
|single|#f        |#f    |#f    |

Now running test: Statistics.Distribution.Binomial:directEntropy from math-functions-0.1.5.2
Starting program: (λ (x) (* x (log x)))
Precision double result: (λ (x) (* (log x) x))
Precision single result: (λ (x) (* (log x) x))
|      |start prog|double|single|
|double|0.26325   |0.2632|0.2632|
|single|23.6415636|23.641|23.641|

Now running test: Statistics.Correlation.Kendall:numOfTiesBy from math-functions-0.1.5.2
Starting program: (λ (x) (* x (- x 1.0)))
Precision double result: (λ (x) (+ (* x x) (* 1.0 (- x))))
Precision single result: (λ (x) (+ (* x (- 1.0)) (* (cbrt (* x x)) (* (cbrt (* x x)) (cbrt (* x x))))))
|      |start prog|double|single|
|double|0.0085    |0.0119|0.4239|
|single|0.04332556|0.0408|0.0581|

Now running test: Statistics.Sample:robustSumVarWeighted from math-functions-0.1.5.2
Starting program: (λ (x y z) (+ x (* (* y z) z)))
Precision double result: (λ (x y z) (+ (* z (* y z)) x))
Precision single result: (λ (x y z) (+ x (* z (* (* (cbrt (* z y)) (cbrt (* z y))) (cbrt (* z y))))))
|      |start prog|double|single|
|double|0.08819528|0.0881|0.4471|
|single|12.8761608|12.876|12.879|

Now running test: Statistics.Sample:$swelfordMean from math-functions-0.1.5.2
Starting program: (λ (x y z) (+ x (/ (- y x) z)))
Precision double result: (λ (x y z) (+ (/ (- y x) z) x))
Precision single result: (λ (x y z) (+ x (/ (- y x) z)))
|      |start prog|double|single|
|double|0.0145    |0.0145|0.0145|
|single|12.0207394|12.020|12.020|

Now running test: Statistics.Sample:$skurtosis from math-functions-0.1.5.2
Starting program: (λ (x y) (- (/ x (* y y)) 3.0))
Precision double result: (λ (x y) (- (/ (/ x y) y) 3.0))
Precision single result: (λ (x y) (- (/ (/ x y) y) 3.0))
|      |start prog|double|single|
|double|4.69098291|0.0836|0.0836|
|single|13.8247986|12.979|12.979|

Now running test: Statistics.Distribution.Beta:$centropy from math-functions-0.1.5.2
Starting program: (λ (x y z t a b) (+ (- (- x (* (- y 1.0) z)) (* (- t 1.0) a)) (* (- (+ y t) 2.0) b)))
Precision double result: (λ (x y z t a b) (+ (* (- (+ y t) 2.0) b) (- (- x (* (- y 1.0) z)) (* (- t 1.0) a))))
Precision single result: (λ (x y z t a b) (+ (* (- (+ y t) 2.0) b) (- (- x (* (- y 1.0) z)) (* (* a (cbrt (- t 1.0))) (* (cbrt (- t 1.0)) (cbrt (- t 1.0)))))))
|      |start prog|double|single|
|double|0.02409152|0.0240|0.1685|
|single|11.0709952|11.070|11.074|

Now running test: Statistics.Distribution.Beta:$cvariance from math-functions-0.1.5.2
Starting program: (λ (x y z) (/ (* x y) (* (* z z) (+ z 1.0))))
Precision double result: (λ (x y z) (/ (* (/ y (+ 1.0 z)) (/ x z)) z))
Precision single result: (λ (x y z) (* (/ (/ x z) z) (/ y (+ 1.0 z))))
|      |start prog|double|single|
|double|14.6729060|2.3643|6.1129|
|single|21.7814704|21.256|21.320|

Now running test: Statistics.Distribution.Beta:$cdensity from math-functions-0.1.5.2
Starting program: (λ (x y z t) (- (+ (* (- x 1.0) (log y)) (* (- z 1.0) (log (- 1.0 y)))) t))
Precision double result: (λ (x y z t) (+ (* (* (cbrt (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0)))) (* (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0))) (* (cbrt (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0)))) (cbrt (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0))))))) (* (cbrt (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0)))) (* (cbrt (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0)))) (cbrt (cbrt (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (- z 1.0))))))) (- (* (- x 1.0) (log y)) t)))
Precision single result: (λ (x y z t) (+ (* (cbrt (- z 1.0)) (* (- (log 1.0) (+ (* y 1.0) (* (/ (pow y 2) (pow 1.0 2)) 1/2))) (* (cbrt (- z 1.0)) (cbrt (- z 1.0))))) (- (* (- x 1.0) (log y)) t)))
|      |start prog|double|single|
|double|6.98730026|0.5180|0.4367|
|single|26.8669995|26.771|26.770|

Now running test: Statistics.Distribution.Binomial:$cvariance from math-functions-0.1.5.2
Starting program: (λ (x y) (* (* x y) (- 1.0 y)))
Precision double result: (λ (x y) (+ (* (* y x) 1.0) (* (* y x) (- y))))
Precision single result: (λ (x y) (* (* x y) (- 1.0 y)))
|      |start prog|double|single|
|double|0.09119812|0.0928|0.0911|
|single|10.9707481|10.974|10.970|

Now running test: Statistics.Distribution.Poisson:$clogProbability from math-functions-0.1.5.2
Starting program: (λ (x y z) (- (- (* x (log y)) z) y))
Precision double result: (λ (x y z) (- (- (* x (log y)) z) y))
Precision single result: (λ (x y z) (- (- (* x (log y)) z) y))
|      |start prog|double|single|
|double|0.09457312|0.0945|0.0945|
|single|23.2358368|23.235|23.235|

Now running test: Statistics.Distribution.CauchyLorentz:$cdensity from math-functions-0.1.5.2
Starting program: (λ (x y z) (/ (/ 1.0 x) (* y (+ 1.0 (* z z)))))
Precision double result: (λ (x y z) (/ (/ (/ 1.0 y) (* x (sqrt (+ (* z z) 1.0)))) (* (* (cbrt (sqrt (+ (* z z) 1.0))) (cbrt (sqrt (+ (* z z) 1.0)))) (cbrt (sqrt (+ (* z z) 1.0))))))
Precision single result: (λ (x y z) (/ 1.0 (* x (* (* (sqrt (+ 1.0 (* z z))) y) (sqrt (+ 1.0 (* z z)))))))
|      |start prog|double|single|
|double|6.23156956|6.1393|6.5237|
|single|16.9931912|17.075|16.828|

Now running test: Examples.Basics.BasicTests:f3 from sbv-4.4
Starting program: (λ (x y) (* (+ x y) (+ x y)))
Precision double result: (λ (x y) (+ (* y (+ x y)) (* (+ x y) x)))
Precision single result: (λ (x y) (* (+ y x) (+ y x)))
|      |start prog|double|single|
|double|0.02539624|0.0171|0.0253|
|single|0.10965112|0.1093|0.1096|

Now running test: Examples.Basics.BasicTests:f2 from sbv-4.4
Starting program: (λ (x y) (- (* x x) (* y y)))
Precision double result: (λ (x y) (* (+ y x) (- x y)))
Precision single result: (λ (x y) (- (* (cbrt (* x x)) (* (cbrt (* x x)) (cbrt (* x x)))) (* y y)))
|      |start prog|double|single|
|double|0.00925503|0.0011|0.6286|
|single|0.11270310|0.1097|0.1500|

Now running test: Examples.Basics.BasicTests:f1 from sbv-4.4
Starting program: (λ (x y) (* (+ x y) (- x y)))
Precision double result: (λ (x y) (* (+ y x) (- x y)))
Precision single result: (λ (x y) (* (+ y x) (- x y)))
|      |start prog|double|single|
|double|0.001     |0.001 |0.001 |
|single|0.10970300|0.1097|0.1097|

Now running test: Examples.Basics.ProofTests:f4 from sbv-4.4
Starting program: (λ (x y) (+ (+ (* x x) (* (* x 2.0) y)) (* y y)))
Precision double result: (λ (x y) (+ (pow x 2) (+ (pow y 2) (* (cbrt (* (* y x) 2.0)) (* (cbrt (* (* y x) 2.0)) (cbrt (* (* y x) 2.0)))))))
Precision single result: (λ (x y) (+ (+ (* (* (* (cbrt x) (cbrt x)) (cbrt (* x x))) (cbrt (* x x))) (* (* 2.0 x) y)) (* y y)))
|      |start prog|double|single|
|double|0.01296168|0.0157|0.6108|
|single|0.10557556|0.1057|0.1429|

Now running test: Numeric.LinearAlgebra.Util:formatSparse from hmatrix-0.16.1.5
Starting program: (λ (x y) (/ (fabs (- x y)) (fabs y)))
Precision double result: (λ (x y) (/ (fabs (- x y)) (fabs y)))
Precision single result: (λ (x y) (* (/ (sqrt (fabs (- x y))) (sqrt (fabs y))) (/ (sqrt (fabs (- x y))) (sqrt (fabs y)))))
|      |start prog|double|single|
|double|0.019625  |0.0196|0.3534|
|single|26.2009814|26.200|26.205|

Now running test: Data.Random.Distribution.Normal:normalF from random-fu-0.2.6.2
Starting program: (λ (x y) (exp (* (* x y) y)))
Precision double result: (λ (x y) (exp (* (* y x) y)))
Precision single result: (λ (x y) (exp (* (* y x) y)))
|      |start prog|double|single|
|double|0.00834159|0.0083|0.0083|
|single|11.5313566|11.531|11.531|

Now running test: Data.Random.Distribution.Normal:normalTail from random-fu-0.2.6.2
Starting program: (λ (x y) (+ (+ (* x x) y) y))
Precision double result: (λ (x y) (+ (+ y y) (* x x)))
Precision single result: (λ (x y) (+ (+ y y) (* (* (* (cbrt (* (cbrt (* x x)) (cbrt (* x x)))) (* (cbrt (cbrt (* x x))) (cbrt (cbrt (* x x))))) (cbrt (* (cbrt (* x x)) (cbrt (* x x))))) (cbrt (* x x)))))
|      |start prog|double|single|
|double|0.014625  |0.006 |0.5902|
|single|0.06285620|0.0622|0.1139|

Now running test: Data.Random.Distribution.Normal:doubleStdNormalZ from random-fu-0.2.6.2
Starting program: (λ (x) (- (+ x x) 1.0))
Precision double result: (λ (x) (- (+ x x) 1.0))
Precision single result: (λ (x) (- (+ x x) 1.0))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.00305064|0.0030|0.0030|

Now running test: Data.Random.Distribution.T:$ccdf from random-fu-0.2.6.2
Starting program: (λ (x y) (/ (+ x y) (+ y y)))
Precision double result: (λ (x y) (+ (* (/ x y) 1/2) 1/2))
Precision single result: (λ (x y) (exp (log 1/2)))
|      |start prog|double|single|
|double|0.05512323|0.0263|27.666|
|single|26.1171769|12.915|3.3496|

Now running test: Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, A
Starting program: (λ (x y z t) (- 1.0 (/ x (* (- y z) (- y t)))))
Precision double result: (λ (x y z t) (- 1.0 (/ x (* (- y z) (- y t)))))
Precision single result: (λ (x y z t) 1.0)
|      |start prog|double|single|
|double|0.61524434|0.6152|13.510|
|single|18.8209340|18.820|1.3727|

Now running test: Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, B
Starting program: (λ (x y z t) (/ x (* (- y z) (- t z))))
Precision double result: (λ (x y z t) (/ (* (/ 1 (- y z)) x) (- t z)))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|7.64596562|2.2973|36.970|
|single|19.1493609|19.148|2.8017|

Now running test: Data.Random.Dice:roll from dice-0.1
Starting program: (λ (x) (- (* x x) 1.0))
Precision double result: (λ (x) (- (* x x) 1.0))
Precision single result: (λ (x) (- (* x x) 1.0))
|      |start prog|double|single|
|double|0.00149427|0.0014|0.0014|
|single|0.03036580|0.0303|0.0303|

Now running test: Prelude:atanh from fay-base-0.20.0.1
Starting program: (λ (x) (/ (+ x 1.0) (- 1.0 x)))
Precision double result: (λ (x) (log (exp (/ (+ x 1.0) (- 1.0 x)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.01207312|0.0193|#f    |
|single|#f        |#f    |#f    |

Now running test: ReportTypes:explainFloat from gipeda-0.1.2.1
Starting program: (λ (x) (* 100.0 (/ (- x x) x)))
Precision double result: (λ (x) 0)
Precision single result: (λ (x) 0)
|      |start prog|double|single|
|double|0         |0     |0     |
|single|26.8125602|0     |0     |

Now running test: Hakyll.Web.Tags:renderTagCloud from hakyll-4.7.2.3
Starting program: (λ (x y z t a) (+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x))))
Precision double result: (λ (x y z t a) (if (<= (/ (- y z) (- (+ t 1.0) z)) 0.999999999999973) (+ (* (/ (* (cbrt (- y z)) (cbrt (- y z))) (* (cbrt (- (+ t 1.0) z)) (cbrt (- (+ t 1.0) z)))) (* (/ (cbrt (- y z)) (cbrt (- (+ t 1.0) z))) (- a x))) x) (if (<= (/ (- y z) (- (+ t 1.0) z)) 1.0000000000660114) (+ a (* (/ y z) (- x a))) (+ x (* (- y z) (* (- a x) (/ 1 (- (+ t 1.0) z))))))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|8.74501824|5.1618|42.003|
|single|22.1594071|22.162|10.087|

Now running test: Data.Histogram.Bin.BinF:$cfromIndex from histogram-fill-0.8.4.1
Starting program: (λ (x y z) (+ (+ (/ x 2.0) (* y x)) z))
Precision double result: (λ (x y z) (+ (* (+ y 0.5) x) z))
Precision single result: (λ (x y z) (+ (* (+ y 0.5) x) z))
|      |start prog|double|single|
|double|0.006375  |0.0091|0.0091|
|single|8.74100146|8.7358|8.7358|

Now running test: Data.Histogram.Bin.LogBinD:$cbinSizeN from histogram-fill-0.8.4.1
Starting program: (λ (x y) (- (* x y) x))
Precision double result: (λ (x y) (- (* x y) x))
Precision single result: (λ (x y) (- (* x y) x))
|      |start prog|double|single|
|double|0.007875  |0.0078|0.0078|
|single|8.87737600|8.8773|8.8773|

Now running test: Numeric.Signal:interpolate   from hsignal-0.2.7.1
Starting program: (λ (x y z t a) (+ x (* (- y z) (/ (- t x) (- a z)))))
Precision double result: (λ (x y z t a) (if (or (<= (+ (* (/ (- t x) (- a z)) (- y z)) x) -6.580254703514507e-285) (not (<= (+ (* (/ (- t x) (- a z)) (- y z)) x) 0.0))) (+ (+ x (* (/ (- y z) (- a z)) (- x))) (* (cbrt (/ (- y z) (- a z))) (* (* (cbrt (/ (- y z) (- a z))) (cbrt (/ (- y z) (- a z)))) t))) (+ t (* (/ y z) (- x t)))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|14.9382813|5.4163|45.573|
|single|24.6897586|24.555|11.243|

Now running test: Numeric.Signal.Multichannel:$cget from hsignal-0.2.7.1
Starting program: (λ (x y z t) (+ (* (/ x y) (- z t)) t))
Precision double result: (λ (x y z t) (+ (/ (- z t) (/ y x)) t))
Precision single result: (λ (x y z t) (+ t (* (/ x y) (- z t))))
|      |start prog|double|single|
|double|2.11220234|2.0509|2.1122|
|single|20.0420004|20.041|20.042|

Now running test: Numeric.Signal.Multichannel:$cput from hsignal-0.2.7.1
Starting program: (λ (x y z t) (* (/ (- x y) (- z y)) t))
Precision double result: (λ (x y z t) (/ t (/ (- z y) (- x y))))
Precision single result: (λ (x y z t) 0)
|      |start prog|double|single|
|double|2.13123814|2.1625|56.241|
|single|24.2650269|24.246|6.2895|

Now running test: Data.HyperLogLog.Config:hll from hyperloglog-0.3.4
Starting program: (λ (x y) (* (* x y) y))
Precision double result: (λ (x y) (* (* y x) y))
Precision single result: (λ (x y) (* (* y x) y))
|      |start prog|double|single|
|double|0.175875  |0.1758|0.1758|
|single|12.9210320|12.921|12.921|

Now running test: Data.HyperLogLog.Type:size from hyperloglog-0.3.4, A
Starting program: (λ (x y) (* (* x 1.0) (log (- 1.0 (/ y x)))))
Precision double result: (λ (x y) (if (<= (* (* 1.0 x) (log (- 1.0 (/ y x)))) -inf.0) (* (+ (log y) (log (/ -1 x))) (* 1.0 x)) (+ (* (log (sqrt (- 1.0 (/ y x)))) (* 1.0 x)) (* (+ (cbrt (* (* (log (sqrt (sqrt (- 1.0 (/ y x))))) (log (sqrt (sqrt (- 1.0 (/ y x)))))) (log (sqrt (sqrt (- 1.0 (/ y x))))))) (* (log (sqrt (- 1.0 (/ y x)))) 1/2)) (* 1.0 x)))))
Precision single result: (λ (x y) (* (* 1.0 x) (log 1.0)))
|      |start prog|double|single|
|double|44.2402844|41.748|60.869|
|single|27.6954717|27.671|14.493|

Now running test: Data.HyperLogLog.Type:size from hyperloglog-0.3.4, B
Starting program: (λ (x y) (* x (log (/ x y))))
Precision double result: (λ (x y) (if (<= y -2.7845062076573e-310) (* (- (log (/ -1 y)) (log (/ -1 x))) x) (* (- (log x) (log y)) x)))
Precision single result: (λ (x y) (* (log (/ x y)) x))
|      |start prog|double|single|
|double|14.7683236|0.6500|14.768|
|single|29.9971075|29.832|29.997|

Now running test: Diagrams.Backend.Cairo.Internal:setTexture from diagrams-cairo-1.3.0.3
Starting program: (λ (x y z) (/ (* x (- y z)) y))
Precision double result: (λ (x y z) (/ x (/ y (- y z))))
Precision single result: (λ (x y z) (- x (/ (* z x) y)))
|      |start prog|double|single|
|double|11.1982210|3.1621|4.3556|
|single|27.9307746|27.870|17.561|

Now running test: Numeric.Integration.TanhSinh:simpson  from integration-0.2.1
Starting program: (λ (x y) (* x (+ y y)))
Precision double result: (λ (x y) (* x (+ y y)))
Precision single result: (λ (x y) (log (pow (exp x) (+ y y))))
|      |start prog|double|single|
|double|0.02286300|0.0228|52.718|
|single|13.5440716|13.544|6.3144|

Now running test: Numeric.Integration.TanhSinh:everywhere from integration-0.2.1
Starting program: (λ (x y) (* x (+ 1.0 (* y y))))
Precision double result: (λ (x y) (+ (* x 1.0) (* y (* x y))))
Precision single result: (λ (x y) (* x 1.0))
|      |start prog|double|single|
|double|4.91491514|0.0902|20.825|
|single|5.42899826|4.4500|2.5229|

Now running test: Data.Metrics.Snapshot:quantile from metrics-0.3.0.2
Starting program: (λ (x y z t) (+ x (* (- y z) (- t x))))
Precision double result: (λ (x y z t) (+ (* (- z y) x) (+ x (* (- y z) t))))
Precision single result: (λ (x y z t) x)
|      |start prog|double|single|
|double|0.0255    |0.0263|47.655|
|single|14.3682243|14.393|10.108|

Now running test: Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, A
Starting program: (λ (x y) (+ (+ x y) x))
Precision double result: (λ (x y) (+ y (* x 2)))
Precision single result: (λ (x y) (+ y (* x 2)))
|      |start prog|double|single|
|double|0.01882312|0     |0     |
|single|0.012     |0.0115|0.0115|

Now running test: Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, B
Starting program: (λ (x y z t) (+ (* x (+ (+ (+ (+ y z) z) y) t)) (* y 5.0)))
Precision double result: (λ (x y z t) (+ (* (+ t (+ y (+ (+ y z) z))) x) (* 5.0 y)))
Precision single result: (λ (x y z t) (+ (+ (* (sqrt (* x t)) (sqrt (* x t))) (* y 5.0)) (* (+ z y) (+ x x))))
|      |start prog|double|single|
|double|0.08770370|0.0877|26.184|
|single|16.8248602|16.824|17.214|

Now running test: Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendInside from plot-0.2.3.4
Starting program: (λ (x y z) (+ (+ (+ (+ (+ x y) y) x) z) x))
Precision double timed out or failed
Precision single result: (λ (x y z) (+ (+ x z) (+ (+ x y) (+ x y))))
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|0.07376184|#f    |0.0725|

Now running test: Graphics.Rendering.Plot.Render.Plot.Legend:renderLegendOutside from plot-0.2.3.4, C
Starting program: (λ (x y z) (+ (* x (+ y z)) (* z 5.0)))
Precision double result: (λ (x y z) (+ (* (+ x 5.0) z) (* y x)))
Precision single result: (λ (x y z) (* (* (* (cbrt z) (cbrt 5.0)) (cbrt (* 5.0 z))) (* (cbrt z) (cbrt 5.0))))
|      |start prog|double|single|
|double|0.05969812|0.0597|35.102|
|single|12.0776727|12.091|6.6618|

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:tickPosition from plot-0.2.3.4
Starting program: (λ (x y z t) (+ x (* (- y x) (/ z t))))
Precision double result: (λ (x y z t) (+ (* (- y x) (/ z t)) x))
Precision single result: (λ (x y z t) x)
|      |start prog|double|single|
|double|1.91203089|1.9120|31.556|
|single|19.9133581|19.913|5.3868|

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisLine from plot-0.2.3.4, A
Starting program: (λ (x y z t a) (+ x (* y (/ (- z t) (- z a)))))
Precision double result: (λ (x y z t a) (+ (/ y (- (/ z (- z t)) (/ a (- z t)))) x))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|1.30392547|1.2601|28.875|
|single|24.4439179|27.697|5.4470|

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisLine from plot-0.2.3.4, B
Starting program: (λ (x y z t a) (+ x (* y (/ (- z t) (- a t)))))
Precision double result: (λ (x y z t a) (+ (* (/ (- z t) (- a t)) y) x))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|1.40045073|1.4004|28.098|
|single|24.2405786|24.240|5.5799|

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTick from plot-0.2.3.4, A
Starting program: (λ (x y z t a) (+ x (/ (* (- y z) t) (- a z))))
Precision double result: (λ (x y z t a) (if (<= (/ (* (- y z) t) (- a z)) -inf.0) (+ x (* (- y z) (* t (/ 1 (- a z))))) (if (<= (/ (* (- y z) t) (- a z)) 2.138538993908674e+259) (+ (/ (* (- y z) t) (- a z)) x) (+ x (* (- y z) (* t (/ 1 (- a z))))))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|10.1910723|0.4193|29.130|
|single|24.3001711|24.240|5.4612|

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTick from plot-0.2.3.4, B
Starting program: (λ (x y z t a) (- (+ x y) (/ (* (- z t) y) (- a t))))
Precision double result: (λ (x y z t a) (- (+ x y) (* y (* (- z t) (/ 1 (- a t))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|15.4270105|11.617|#f    |
|single|#f        |#f    |#f    |

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, A
Starting program: (λ (x y z t a) (+ x (/ (* y (- z t)) (- z a))))
Precision double result: (λ (x y z t a) (+ x (+ (/ (- t) (/ (- z a) y)) (* (/ z (- z a)) y))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|10.0975804|1.7196|27.847|
|single|24.4716863|24.405|5.8677|

Now running test: Graphics.Rendering.Plot.Render.Plot.Axis:renderAxisTicks from plot-0.2.3.4, B
Starting program: (λ (x y z t a) (+ x (/ (* y (- z t)) (- a t))))
Precision double result: (λ (x y z t a) (+ x (* (/ (cbrt (- z t)) (cbrt (- a t))) (* (/ (* (cbrt (- z t)) (cbrt (- z t))) (* (cbrt (- a t)) (* (cbrt (cbrt (- a t))) (cbrt (* (cbrt (- a t)) (cbrt (- a t))))))) y))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|10.1419583|0.7101|28.969|
|single|24.3457176|24.271|5.4155|

Now running test: Data.Array.Repa.Algorithms.Pixel:doubleRmsOfRGB8 from repa-algorithms-3.4.0.1
Starting program: (λ (x y z) (sqrt (/ (+ (+ (* x x) (* y y)) (* z z)) 3.0)))
Precision double result: (λ (x y z) (if (<= y -3.146524226104144e+149) (* (- y) (sqrt 0.3333333333333333)) (if (<= y 3.667318723255433e+155) (sqrt (/ (+ (* y y) (+ (* z z) (* x x))) 3.0)) (/ y (sqrt 3.0)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|35.5025474|24.166|#f    |
|single|#f        |#f    |#f    |

Now running test: Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, A
Starting program: (λ (x y z) (+ 1.0 (/ (* 4.0 (- (+ x (* y 0.75)) z)) y)))
Precision double result: (λ (x y z) (+ (/ (* (- x z) 4.0) y) 4.0))
Precision single result: (λ (x y z) (+ (+ (/ (* 4.0 (- x z)) y) 3.0) 1.0))
|      |start prog|double|single|
|double|0.13879279|0.0697|0.0737|
|single|27.1241980|16.486|16.487|

Now running test: Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, B
Starting program: (λ (x y z) (/ (* 4.0 (- (- x y) (* z 0.5))) z))
Precision double result: (λ (x y z) (- (/ (- x y) (/ z 4.0)) (/ (* z 0.5) (/ z 4.0))))
Precision single result: (λ (x y z) (- (/ (* (- x y) 4.0) z) 2.0))
|      |start prog|double|single|
|double|0.15634885|0.0096|0.0774|
|single|28.1226357|28.115|17.227|

Now running test: Data.Array.Repa.Algorithms.ColorRamp:rampColorHotToCold from repa-algorithms-3.4.0.1, C
Starting program: (λ (x y z) (+ 1.0 (/ (* 4.0 (- (+ x (* y 0.25)) z)) y)))
Precision double result: (λ (x y z) (+ (* 4.0 (- (/ x y) (/ z y))) 2.0))
Precision single result: (λ (x y z) (+ (+ 1.0 (/ (* 4.0 (- x z)) y)) 1.0))
|      |start prog|double|single|
|double|0.07240003|0.0078|0.0635|
|single|27.1246120|16.986|17.029|

Now running test: Data.Spline.Key:interpolateKeys from smoothie-0.4.0.2
Starting program: (λ (x) (* (* x x) (- 3.0 (* x 2.0))))
Precision double result: (λ (x) (+ (* (pow x 3) (- 2.0)) (* 3.0 (* x x))))
Precision single result: (λ (x) (* (* x x) (- 3.0 (* (* (cbrt (cbrt (* x 2.0))) (* (cbrt (* x 2.0)) (* (cbrt (cbrt (* x 2.0))) (cbrt (cbrt (* x 2.0)))))) (cbrt (* x 2.0))))))
|      |start prog|double|single|
|double|0.197875  |0.1381|0.5455|
|single|0.06344625|0.0657|0.0805|

Now running test: FRP.Yampa.Vector3:vector3Rho from Yampa-0.10.2
Starting program: (λ (x y z) (sqrt (+ (+ (* x x) (* y y)) (* z z))))
Precision double result: (λ (x y z) (if (<= x -1.3523922048699094e+154) (- x) (if (<= x 7.407658970081937e+137) (sqrt (+ (* z z) (+ (* y y) (* x x)))) x)))
Precision single timed out or failed
|      |start prog|double|single|
|double|35.4548874|23.805|#f    |
|single|#f        |#f    |#f    |

Now running test: SynthBasics:moogVCF from YampaSynth-0.2
Starting program: (λ (x y z t) (+ x (* (* y z) (- (tanh (/ t y)) (tanh (/ x y))))))
Precision double result: (λ (x y z t) (+ x (* (* z (- (tanh (/ t y)) (tanh (/ x y)))) y)))
Precision single result: (λ (x y z t) x)
|      |start prog|double|single|
|double|4.28679045|1.8978|23.060|
|single|26.3941352|26.367|4.3060|

Now running test: FastMath dist
Starting program: (λ (d1 d2 d3) (+ (* d1 d2) (* d1 d3)))
Precision double result: (λ (d1 d2 d3) (* (+ d3 d2) d1))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.01285411|0.0121|#f    |
|single|#f        |#f    |#f    |

Now running test: FastMath test1
Starting program: (λ (d) (+ (* d 10) (* d 20)))
Precision double result: (λ (d) (* 30 d))
Precision single result: (λ (d) (* 30 d))
|      |start prog|double|single|
|double|0.261625  |0     |0     |
|single|0.13689126|0.1089|0.1089|

Now running test: FastMath test2
Starting program: (λ (d1 d2) (+ (+ (* d1 10) (* d1 d2)) (* d1 20)))
Precision double result: (λ (d1 d2) (* (+ d2 30) d1))
Precision single result: (λ (d1 d2) (/ (* d1 -900) (- d2 30)))
|      |start prog|double|single|
|double|0.18306372|0.0253|27.016|
|single|8.66338820|8.6447|4.3717|

Now running test: FastMath dist3
Starting program: (λ (d1 d2 d3) (+ (+ (* d1 d2) (* (+ d3 5) d1)) (* d1 32)))
Precision double result: (λ (d1 d2 d3) (* (+ d3 (+ d2 37)) d1))
Precision single result: (λ (d1 d2 d3) (* (+ d3 (+ d2 37)) d1))
|      |start prog|double|single|
|double|0.04157312|0.0203|0.0203|
|single|16.0822331|16.081|16.081|

Now running test: FastMath dist4
Starting program: (λ (d1 d2 d3 d4) (- (+ (- (* d1 d2) (* d1 d3)) (* d4 d1)) (* d1 d1)))
Precision double result: (λ (d1 d2 d3 d4) (- (+ (- (* d2 d1) (* d3 d1)) (* d1 d4)) (* d1 d1)))
Precision single result: (λ (d1 d2 d3 d4) 0)
|      |start prog|double|single|
|double|0.024     |0.024 |60.769|
|single|21.3208586|21.320|11.843|

Now running test: FastMath test3
Starting program: (λ (d1 d2 d3) (+ (+ (* d1 3) (* d1 d2)) (* d1 d3)))
Precision double result: (λ (d1 d2 d3) (+ (+ (* d2 d1) (* 3 d1)) (* d1 d3)))
Precision single result: (λ (d1 d2 d3) (/ (* d1 (+ 9 (* d2 6))) (- (+ 3 d2) d3)))
|      |start prog|double|single|
|double|0.07548836|0.0754|43.264|
|single|15.7919157|15.791|12.987|

Now running test: FastMath repmul
Starting program: (λ (d1) (* (* (* d1 d1) d1) d1))
Precision double result: (λ (d1) (pow d1 4))
Precision single result: (λ (d1) (* d1 (* (* (sqrt (* d1 d1)) (sqrt (* d1 d1))) d1)))
|      |start prog|double|single|
|double|0.14270996|0     |0.1427|
|single|0.04773443|0.0484|0.0485|

Now running test: FastMath test5
Starting program: (λ (d1) (* (* d1 (* (* (* (* (* d1 (* d1 d1)) d1) d1) (* d1 d1)) d1)) d1))
Precision double result: (λ (d1) (pow d1 10))
Precision single result: (λ (d1) (* (* (* (* (* d1 (* d1 (* (* (* (* (cbrt (cbrt (* d1 d1))) (* (cbrt (cbrt (* d1 d1))) (log (exp (cbrt (cbrt (* d1 d1))))))) (cbrt (* d1 d1))) (cbrt (* d1 d1))) d1))) (* d1 d1)) d1) d1) d1))
|      |start prog|double|single|
|double|0.12240473|0     |3.9528|
|single|0.04122331|0.0405|0.0423|

Now running test: Jmat.Real.gamma, branch z greater than 0.5
Starting program: (λ (z) (* (* (* (sqrt (* PI 2)) (pow (+ (+ (- z 1) 7) 0.5) (+ (- z 1) 0.5))) (exp (- (+ (+ (- z 1) 7) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- z 1) 1))) (/ -1259.1392167224028 (+ (- z 1) 2))) (/ 771.3234287776531 (+ (- z 1) 3))) (/ -176.6150291621406 (+ (- z 1) 4))) (/ 12.507343278686905 (+ (- z 1) 5))) (/ -0.13857109526572012 (+ (- z 1) 6))) (/ 9.984369578019572e-06 (+ (- z 1) 7))) (/ 1.5056327351493116e-07 (+ (- z 1) 8)))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Jmat.Real.gamma, branch z less than 0.5
Starting program: (λ (z) (* (/ PI (sin (* PI z))) (* (* (* (sqrt (* PI 2)) (pow (+ (+ (- (- 1 z) 1) 7) 0.5) (+ (- (- 1 z) 1) 0.5))) (exp (- (+ (+ (- (- 1 z) 1) 7) 0.5)))) (+ (+ (+ (+ (+ (+ (+ (+ 0.9999999999998099 (/ 676.5203681218851 (+ (- (- 1 z) 1) 1))) (/ -1259.1392167224028 (+ (- (- 1 z) 1) 2))) (/ 771.3234287776531 (+ (- (- 1 z) 1) 3))) (/ -176.6150291621406 (+ (- (- 1 z) 1) 4))) (/ 12.507343278686905 (+ (- (- 1 z) 1) 5))) (/ -0.13857109526572012 (+ (- (- 1 z) 1) 6))) (/ 9.984369578019572e-06 (+ (- (- 1 z) 1) 7))) (/ 1.5056327351493116e-07 (+ (- (- 1 z) 1) 8))))))
Precision double result: (λ (z) (* (* (exp (- (- (- 1 z) (- -6 0.5)))) (* (* (pow (- (- 1 z) (- -6 0.5)) (- (- 1 z) (- 1 0.5))) (sqrt (* PI 2))) (/ PI (sin (* z PI))))) (+ (+ (+ (/ -0.13857109526572012 (- 6 z)) (/ 12.507343278686905 (- 5 z))) (+ (/ 9.984369578019572e-06 (+ 6 (- 1 z))) (/ 1.5056327351493116e-07 (- 1 (- z 7))))) (+ (+ (/ 676.5203681218851 (- 1 z)) (+ 0.9999999999998099 (/ -1259.1392167224028 (- 2 z)))) (/ (+ (* (+ 771.3234287776531 -176.6150291621406) (- 3 z)) 771.3234287776531) (* (- 4 z) (- 3 z)))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|1.80982839|0.6340|#f    |
|single|#f        |#f    |#f    |

Now running test: Jmat.Real.lambertw, estimator
Starting program: (λ (x) (- (log x) (log (log x))))
Precision double result: (λ (x) (log (/ x (log x))))
Precision single result: (λ (x) (log (/ x (log x))))
|      |start prog|double|single|
|double|0.26182312|0.004 |0.004 |
|single|26.2657177|26.233|26.233|

Now running test: Jmat.Real.lambertw, newton loop step
Starting program: (λ (wj x) (- wj (/ (- (* wj (exp wj)) x) (+ (exp wj) (* wj (exp wj))))))
Precision double result: (λ (wj x) (+ (+ (* (+ (* wj 5/2) -2) (* x wj)) x) (- (+ (pow wj 2) (pow wj 4)) (pow wj 3))))
Precision single result: (λ (wj x) (- (+ (* (sqrt (pow wj 2)) (sqrt (pow wj 2))) x) (* (* x wj) 2)))
|      |start prog|double|single|
|double|13.6589448|1.5638|2.1420|
|single|1.04772932|0.8273|0.9643|

Now running test: Jmat.Real.dawson
Starting program: (λ (x) (* (/ (+ (+ (+ (+ (+ 1 (* 0.1049934947 (* x x))) (* 0.0424060604 (* (* x x) (* x x)))) (* 0.0072644182 (* (* (* x x) (* x x)) (* x x)))) (* 0.0005064034 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0001789971 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (+ (+ (+ (+ (+ (+ 1 (* 0.7715471019 (* x x))) (* 0.2909738639 (* (* x x) (* x x)))) (* 0.0694555761 (* (* (* x x) (* x x)) (* x x)))) (* 0.0140005442 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* 0.0008327945 (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)))) (* (* 2 0.0001789971) (* (* (* (* (* (* x x) (* x x)) (* x x)) (* x x)) (* x x)) (* x x))))) x))
Precision double result: (λ (x) (if (or (<= x -247914827.1872082) (not (<= x 684.996626655095))) (+ (/ (/ 0.2514179000665375 x) (* x x)) (+ (/ 0.5 x) (/ 0.15298196345929327 (pow x 5)))) (* (+ (+ (* (+ 0.0424060604 (* 0.0072644182 (* x x))) (pow x 4)) (+ 1 (* x (* 0.1049934947 x)))) (* (+ (* (* x x) 0.0001789971) 0.0005064034) (pow (* x x) 4))) (* x (/ 1 (+ (* (* 2 0.0001789971) (* (* x x) (* (* x x) (* (* (* (* x x) (* x x)) (* x x)) (* x x))))) (+ (+ (+ (* (* (* (* x x) (* x x)) (* x x)) 0.0694555761) (+ (* 0.2909738639 (* (* x x) (* x x))) (+ (* (* x x) 0.7715471019) 1))) (* 0.0140005442 (* (* (* (* x x) (* x x)) (* x x)) (* x x)))) (* (* (* x x) (* (* (* (* x x) (* x x)) (* x x)) (* x x))) 0.0008327945))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.1615728|0.0160|#f    |
|single|#f        |#f    |#f    |

Now running test: Jmat.Real.erfi, branch x less than or equal to 0.5
Starting program: (λ (x) (fabs (* (/ 1 (sqrt PI)) (+ (+ (+ (* 2 (fabs x)) (* (/ 2 3) (* (* (fabs x) (fabs x)) (fabs x)))) (* (/ 1 5) (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)))) (* (/ 1 21) (* (* (* (* (* (* (fabs x) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)) (fabs x)))))))
Precision double result: (λ (x) (fabs (* (+ (* (pow (fabs x) 3) 2/3) (+ (+ (* (pow (fabs x) 5) 1/5) (* (* (sqrt (pow (fabs x) 7)) 1/21) (sqrt (pow (fabs x) 7)))) (* 2 (fabs x)))) (sqrt (/ 1 PI)))))
Precision single result: (λ (x) (fabs (+ (/ (pow (* (fabs x) (fabs x)) 3) (/ 21 (/ (fabs x) (sqrt PI)))) (* (+ (+ (* 2/3 (* (fabs x) (* (fabs x) (fabs x)))) (* 2 (fabs x))) (* 1/5 (* (* (* (fabs x) (* (fabs x) (fabs x))) (fabs x)) (fabs x)))) (/ 1 (sqrt PI))))))
|      |start prog|double|single|
|double|0.21464930|0.2196|0.1920|
|single|0.07279802|0.1158|0.0746|

Now running test: Jmat.Real.erfi, branch x greater than or equal to 5
Starting program: (λ (x) (* (* (/ 1 (sqrt PI)) (exp (* (fabs x) (fabs x)))) (+ (+ (+ (/ 1 (fabs x)) (* (/ 1 2) (* (* (/ 1 (fabs x)) (/ 1 (fabs x))) (/ 1 (fabs x))))) (* (/ 3 4) (* (* (* (* (/ 1 (fabs x)) (/ 1 (fabs x))) (/ 1 (fabs x))) (/ 1 (fabs x))) (/ 1 (fabs x))))) (* (/ 15 8) (* (* (* (* (* (* (/ 1 (fabs x)) (/ 1 (fabs x))) (/ 1 (fabs x))) (/ 1 (fabs x))) (/ 1 (fabs x))) (/ 1 (fabs x))) (/ 1 (fabs x)))))))
Precision double result: (λ (x) (+ (* (+ (* (/ 1 (fabs x)) (* (/ 1 (fabs x)) 1/2)) (* 3/4 (pow (/ 1 (fabs x)) 4))) (* (exp (* (fabs x) (fabs x))) (* (/ 1 (fabs x)) (/ 1 (sqrt PI))))) (+ (* (* (/ 1 (fabs x)) (/ 1 (* (cbrt (* (cbrt (sqrt PI)) (* (cbrt (sqrt PI)) (cbrt (sqrt PI))))) (* (cbrt (sqrt PI)) (cbrt (sqrt PI)))))) (exp (* (fabs x) (fabs x)))) (* (* (pow (/ 1 (fabs x)) 4) (/ 1 (pow (fabs x) 3))) (* (exp (* (fabs x) (fabs x))) (* 15/8 (/ 1 (sqrt PI))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|1.49205343|1.0843|#f    |
|single|#f        |#f    |#f    |

Now running test: Jmat.Real.erf
Starting program: (λ (x) (- 1 (* (* (/ 1 (+ 1 (* 0.3275911 (fabs x)))) (+ 0.254829592 (* (/ 1 (+ 1 (* 0.3275911 (fabs x)))) (+ -0.284496736 (* (/ 1 (+ 1 (* 0.3275911 (fabs x)))) (+ 1.421413741 (* (/ 1 (+ 1 (* 0.3275911 (fabs x)))) (+ -1.453152027 (* (/ 1 (+ 1 (* 0.3275911 (fabs x)))) 1.061405429))))))))) (exp (- (* (fabs x) (fabs x)))))))
Precision double result: (λ (x) (exp (log (log (exp (- 1 (* (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (cbrt (* (* (+ (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (+ (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (+ 1.421413741 (* (+ (* (/ (/ 1 (sqrt (+ (* (fabs x) 0.3275911) 1))) (sqrt (+ (* (fabs x) 0.3275911) 1))) 1.061405429) -1.453152027) (/ 1 (+ (* (fabs x) 0.3275911) 1))))) -0.284496736)) 0.254829592) (+ (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (+ (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (+ 1.421413741 (* (+ (* (/ (/ 1 (sqrt (+ (* (fabs x) 0.3275911) 1))) (sqrt (+ (* (fabs x) 0.3275911) 1))) 1.061405429) -1.453152027) (/ 1 (+ (* (fabs x) 0.3275911) 1))))) -0.284496736)) 0.254829592)) (+ (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (+ (* (/ 1 (+ (* (fabs x) 0.3275911) 1)) (+ 1.421413741 (* (+ (* (/ (/ 1 (sqrt (+ (* (fabs x) 0.3275911) 1))) (sqrt (+ (* (fabs x) 0.3275911) 1))) 1.061405429) -1.453152027) (/ 1 (+ (* (fabs x) 0.3275911) 1))))) -0.284496736)) 0.254829592)))) (exp (* (- (fabs x)) (fabs x))))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|13.7233032|13.714|#f    |
|single|#f        |#f    |#f    |

Now running test: math.abs on complex
Starting program: (λ (re im) (sqrt (+ (* re re) (* im im))))
Precision double result: (λ (re im) (if (<= re -5.4075823888042635e+153) (- re) (if (<= re 3.430104507202478e+144) (sqrt (+ (* im im) (* re re))) re)))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.5912833|16.504|#f    |
|single|#f        |#f    |#f    |

Now running test: math.cube on real
Starting program: (λ (x) (* (* x x) x))
Precision double result: (λ (x) (pow x 3))
Precision single result: (λ (x) (* x (* (cbrt (* x x)) (* (cbrt (* x x)) (cbrt (* x x))))))
|      |start prog|double|single|
|double|0.126125  |0     |0.6945|
|single|0.05563966|0.0553|0.0740|

Now running test: math.cube on complex, real part
Starting program: (λ (x.re x.im) (- (* (- (* x.re x.re) (* x.im x.im)) x.re) (* (+ (* x.re x.im) (* x.im x.re)) x.im)))
Precision double result: (λ (x.re x.im) (- (* (+ x.im x.re) (* (- x.re x.im) x.re)) (* x.im (+ (* x.im x.re) (* x.im x.re)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|7.02573249|0.2481|#f    |
|single|#f        |#f    |#f    |

Now running test: math.cube on complex, imaginary part
Starting program: (λ (x.re x.im) (+ (* (- (* x.re x.re) (* x.im x.im)) x.im) (* (+ (* x.re x.im) (* x.im x.re)) x.re)))
Precision double result: (λ (x.re x.im) (+ (* x.re (+ (* x.im x.re) (* x.im x.re))) (* (+ x.im x.re) (* (- x.re x.im) x.im))))
Precision single result: (λ (x.re x.im) (+ (* (* (* x.im (cbrt (- x.re x.im))) (* (cbrt (- x.re x.im)) (cbrt (- x.re x.im)))) (+ x.im x.re)) (* x.re (+ (* x.im x.re) (* x.im x.re)))))
|      |start prog|double|single|
|double|7.04042931|0.2510|0.7075|
|single|5.70982546|4.5827|4.5916|

Now running test: _divideComplex, real part
Starting program: (λ (x.re x.im y.re y.im) (/ (+ (* x.re y.re) (* x.im y.im)) (+ (* y.re y.re) (* y.im y.im))))
Precision double result: (λ (x.re x.im y.re y.im) (if (<= y.im 2.0040617074175717e+89) (/ 1 (/ (+ (* y.im y.im) (* y.re y.re)) (+ (* y.im x.im) (* x.re y.re)))) (* x.im (/ 1 (sqrt (+ (* y.im y.im) (* y.re y.re)))))))
Precision single result: (λ (x.re x.im y.re y.im) 0)
|      |start prog|double|single|
|double|25.5796702|25.733|51.920|
|single|29.5661636|29.568|5.8789|

Now running test: _divideComplex, imaginary part
Starting program: (λ (x.re x.im y.re y.im) (/ (- (* x.im y.re) (* x.re y.im)) (+ (* y.re y.re) (* y.im y.im))))
Precision double result: (λ (x.re x.im y.re y.im) (/ (/ (- (* x.im y.re) (* x.re y.im)) (sqrt (+ (* y.re y.re) (* y.im y.im)))) (sqrt (+ (* y.re y.re) (* y.im y.im)))))
Precision single result: (λ (x.re x.im y.re y.im) 0)
|      |start prog|double|single|
|double|25.9726091|25.904|52.309|
|single|29.5415522|29.540|5.9340|

Now running test: math.exp on complex, real part
Starting program: (λ (re im) (* (exp re) (cos im)))
Precision double result: (λ (re im) (* (exp re) (cos im)))
Precision single result: (λ (re im) (if (<= (* (cos im) (exp re)) 1.0196602f0) (* (cos im) (exp re)) (+ (+ re (* (pow re 2) 1/2)) 1)))
|      |start prog|double|single|
|double|0.0065    |0.0065|0.2047|
|single|14.7309017|14.730|13.435|

Now running test: math.exp on complex, imaginary part
Starting program: (λ (re im) (* (exp re) (sin im)))
Precision double result: (λ (re im) (* (exp re) (sin im)))
Precision single result: (λ (re im) (* (* (* (cbrt (sin im)) (cbrt (sin im))) (cbrt (sin im))) (exp re)))
|      |start prog|double|single|
|double|0.014125  |0.0141|0.9448|
|single|14.5814326|14.581|14.610|

Now running test: math.log/1 on complex, real part
Starting program: (λ (re im) (log (sqrt (+ (* re re) (* im im)))))
Precision double result: (λ (re im) (if (<= im -8.313293086540056e+150) (log (- im)) (if (<= im 1.6367087264147873e+79) (log (sqrt (+ (* re re) (* im im)))) (log im))))
Precision single result: (λ (re im) (log (sqrt (+ (* im im) (* re re)))))
|      |start prog|double|single|
|double|30.4135263|16.730|30.413|
|single|27.8088226|27.808|27.808|

Now running test: math.log/1 on complex, imaginary part
Starting program: (λ (re im) (atan2 im re))
Precision double result: (λ (re im) (atan2 im re))
Precision single result: (λ (re im) (log (* (sqrt (exp (atan2 im re))) (sqrt (exp (atan2 im re))))))
|      |start prog|double|single|
|double|0         |0     |11.509|
|single|7.66427502|7.6642|7.9028|

Now running test: math.log/2 on complex, real part
Starting program: (λ (re im base) (/ (+ (* (log (sqrt (+ (* re re) (* im im)))) (log base)) (* (atan2 im re) 0)) (+ (* (log base) (log base)) (* 0 0))))
Precision double result: (λ (re im base) (if (<= im -1.7296419878443411e+52) (/ (log (- im)) (log base)) (if (<= im 1.8668094908977798e+51) (/ (log (sqrt (+ (* im im) (* re re)))) (log base)) (/ (log im) (log base)))))
Precision single result: (λ (re im base) (/ (* (log base) (log (sqrt (+ (* re re) (* im im))))) (* (* (* (cbrt (log base)) (cbrt (log base))) (cbrt (log base))) (log base))))
|      |start prog|double|single|
|double|31.2365466|17.936|31.650|
|single|30.3994789|30.347|30.402|

Now running test: math.log/2 on complex, imaginary part
Starting program: (λ (re im base) (/ (- (* (atan2 im re) (log base)) (* (log (sqrt (+ (* re re) (* im im)))) 0)) (+ (* (log base) (log base)) (* 0 0))))
Precision double result: (λ (re im base) (* (atan2 im re) (/ 1 (log base))))
Precision single result: (λ (re im base) (/ (atan2 im re) (log base)))
|      |start prog|double|single|
|double|30.8360873|0.3792|0.3028|
|single|30.6021912|21.389|21.389|

Now running test: math.log10 on complex, real part
Starting program: (λ (re im) (/ (log (sqrt (+ (* re re) (* im im)))) (log 10)))
Precision double result: (λ (re im) (if (<= re -1.5936912634617188e+115) (* (sqrt (/ 1/2 (sqrt (log 10)))) (* (/ (* -2 (log (/ -1 re))) (sqrt (log 10))) (sqrt (/ 1/2 (sqrt (log 10)))))) (if (<= re 2.2790749711499298e+76) (* (sqrt (/ 1/2 (sqrt (log 10)))) (* (sqrt 1/2) (* (/ (log (+ (* im im) (* re re))) (sqrt (log 10))) (sqrt (/ 1 (sqrt (log 10))))))) (* (/ 1/2 (sqrt (log 10))) (* (sqrt (/ 1 (log 10))) (* 2 (log re)))))))
Precision single result: (λ (re im) (/ (+ (log (pow (sqrt (+ (* im im) (* re re))) 1/3)) (log (* (cbrt (sqrt (+ (* im im) (* re re)))) (cbrt (sqrt (+ (* im im) (* re re))))))) (log 10)))
|      |start prog|double|single|
|double|30.7963294|17.276|30.852|
|single|28.0556132|28.057|28.051|

Now running test: math.log10 on complex, imaginary part
Starting program: (λ (re im) (/ (atan2 im re) (log 10)))
Precision double result: (λ (re im) (* (* (* (/ (atan2 im re) (sqrt (log 10))) (cbrt (sqrt (/ 1 (sqrt (log 10)))))) (* (cbrt (sqrt (/ 1 (sqrt (log 10))))) (cbrt (sqrt (/ 1 (sqrt (log 10))))))) (sqrt (/ 1 (sqrt (log 10))))))
Precision single result: (λ (re im) (* (* (cbrt (/ (/ (atan2 im re) (* (cbrt (log 10)) (cbrt (log 10)))) (cbrt (log 10)))) (cbrt (/ (/ (atan2 im re) (* (cbrt (log 10)) (cbrt (log 10)))) (cbrt (log 10))))) (cbrt (/ (/ (atan2 im re) (* (cbrt (log 10)) (cbrt (log 10)))) (cbrt (log 10))))))
|      |start prog|double|single|
|double|0.85028101|0.1223|1.5504|
|single|8.06587352|8.3658|7.7561|

Now running test: _multiplyComplex, real part
Starting program: (λ (x.re x.im y.re y.im) (- (* x.re y.re) (* x.im y.im)))
Precision double result: (λ (x.re x.im y.re y.im) (- (* x.re y.re) (* x.im y.im)))
Precision single result: (λ (x.re x.im y.re y.im) (- (* y.re x.re) (* (* (cbrt (* x.im y.im)) (cbrt (* x.im y.im))) (cbrt (* x.im y.im)))))
|      |start prog|double|single|
|double|0.01079024|0.0107|0.6589|
|single|21.1820564|21.182|21.186|

Now running test: _multiplyComplex, imaginary part
Starting program: (λ (x.re x.im y.re y.im) (+ (* x.re y.im) (* x.im y.re)))
Precision double result: (λ (x.re x.im y.re y.im) (+ (* x.re y.im) (* x.im y.re)))
Precision single result: (λ (x.re x.im y.re y.im) (+ (* y.im x.re) (* x.im y.re)))
|      |start prog|double|single|
|double|0.009     |0.009 |0.009 |
|single|21.3495888|21.349|21.349|

Now running test: powComplex, real part
Starting program: (λ (x.re x.im y.re y.im) (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (cos (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re)))))
Precision double result: (λ (x.re x.im y.re y.im) (if (<= x.re -1.6590490879174e-310) (exp (- (* y.re (log (- x.re))) (* (atan2 x.im x.re) y.im))) (* (* (cbrt (cbrt (* (* (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im))) (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im)))) (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im)))))) (cbrt (cbrt (* (* (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im))) (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im)))) (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im))))))) (cbrt (cbrt (* (* (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im))) (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im)))) (exp (- (* (log x.re) y.re) (* (atan2 x.im x.re) y.im)))))))))
Precision single result: (λ (x.re x.im y.re y.im) (exp (log (/ (pow (- x.re) y.re) (pow (exp y.im) (atan2 x.im x.re))))))
|      |start prog|double|single|
|double|33.4381972|9.0889|30.719|
|single|29.6661184|21.291|8.6285|

Now running test: powComplex, imaginary part
Starting program: (λ (x.re x.im y.re y.im) (* (exp (- (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (sqrt (+ (* x.re x.re) (* x.im x.im)))) y.im) (* (atan2 x.im x.re) y.re)))))
Precision double result: (λ (x.re x.im y.re y.im) (if (<= x.re 1.84747299379756e-310) (* (exp (- (* (log (sqrt (+ (* x.im x.im) (* x.re x.re)))) y.re) (* (atan2 x.im x.re) y.im))) (sin (+ (* (log (- x.re)) y.im) (* (atan2 x.im x.re) y.re)))) (* (sin (+ (* (atan2 x.im x.re) y.re) (* y.im (log x.re)))) (exp (- (* (log (sqrt (+ (* x.im x.im) (* x.re x.re)))) y.re) (* (atan2 x.im x.re) y.im))))))
Precision single result: (λ (x.re x.im y.re y.im) (* (sin (+ (* (atan2 x.im x.re) y.re) (* (+ (log (sqrt (cbrt (+ (* x.im x.im) (* x.re x.re))))) (log (fabs (cbrt (+ (* x.im x.im) (* x.re x.re)))))) y.im))) (exp (- (* y.re (log (sqrt (+ (* x.im x.im) (* x.re x.re))))) (* y.im (atan2 x.im x.re))))))
|      |start prog|double|single|
|double|32.8627775|22.153|32.860|
|single|30.1268575|30.343|30.125|

Now running test: math.sqrt on complex, real part
Starting program: (λ (re im) (* 0.5 (sqrt (* 2.0 (+ (sqrt (+ (* re re) (* im im))) re)))))
Precision double result: (λ (re im) (if (<= im -1.5290118359570984e+103) (* (sqrt (* 2.0 (- re im))) 0.5) (if (<= im -1.93832165298708e-30) (* (/ (sqrt (* 2.0 (* im im))) (sqrt (- (sqrt (+ (* im im) (* re re))) re))) 0.5) (if (<= im -9.496984040665632e-56) (* (sqrt (* 2.0 (+ re re))) 0.5) (if (<= im -8.309184901465675e-163) (* (/ (sqrt (* 2.0 (* im im))) (sqrt (- (sqrt (+ (* im im) (* re re))) re))) 0.5) (if (<= im 8.784522954035682e-55) (* (sqrt (* 2.0 (+ re re))) 0.5) (if (<= im 3.0170207245203167e+54) (* (/ (sqrt (* 2.0 (* im im))) (sqrt (- (sqrt (+ (* im im) (* re re))) re))) 0.5) (* 0.5 (sqrt (* (+ im re) 2.0))))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|37.5890550|24.301|#f    |
|single|#f        |#f    |#f    |

Now running test: math.sqrt on complex, imaginary part, im greater than 0 branch
Starting program: (λ (re im) (* 0.5 (sqrt (* 2.0 (- (sqrt (+ (* re re) (* im im))) re)))))
Precision double result: (λ (re im) (if (<= im -5.510112881514246e-171) (* (sqrt (* (- (- im) re) 2.0)) 0.5) (if (<= im 2.706806731181656e-156) (* 0.5 (sqrt (* (* -2 re) 2.0))) (if (<= im 8.283607979841196e+83) (* (/ (sqrt (* 2.0 (* im im))) (sqrt (+ re (sqrt (+ (* im im) (* re re)))))) 0.5) (* (sqrt (* (- im re) 2.0)) 0.5)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|36.9822819|23.309|#f    |
|single|#f        |#f    |#f    |

Now running test: math.square on complex, real part
Starting program: (λ (re im) (- (* re re) (* im im)))
Precision double result: (λ (re im) (* (+ im re) (- re im)))
Precision single result: (λ (re im) (- (* (* (* (* (cbrt (cbrt (* re re))) (cbrt (cbrt (* re re)))) (cbrt (cbrt (* re re)))) (* (cbrt re) (cbrt re))) (cbrt (* re re))) (* im im)))
|      |start prog|double|single|
|double|0.00667403|0.001 |0.7916|
|single|0.10944116|0.1095|0.1649|

Now running test: math.square on complex, imaginary part
Starting program: (λ (re im) (+ (* re im) (* im re)))
Precision double result: (λ (re im) (* re (+ im im)))
Precision single result: (λ (re im) (* re (+ im im)))
|      |start prog|double|single|
|double|0.006875  |0.0297|0.0297|
|single|13.6854154|13.692|13.692|

Now running test: math.arg on complex
Starting program: (λ (re im) (atan2 im re))
Precision double result: (λ (re im) (atan2 im re))
Precision single result: (λ (re im) (log (* (sqrt (exp (atan2 im re))) (sqrt (exp (atan2 im re))))))
|      |start prog|double|single|
|double|0         |0     |11.529|
|single|7.53019182|7.5301|7.7555|

Now running test: normal distribution
Starting program: (λ (u1 u2) (+ (* (* (/ 1 6) (pow (* -2 (log u1)) 0.5)) (cos (* (* 2 PI) u2))) 0.5))
Precision double result: (λ (u1 u2) (+ (/ (cos (* u2 (* 2 PI))) (/ 6 (pow (* -2 (log u1)) 0.5))) 0.5))
Precision single result: (λ (u1 u2) (+ (/ (cos (* (* u2 PI) 2)) (/ 6 (pow (* (log u1) -2) 0.5))) 0.5))
|      |start prog|double|single|
|double|0.38002788|0.3526|0.3526|
|single|25.6593013|25.637|25.637|

Now running test: math.cos on complex, real part
Starting program: (λ (re im) (* (* 0.5 (cos re)) (+ (exp (- im)) (exp im))))
Precision double result: (λ (re im) (* (+ (/ (cos re) (exp im)) (* (cos re) (exp im))) 0.5))
Precision single result: (λ (re im) (* (log (log (* (* (cbrt (exp (exp (+ (/ (cos re) (exp im)) (* (exp im) (cos re)))))) (cbrt (exp (exp (+ (/ (cos re) (exp im)) (* (exp im) (cos re))))))) (cbrt (exp (exp (+ (/ (cos re) (exp im)) (* (exp im) (cos re))))))))) 0.5))
|      |start prog|double|single|
|double|0.01202124|0.0086|1.3470|
|single|14.8962017|14.895|14.973|

Now running test: math.cos on complex, imaginary part
Starting program: (λ (re im) (* (* 0.5 (sin re)) (- (exp (- im)) (exp im))))
Precision double result: (λ (re im) (* (* re im) -1.0))
Precision single result: (λ (re im) (* (* -2 (* im re)) 0.5))
|      |start prog|double|single|
|double|43.2657731|31.308|31.308|
|single|13.8455106|13.798|13.798|

Now running test: math.sin on complex, real part
Starting program: (λ (re im) (* (* 0.5 (sin re)) (+ (exp (- 0 im)) (exp im))))
Precision double result: (λ (re im) (* (sin re) (+ (* (sqrt (/ 0.5 (exp im))) (sqrt (/ 0.5 (exp im)))) (* 0.5 (exp im)))))
Precision single result: (λ (re im) (* (sqrt (+ (exp im) (exp (- im)))) (* (* (cbrt (* (sqrt (+ (exp im) (exp (- im)))) (* 0.5 (sin re)))) (cbrt (* (sqrt (+ (exp im) (exp (- im)))) (* 0.5 (sin re))))) (* (cbrt (cbrt (* (sqrt (+ (exp im) (exp (- im)))) (* 0.5 (sin re))))) (* (cbrt (cbrt (* (sqrt (+ (exp im) (exp (- im)))) (* 0.5 (sin re))))) (cbrt (cbrt (* (sqrt (+ (exp im) (exp (- im)))) (* 0.5 (sin re))))))))))
|      |start prog|double|single|
|double|0.04017967|0.0434|1.7747|
|single|15.1373875|15.137|15.201|

Now running test: math.sin on complex, imaginary part
Starting program: (λ (re im) (* (* 0.5 (cos re)) (- (exp (- 0 im)) (exp im))))
Precision double result: (λ (re im) (if (<= im 0.014624637389841275) (+ (* (* -1/60 (pow im 5)) (* (cos re) 0.5)) (* (* (* im 0.5) (cos re)) (- (* (* im im) -1/3) 2))) (* (* (cos re) 0.5) (/ (- (* (exp (- im)) (exp (- im))) (* (exp im) (exp im))) (+ (exp (- im)) (exp im))))))
Precision single result: (λ (re im) (* (* 0.5 (cos re)) (+ (* -1/60 (pow im 5)) (+ (* -2 im) (* -1/3 (pow im 3))))))
|      |start prog|double|single|
|double|58.1424850|0.4179|0.6473|
|single|15.2792695|13.682|13.711|

Now running test: Octave 3.8, jcobi/1
Starting program: (λ (alpha beta) (/ (+ (/ (- beta alpha) (+ (+ alpha beta) 2.0)) 1.0) 2.0))
Precision double result: (λ (alpha beta) (if (<= alpha 11276870.77300351) (/ (- (/ (/ 1 (+ 2.0 (+ beta alpha))) (/ 1 beta)) (- (/ alpha (+ 2.0 (+ beta alpha))) 1.0)) 2.0) (/ (- (/ 1 (/ (+ 2.0 (+ beta alpha)) beta)) (/ (- (- (/ 4.0 alpha) 2.0) (/ (/ 8.0 alpha) alpha)) alpha)) 2.0)))
Precision single result: (λ (alpha beta) (if (<= (/ (- beta alpha) (+ (+ alpha beta) 2.0)) 0.9890852f0) (/ (+ (* (/ (* (cbrt (- beta alpha)) (cbrt (- beta alpha))) (fabs (cbrt (+ (+ 2.0 beta) alpha)))) (/ (/ (cbrt (- beta alpha)) (sqrt (+ (+ alpha beta) 2.0))) (sqrt (cbrt (+ (+ alpha beta) 2.0))))) 1.0) 2.0) (+ (/ 2.0 (* beta beta)) (- 1.0 (/ 1.0 beta)))))
|      |start prog|double|single|
|double|15.6523834|6.1437|15.992|
|single|15.6256908|8.8640|8.2603|

Now running test: Octave 3.8, jcobi/2
Starting program: (λ (alpha beta i) (/ (+ (/ (/ (* (+ alpha beta) (- beta alpha)) (+ (+ alpha beta) (* 2 i))) (+ (+ (+ alpha beta) (* 2 i)) 2.0)) 1.0) 2.0))
Precision double result: (λ (alpha beta i) (if (<= alpha 3.86008751196516e+141) (/ (/ (log (exp (+ (pow 1.0 3) (pow (/ (+ alpha beta) (* (/ (+ (* i 2) (+ alpha beta)) (- beta alpha)) (+ 2.0 (+ (* i 2) (+ alpha beta))))) 3)))) (+ (- (* 1.0 1.0) (* (/ (+ alpha beta) (* (/ (+ (* i 2) (+ alpha beta)) (- beta alpha)) (+ 2.0 (+ (* i 2) (+ alpha beta))))) 1.0)) (* (/ (+ alpha beta) (* (/ (+ (* i 2) (+ alpha beta)) (- beta alpha)) (+ 2.0 (+ (* i 2) (+ alpha beta))))) (/ (+ alpha beta) (* (/ (+ (* i 2) (+ alpha beta)) (- beta alpha)) (+ 2.0 (+ (* i 2) (+ alpha beta)))))))) 2.0) (if (<= alpha 1.0137583231023045e+200) (/ (+ (/ 2.0 alpha) (/ (- (/ 8.0 alpha) 4.0) (* alpha alpha))) 2.0) (/ (+ 1.0 (* (/ (/ (cbrt (+ alpha beta)) (/ (sqrt (+ (* i 2) (+ alpha beta))) (- beta alpha))) (cbrt (+ 2.0 (+ (* i 2) (+ alpha beta))))) (/ (/ (cbrt (+ alpha beta)) (cbrt (+ alpha (+ (* i 2) (+ beta 2.0))))) (* (/ (sqrt (+ (* i 2) (+ alpha beta))) (cbrt (+ alpha beta))) (cbrt (+ alpha (+ (* i 2) (+ beta 2.0)))))))) 2.0))))
Precision single timed out or failed
|      |start prog|double|single|
|double|23.5388619|12.539|#f    |
|single|#f        |#f    |#f    |

Now running test: Octave 3.8, jcobi/3
Starting program: (λ (alpha beta) (/ (/ (/ (+ (+ (+ alpha beta) (* beta alpha)) 1.0) (+ (+ alpha beta) (* 2 1))) (+ (+ alpha beta) (* 2 1))) (+ (+ (+ alpha beta) (* 2 1)) 1.0)))
Precision double result: (λ (alpha beta) (if (<= beta 3.086432744596301e+161) (* (/ (/ (cbrt (+ alpha (+ (* alpha beta) (+ 1.0 beta)))) (sqrt (+ (+ 2 beta) alpha))) (/ (* (cbrt (+ (+ 2 alpha) (+ 1.0 beta))) (cbrt (+ (+ 2 alpha) (+ 1.0 beta)))) (cbrt (+ alpha (+ (* alpha beta) (+ 1.0 beta)))))) (/ (/ (cbrt (+ beta (+ (+ alpha 1.0) (* alpha beta)))) (cbrt (+ (+ 2 alpha) (+ 1.0 beta)))) (* (sqrt (+ (+ 2 alpha) beta)) (+ (+ 2 alpha) beta)))) (/ (+ (* (+ beta alpha) 0.2222222222222222) 0.3333333333333333) (* (+ (+ 2 beta) alpha) (+ (+ 2 beta) alpha)))))
Precision single result: (λ (alpha beta) (if (<= (/ (/ (/ (+ (+ (* beta alpha) (+ beta alpha)) 1.0) (+ (+ beta alpha) 2)) (+ (+ beta alpha) 2)) (+ 1.0 (+ (+ beta alpha) 2))) 0.083333336f0) (/ (/ (/ (+ (+ (* beta alpha) (+ beta alpha)) 1.0) (+ (+ beta alpha) 2)) (+ (+ beta alpha) 2)) (+ 1.0 (+ (+ beta alpha) 2))) (/ 0 (+ 1.0 (+ (+ beta alpha) 2)))))
|      |start prog|double|single|
|double|3.36994041|2.4072|1.8580|
|single|15.5452248|15.980|0.3548|

Now running test: Octave 3.8, jcobi/4
Starting program: (λ (alpha beta i) (/ (/ (* (* i (+ (+ alpha beta) i)) (+ (* beta alpha) (* i (+ (+ alpha beta) i)))) (* (+ (+ alpha beta) (* 2 i)) (+ (+ alpha beta) (* 2 i)))) (- (* (+ (+ alpha beta) (* 2 i)) (+ (+ alpha beta) (* 2 i))) 1.0)))
Precision double result: (λ (alpha beta i) (if (<= beta 2.308523596403838e+100) (* (sqrt (/ (* (/ (* (/ (* (+ alpha i) (+ beta i)) (+ (* 2 i) (+ beta alpha))) i) (+ (* 2 i) (+ beta alpha))) (+ (+ beta i) alpha)) (- (* (+ (* 2 i) (+ beta alpha)) (+ (* 2 i) (+ beta alpha))) 1.0))) (sqrt (/ (* (/ (* (/ (* (+ alpha i) (+ beta i)) (+ (* 2 i) (+ beta alpha))) i) (+ (* 2 i) (+ beta alpha))) (+ (+ beta i) alpha)) (- (* (+ (* 2 i) (+ beta alpha)) (+ (* 2 i) (+ beta alpha))) 1.0)))) (* (* i 1/4) (/ (+ beta (+ alpha i)) (- (* (+ (* 2 i) (+ beta alpha)) (+ (* 2 i) (+ beta alpha))) 1.0)))))
Precision single result: (λ (alpha beta i) 0)
|      |start prog|double|single|
|double|52.4935580|38.554|57.325|
|single|29.8137529|29.325|22.106|

Now running test: Octave 3.8, jcobi/4, as called
Starting program: (λ (i) (/ (/ (* (* i i) (* i i)) (* (* 2 i) (* 2 i))) (- (* (* 2 i) (* 2 i)) 1.0)))
Precision double result: (λ (i) (/ i (- (* 16 i) (/ 4.0 i))))
Precision single timed out or failed
|      |start prog|double|single|
|double|45.4648673|0.2183|#f    |
|single|#f        |#f    |#f    |

Now running test: Octave 3.8, oct_fill_randg
Starting program: (λ (a rand) (* (- a (/ 1.0 3.0)) (+ 1 (* (/ 1 (sqrt (* 9 (- a (/ 1.0 3.0))))) rand))))
Precision double result: (λ (a rand) (+ (- a (/ 1.0 3.0)) (* (/ rand (sqrt (* 9 (- a (/ 1.0 3.0))))) (- a (/ 1.0 3.0)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.15021249|0.1238|#f    |
|single|#f        |#f    |#f    |

Now running test: Exp of sum of logs
Starting program: (λ (a b) (exp (+ (log a) (log b))))
Precision double result: (λ (a b) (* b a))
Precision single result: (λ (a b) (* b a))
|      |start prog|double|single|
|double|5.68964187|0     |0     |
|single|13.8979994|13.831|13.831|

Now running test: Quotient of sum of exps
Starting program: (λ (a b) (/ (exp a) (+ (exp a) (exp b))))
Precision double result: (λ (a b) (exp (- a (log (+ (exp a) (exp b))))))
Precision single result: (λ (a b) (/ (exp a) (+ (exp b) (exp a))))
|      |start prog|double|single|
|double|0.76884748|0.5633|0.7688|
|single|0.35795975|0.3010|0.3579|

Now running test: Quotient of products
Starting program: (λ (a1 a2 b1 b2) (/ (* a1 a2) (* b1 b2)))
Precision double result: (λ (a1 a2 b1 b2) (if (<= (* b2 b1) -2.4036642107148512e+120) (* (/ a1 b1) (/ a2 b2)) (if (<= (* b2 b1) -2.1726695734285285e-212) (/ (* a2 a1) (* b2 b1)) (if (<= (* b2 b1) 2.392824342095314e-254) (/ (* (/ a1 b1) a2) b2) (if (<= (* b2 b1) 1.2776605748110681e+221) (/ (* a2 a1) (* b2 b1)) (/ (/ a1 (/ b1 a2)) b2))))))
Precision single result: (λ (a1 a2 b1 b2) (* (/ a2 b2) (/ a1 b1)))
|      |start prog|double|single|
|double|10.3053233|4.9458|11.076|
|single|25.2986531|25.306|25.297|

Now running test: a parameter of renormalized beta distribution
Starting program: (λ (m v) (* (- (/ (* m (- 1 m)) v) 1) m))
Precision double result: (λ (m v) (+ (- (* (* m (/ m v)) (- m)) m) (/ m (/ v m))))
Precision single result: (λ (m v) (- (* (- m (* m m)) (/ m v)) m))
|      |start prog|double|single|
|double|0.17980479|0.1784|0.1731|
|single|25.2265765|25.230|25.228|

Now running test: b parameter of renormalized beta distribution
Starting program: (λ (m v) (* (- (/ (* m (- 1 m)) v) 1) (- 1 m)))
Precision double result: (λ (m v) (* (- 1 m) (- (* (- 1 m) (/ m v)) 1)))
Precision single result: (λ (m v) (* (- 1 m) (- (/ (/ (* m (- 1 (* m m))) (+ 1 m)) v) 1)))
|      |start prog|double|single|
|double|0.07566992|0.0817|0.0880|
|single|23.7187615|23.718|23.719|

Now running test: Harley's example
Starting program: (λ (c_p c_n t s) (/ (* (pow (/ 1 (+ 1 (exp (- s)))) c_p) (pow (- 1 (/ 1 (+ 1 (exp (- s))))) c_n)) (* (pow (/ 1 (+ 1 (exp (- t)))) c_p) (pow (- 1 (/ 1 (+ 1 (exp (- t))))) c_n))))
Precision double result: (λ (c_p c_n t s) (if (<= t -710.3445457722588) (* (* (cbrt (/ (pow (- 1 (/ 1 (+ (exp (- s)) 1))) c_n) (* (/ (* (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2))))) (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2)))))) (* (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p)) (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p)))) (* (/ (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2))))) (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p))) (pow (- 1 (/ 1 (+ 1 (exp (- t))))) c_n))))) (cbrt (/ (pow (- 1 (/ 1 (+ (exp (- s)) 1))) c_n) (* (/ (* (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2))))) (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2)))))) (* (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p)) (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p)))) (* (/ (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2))))) (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p))) (pow (- 1 (/ 1 (+ 1 (exp (- t))))) c_n)))))) (cbrt (/ (pow (- 1 (/ 1 (+ (exp (- s)) 1))) c_n) (* (/ (* (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2))))) (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2)))))) (* (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p)) (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p)))) (* (/ (cbrt (+ 1 (* c_p (+ (* 1/2 t) (log 1/2))))) (cbrt (pow (/ 1 (+ (exp (- s)) 1)) c_p))) (pow (- 1 (/ 1 (+ 1 (exp (- t))))) c_n)))))) (exp (- (* (- (log (+ 1 (exp (- t)))) (log (+ (exp (- s)) 1))) c_p) (* c_n (- (log (- 1 (/ 1 (+ 1 (exp (- t)))))) (log (- 1 (/ 1 (+ (exp (- s)) 1))))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|3.97552894|0.4771|#f    |
|single|#f        |#f    |#f    |

Now running test: Hyperbolic sine
Starting program: (λ (x) (/ (- (exp x) (exp (- x))) 2))
Precision double result: (λ (x) (/ (+ (* 2 x) (+ (* (pow x 3) 1/3) (* 1/60 (pow x 5)))) 2))
Precision single result: (λ (x) (sinh x))
|      |start prog|double|single|
|double|58.1915111|0.6225|0.0058|
|single|3.33679119|0.1644|0.0167|

Now running test: Hyperbolic tangent
Starting program: (λ (x) (/ (- (exp x) (exp (- x))) (+ (exp x) (exp (- x)))))
Precision double result: (λ (x) (tanh x))
Precision single result: (λ (x) (tanh x))
|      |start prog|double|single|
|double|58.2526719|0.0145|0.0145|
|single|3.87414041|0.0075|0.0075|

Now running test: Hyperbolic secant
Starting program: (λ (x) (/ 2 (+ (exp x) (exp (- x)))))
Precision double result: (λ (x) (/ 2 (+ (exp (- x)) (exp x))))
Precision single result: (λ (x) (/ 2 (cbrt (* (* (+ (exp (- x)) (exp x)) (+ (exp (- x)) (exp x))) (+ (exp (- x)) (exp x))))))
|      |start prog|double|single|
|double|0.01002124|0.0100|0.0593|
|single|0.00773236|0.0077|0.0210|

Now running test: Hyperbolic arcsine
Starting program: (λ (x) (log (+ x (sqrt (+ (* x x) 1)))))
Precision double result: (λ (x) (if (<= x -1.0687552329934389) (log (+ (/ -1/16 (pow x 5)) (+ (/ -1/2 x) (/ (/ 1/8 x) (* x x))))) (if (<= x 0.9657940581551641) (- (+ x (* 3/40 (pow x 5))) (* 1/6 (pow x 3))) (log (+ (+ (- x (/ -1/2 x)) (/ (/ -1/8 x) (* x x))) x)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|52.6660740|0.1870|#f    |
|single|#f        |#f    |#f    |

Now running test: Hyperbolic arc-cosine
Starting program: (λ (x) (log (+ x (sqrt (- (* x x) 1)))))
Precision double result: (λ (x) (log (+ (* (sqrt (+ 1 x)) (sqrt (- x 1))) x)))
Precision single result: (λ (x) (log (+ (* (sqrt (+ 1 x)) (sqrt (- x 1))) x)))
|      |start prog|double|single|
|double|31.3900691|0.0411|0.0411|
|single|28.1463878|26.197|26.197|

Now running test: Hyperbolic arc-(co)tangent
Starting program: (λ (x) (* (/ 1 2) (log (/ (+ 1 x) (- 1 x)))))
Precision double result: (λ (x) (/ (+ (* 2 x) (+ (* (pow x 3) 2/3) (* 2/5 (pow x 5)))) 2))
Precision single result: (λ (x) (+ (+ (* 1/5 (pow x 5)) x) (* (pow x 3) 1/3)))
|      |start prog|double|single|
|double|58.5020483|0.2361|0.2377|
|single|3.26485525|0.0492|0.0492|

Now running test: Hyperbolic arc-(co)secant
Starting program: (λ (x) (log (+ (/ 1 x) (/ (sqrt (- 1 (* x x))) x))))
Precision double result: (λ (x) (log (+ (/ 1 x) (/ (sqrt (- 1 (* x x))) x))))
Precision single result: (λ (x) (+ (log (+ (sqrt (- 1 (* x x))) 1)) (- (log x))))
|      |start prog|double|single|
|double|0.04974003|0.0497|0.1951|
|single|26.2837634|26.283|25.736|

Now running test: Distance on a great circle
Starting program: (λ (R lambda1 lambda2 phi1 phi2) (* R (* 2 (atan2 (sqrt (+ (pow (sin (/ (- phi1 phi2) 2)) 2) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2))) (sin (/ (- lambda1 lambda2) 2))))) (sqrt (- 1 (+ (pow (sin (/ (- phi1 phi2) 2)) 2) (* (* (* (cos phi1) (cos phi2)) (sin (/ (- lambda1 lambda2) 2))) (sin (/ (- lambda1 lambda2) 2))))))))))
Precision double result: (λ (R lambda1 lambda2 phi1 phi2) (* (atan2 (sqrt (+ (* (sin (/ (- phi1 phi2) 2)) (sin (/ (- phi1 phi2) 2))) (* (* (sin (/ (- lambda1 lambda2) 2)) (sin (/ (- lambda1 lambda2) 2))) (* (cos phi2) (cos phi1))))) (sqrt (- (* (log (exp (cos (/ (- phi1 phi2) 2)))) (log (exp (cos (/ (- phi1 phi2) 2))))) (* (* (sin (/ (- lambda1 lambda2) 2)) (sin (/ (- lambda1 lambda2) 2))) (* (cos phi2) (cos phi1)))))) (* R 2)))
Precision single result: (λ (R lambda1 lambda2 phi1 phi2) (* (* R 2) (atan2 (sqrt (+ (* (* (sin (/ (- lambda1 lambda2) 2)) (* (cbrt (sin (/ (- lambda1 lambda2) 2))) (* (cbrt (sin (/ (- lambda1 lambda2) 2))) (cbrt (sin (/ (- lambda1 lambda2) 2)))))) (* (cos phi2) (cos phi1))) (* (sin (/ (- phi1 phi2) 2)) (sin (/ (- phi1 phi2) 2))))) (sqrt (- (* (cos (/ (- phi1 phi2) 2)) (cos (/ (- phi1 phi2) 2))) (* (* (cos phi2) (cos phi1)) (* (sin (/ (- lambda1 lambda2) 2)) (sin (/ (- lambda1 lambda2) 2)))))))))
|      |start prog|double|single|
|double|24.3031080|24.281|24.337|
|single|28.2584598|28.258|28.258|

Now running test: Spherical law of cosines
Starting program: (λ (R lambda1 lambda2 phi1 phi2) (* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R))
Precision double result: (λ (R lambda1 lambda2 phi1 phi2) (* (acos (+ (* (+ (* (cos lambda1) (cos lambda2)) (* (sin lambda2) (sin lambda1))) (* (cos phi1) (cos phi2))) (* (log (exp (sin phi2))) (sin phi1)))) R))
Precision single result: (λ (R lambda1 lambda2 phi1 phi2) (* (acos (+ (* (sin phi1) (sin phi2)) (* (* (cos phi1) (cos phi2)) (cos (- lambda1 lambda2))))) R))
|      |start prog|double|single|
|double|16.8887371|3.6216|16.888|
|single|28.2733858|28.273|28.273|

Now running test: Equirectangular approximation to distance on a great circle
Starting program: (λ (R lambda1 lambda2 phi1 phi2) (* R (sqrt (+ (* (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2))) (* (- lambda1 lambda2) (cos (/ (+ phi1 phi2) 2)))) (* (- phi1 phi2) (- phi1 phi2))))))
Precision double result: (λ (R lambda1 lambda2 phi1 phi2) (if (<= phi1 -8.09977475932676e+48) (* R (- phi2 phi1)) (* R (sqrt (+ (* (* (cos (/ (+ phi2 phi1) 2)) (- lambda1 lambda2)) (* (* (* (cbrt (cos (/ (+ phi2 phi1) 2))) (cbrt (cos (/ (+ phi2 phi1) 2)))) (cbrt (cos (/ (+ phi2 phi1) 2)))) (- lambda1 lambda2))) (* (- phi1 phi2) (- phi1 phi2)))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|37.5207806|32.385|#f    |
|single|#f        |#f    |#f    |

Now running test: Bearing on a great circle
Starting program: (λ (lambda1 lambda2 phi1 phi2) (atan2 (* (sin (- lambda1 lambda2)) (cos phi2)) (- (* (cos phi1) (sin phi2)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2))))))
Precision double result: (λ (lambda1 lambda2 phi1 phi2) (atan2 (* (cos phi2) (- (* (cos lambda2) (sin lambda1)) (* (sin lambda2) (cos lambda1)))) (- (cbrt (pow (* (sin phi2) (cos phi1)) 3)) (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (* (sin phi1) (cos phi2))))))
Precision single result: (λ (lambda1 lambda2 phi1 phi2) (atan2 (* (cos phi2) (- lambda1 (+ (* (pow lambda1 3) 1/6) lambda2))) (- (* (sin phi2) (cos phi1)) (* (* (sin phi1) (cos phi2)) (cos (- lambda1 lambda2))))))
|      |start prog|double|single|
|double|13.0045715|0.4280|38.543|
|single|29.1288756|29.135|29.181|

Now running test: Midpoint on a great circle
Starting program: (λ (lambda1 lambda2 phi1 phi2) (+ lambda1 (atan2 (* (cos phi2) (sin (- lambda1 lambda2))) (+ (cos phi1) (* (cos phi2) (cos (- lambda1 lambda2)))))))
Precision double result: (λ (lambda1 lambda2 phi1 phi2) (+ (atan2 (* (- (* (sin lambda1) (cos lambda2)) (* (sin lambda2) (cos lambda1))) (cos phi2)) (/ (* (+ (cos phi1) (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2))) (+ (- (* (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2)) (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2))) (* (cos phi1) (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2)))) (* (cos phi1) (cos phi1)))) (+ (- (* (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2)) (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2))) (* (cos phi1) (* (+ (* (sin lambda2) (sin lambda1)) (* (cos lambda2) (cos lambda1))) (cos phi2)))) (* (cos phi1) (cos phi1))))) lambda1))
Precision single result: (λ (lambda1 lambda2 phi1 phi2) (+ (atan2 (* (- lambda1 (+ (* 1/6 (pow lambda1 3)) lambda2)) (cos phi2)) (+ (* (cos phi2) (- (+ 1 (* lambda2 lambda1)) (* 1/2 (pow lambda1 2)))) (cos phi1))) lambda1))
|      |start prog|double|single|
|double|0.91569598|0.2452|18.382|
|single|26.0567602|26.056|25.936|

Now running test: Destination given bearing on a great circle
Starting program: (λ (lambda1 phi1 phi2 delta theta) (+ lambda1 (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin phi1) (sin (asin (+ (* (sin phi1) (cos delta)) (* (* (cos phi1) (sin delta)) (cos theta))))))))))
Precision double result: (λ (lambda1 phi1 phi2 delta theta) (+ (atan2 (* (* (* (cbrt (cos phi1)) (cbrt (cos phi1))) (* (sin theta) (sin delta))) (cbrt (cos phi1))) (- (cos delta) (* (sin (asin (+ (* (sin phi1) (cos delta)) (* (cos theta) (* (cos phi1) (sin delta)))))) (sin phi1)))) lambda1))
Precision single result: (λ (lambda1 phi1 phi2 delta theta) (+ (atan2 (* (* (sin theta) (sin delta)) (cos phi1)) (- (cos delta) (* (sin (asin (+ (* (sin phi1) (cos delta)) (* (cos theta) (* (cos phi1) (sin delta)))))) (sin phi1)))) lambda1))
|      |start prog|double|single|
|double|0.15729258|0.2002|0.1572|
|single|25.6677241|25.667|25.667|

Now running test: Logistic regression 2
Starting program: (λ (x y) (- (log (+ 1 (exp x))) (* x y)))
Precision double result: (λ (x y) (- (log (+ 1 (exp x))) (* y x)))
Precision single result: (λ (x y) (- (* (cbrt (log (+ 1 (* (cbrt (exp x)) (* (cbrt (exp x)) (cbrt (exp x))))))) (* (cbrt (log (+ 1 (* (cbrt (exp x)) (* (cbrt (exp x)) (cbrt (exp x))))))) (cbrt (log (+ 1 (* (cbrt (exp x)) (* (cbrt (exp x)) (cbrt (exp x))))))))) (* y x)))
|      |start prog|double|single|
|double|0.58832061|0.5883|1.6605|
|single|11.6324430|11.632|12.202|

Now running test: Logistic function from Lakshay Garg
Starting program: (λ (x y) (- (/ 2 (+ 1 (exp (* -2 x)))) 1))
Precision double result: (λ (x y) (if (or (<= x -0.008259859848011659) (not (<= x 0.007114952251395868))) (/ (- (pow (/ 2 (+ (exp (* -2 x)) 1)) 3) 1) (+ (+ 1 (/ 2 (* (sqrt (+ (exp (* -2 x)) 1)) (sqrt (+ (exp (* -2 x)) 1))))) (* (/ 2 (+ (exp (* -2 x)) 1)) (/ 2 (+ (exp (* -2 x)) 1))))) (- (+ x (* 2/15 (pow x 5))) (* 1/3 (pow x 3)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.1396533|0.0131|#f    |
|single|#f        |#f    |#f    |

Now running test: Quadratic roots, full range
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)))
Precision double result: (λ (a b c) (if (<= b -4.066139229293561e+42) (- (/ c b) (/ b a)) (if (<= b 3.501145873927553e-53) (/ 1 (/ (* 2 a) (+ (- b) (sqrt (- (* b b) (* c (* 4 a))))))) (/ (- c) b))))
Precision single result: (λ (a b c) (- (/ c b)))
|      |start prog|double|single|
|double|33.0388736|10.452|39.921|
|single|29.5074809|19.114|18.351|

Now running test: Quadratic roots, narrow range
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)))
Precision double result: (λ (a b c) (* (/ (* c -4) (+ (sqrt (- (* b b) (* a (* 4 c)))) b)) (/ a (* 2 a))))
Precision single result: (λ (a b c) (* (/ (* c -4) (+ b (sqrt (* (/ (* (cbrt (- (* (* b b) (* b b)) (* (* a (* 4 c)) (* a (* 4 c))))) (cbrt (- (* b b) (* a (* 4 c))))) (cbrt (+ (* b b) (* a (* 4 c))))) (cbrt (- (* b b) (* a (* 4 c)))))))) (/ a (* 2 a))))
|      |start prog|double|single|
|double|28.2267204|0.2789|0.4460|
|single|21.0906952|0.3620|0.3875|

Now running test: Quadratic roots, medium range
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)))
Precision double result: (λ (a b c) (* (/ (* c -4) (+ (sqrt (- (* b b) (* a (* 4 c)))) b)) (/ a (* 2 a))))
Precision single result: (λ (a b c) (* (/ (* c -4) (+ (sqrt (- (* (cbrt (* b b)) (* (* (cbrt b) (cbrt (* b b))) (cbrt b))) (* (* c 4) a))) b)) (/ a (* 2 a))))
|      |start prog|double|single|
|double|43.6103461|0.1578|0.4831|
|single|25.1630424|0.3551|0.4106|

Now running test: Quadratic roots, wide range
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)))
Precision double result: (λ (a b c) (* (/ (* c -4) (+ b (sqrt (/ (- (* (* b b) (* b b)) (* (* a (* 4 c)) (* a (* 4 c)))) (+ (* b b) (* a (* 4 c))))))) (/ a (* 2 a))))
Precision single result: (λ (a b c) (- (/ c b)))
|      |start prog|double|single|
|double|52.6582427|0.1025|6.0591|
|single|27.1903362|19.881|1.4235|

Now running test: Cubic critical
Starting program: (λ (a b c d) (/ (+ (- b) (sqrt (- (* b b) (* (* 3 a) c)))) (* 3 a)))
Precision double result: (λ (a b c d) (if (<= b -1.1960359124148332e+154) (/ (- (* 3/2 (/ (* a c) b)) (* 2 b)) (* 3 a)) (if (<= b 2.5136683171257895e-89) (/ (* 1/3 (- (sqrt (+ (* (* c -3) a) (* b b))) b)) a) (* (/ c b) -1/2))))
Precision single timed out or failed
|      |start prog|double|single|
|double|33.8252775|10.533|#f    |
|single|#f        |#f    |#f    |

Now running test: Cubic critical, narrow range
Starting program: (λ (a b c d) (/ (+ (- b) (sqrt (- (* b b) (* (* 3 a) c)))) (* 3 a)))
Precision double result: (λ (a b c d) (* (/ 1 (* (* a 3) (+ (sqrt (- (* b b) (* (* c a) 3))) b))) (* (* -3 a) c)))
Precision single result: (λ (a b c d) (/ (- c) (+ b (sqrt (- (* b b) (* (sqrt (* 3 (* c a))) (sqrt (* 3 (* c a)))))))))
|      |start prog|double|single|
|double|28.6747927|0.5000|0.2748|
|single|21.2452725|0.4305|0.3587|

Now running test: Cubic critical, medium range
Starting program: (λ (a b c d) (/ (+ (- b) (sqrt (- (* b b) (* (* 3 a) c)))) (* 3 a)))
Precision double result: (λ (a b c d) (/ (- c) (+ b (sqrt (- (* b b) (* 3 (* a c)))))))
Precision single result: (λ (a b c d) (/ (* (* -3 a) c) (* (+ (sqrt (- (* b b) (* (* c a) 3))) b) (* 3 a))))
|      |start prog|double|single|
|double|43.7520998|0.1635|0.4141|
|single|25.0425124|0.3380|0.4210|

Now running test: Cubic critical, wide range
Starting program: (λ (a b c d) (/ (+ (- b) (sqrt (- (* b b) (* (* 3 a) c)))) (* 3 a)))
Precision double result: (λ (a b c d) (/ (- c) (+ b (sqrt (- (* b b) (* 3 (* c a)))))))
Precision single result: (λ (a b c d) (* (* c -1/2) (/ 1 b)))
|      |start prog|double|single|
|double|52.4272168|0.0865|6.4538|
|single|27.3517313|8.2963|1.3769|

Now running test: Asymptote A
Starting program: (λ (x) (- (/ 1 (+ x 1)) (/ 1 (- x 1))))
Precision double result: (λ (x) (* -2 (/ 1 (+ (* x x) -1))))
Precision single result: (λ (x) (* (/ (/ 1 (* (cbrt (+ (* x x) -1)) (cbrt (+ (* x x) -1)))) (cbrt (+ (* x x) -1))) -2))
|      |start prog|double|single|
|double|14.3714204|0.4007|0.6570|
|single|0.74308164|0.0899|0.0997|

Now running test: Asymptote B
Starting program: (λ (x) (+ (/ 1 (- x 1)) (/ x (+ x 1))))
Precision double result: (λ (x) (log (exp (+ (/ x (+ x 1)) (/ 1 (- x 1))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.010625  |0.0096|#f    |
|single|#f        |#f    |#f    |

Now running test: Asymptote C
Starting program: (λ (x) (- (/ x (+ x 1)) (/ (+ x 1) (- x 1))))
Precision double result: (λ (x) (if (or (<= x -10488.296509147423) (not (<= x 18604.979167712183))) (- (+ (/ -3 x) (/ (/ -3 x) (* x x))) (/ 1 (* x x))) (/ (* (cbrt (/ (- (pow (pow (/ x (+ 1 x)) 3) 3) (pow (pow (/ (+ 1 x) (- x 1)) 3) 3)) (+ (+ (* (pow (/ (+ 1 x) (- x 1)) 3) (pow (/ (+ 1 x) (- x 1)) 3)) (* (pow (/ x (+ 1 x)) 3) (pow (/ (+ 1 x) (- x 1)) 3))) (* (pow (/ x (+ 1 x)) 3) (pow (/ x (+ 1 x)) 3))))) (cbrt (* (- (/ x (+ 1 x)) (/ (+ 1 x) (- x 1))) (- (/ x (+ 1 x)) (/ (+ 1 x) (- x 1)))))) (cbrt (+ (* (/ x (+ 1 x)) (/ x (+ 1 x))) (+ (* (/ (+ 1 x) (- x 1)) (/ (+ 1 x) (- x 1))) (* (/ x (+ 1 x)) (/ (+ 1 x) (- x 1)))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|29.0113318|0.0726|#f    |
|single|#f        |#f    |#f    |

Now running test: Eccentricity of an ellipse
Starting program: (λ (a b) (sqrt (fabs (/ (- (* a a) (* b b)) (* a a)))))
Precision double result: (λ (a b) (sqrt (fabs (- 1 (log (exp (* (/ b a) (/ b a))))))))
Precision single result: (λ (a b) (sqrt (fabs (- 1 (* (/ b a) (/ b a))))))
|      |start prog|double|single|
|double|14.0998139|0.0071|0.0098|
|single|25.8227487|21.968|21.968|

Now running test: Trigonometry A
Starting program: (λ (e v) (/ (* e (sin v)) (+ 1 (* e (cos v)))))
Precision double result: (λ (e v) (* (- 1 (* e (cos v))) (/ (* e (sin v)) (- 1 (* (* e (cos v)) (* e (cos v)))))))
Precision single result: (λ (e v) (/ (* e (sin v)) (+ (* (* (cbrt (* (cos v) e)) (cbrt (* (cos v) e))) (cbrt (* (cos v) e))) 1)))
|      |start prog|double|single|
|double|0.13946936|0.1387|0.1401|
|single|14.1106375|14.110|14.110|

Now running test: Trigonometry B
Starting program: (λ (x) (/ (- 1 (* (tan x) (tan x))) (+ 1 (* (tan x) (tan x)))))
Precision double result: (λ (x) (log (exp (/ (- 1 (* (tan x) (tan x))) (+ 1 (* (tan x) (tan x)))))))
Precision single result: (λ (x) (/ (- 1 (* (/ (sin x) (* (* (cbrt (cos x)) (cbrt (cos x))) (cbrt (cos x)))) (/ (sin x) (cos x)))) (+ (* (tan x) (tan x)) 1)))
|      |start prog|double|single|
|double|0.33215689|0.4340|0.7868|
|single|15.0208299|15.022|15.020|

Now running test: 2-ancestry mixing, positive discriminant
Starting program: (λ (g h a) (+ (cbrt (* (/ 1 (* 2 a)) (+ (- g) (sqrt (- (* g g) (* h h)))))) (cbrt (* (/ 1 (* 2 a)) (- (- g) (sqrt (- (* g g) (* h h))))))))
Precision double result: (λ (g h a) (if (<= g -2.456468711053791e-159) (+ (cbrt (* (/ -1/2 a) (+ g (sqrt (* (+ g h) (- g h)))))) (* (cbrt (- (sqrt (* (+ g h) (- g h))) g)) (cbrt (/ 1/2 a)))) (+ (cbrt (* (- (sqrt (* (+ g h) (- g h))) g) (/ 1/2 a))) (/ (cbrt (* (+ g g) -1/2)) (cbrt a)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|35.0253217|31.103|#f    |
|single|#f        |#f    |#f    |

Now running test: 2-ancestry mixing, zero discriminant
Starting program: (λ (g a) (cbrt (/ g (* 2 a))))
Precision double result: (λ (g a) (* (/ 1 (cbrt (* a 2))) (cbrt g)))
Precision single result: (λ (g a) (* (cbrt (/ 1 (* 2 a))) (cbrt g)))
|      |start prog|double|single|
|double|15.5690248|0.8762|0.8617|
|single|17.5032320|17.298|17.441|

Now running test: 2-ancestry mixing, negative discriminant
Starting program: (λ (g h) (* 2 (cos (+ (/ (* 2 PI) 3) (/ (acos (/ (- g) h)) 3)))))
Precision double result: (λ (g h) (* 2 (+ (* (cos (/ (acos (/ g h)) 3)) (cos (+ (/ PI 3) (* PI 2/3)))) (* (sin (/ (acos (/ g h)) 3)) (sin (+ (/ PI 3) (* PI 2/3)))))))
Precision single result: (λ (g h) (* 2 (cos (+ (/ (acos (/ (- g) h)) 3) (* PI 2/3)))))
|      |start prog|double|single|
|double|0.99099830|0.0471|0.9909|
|single|11.7125528|12.339|11.712|

Now running test: The quadratic formula (r1)
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)))
Precision double result: (λ (a b c) (if (<= b -3.943398495967645e+82) (- (/ c b) (/ b a)) (if (<= b -1.0738329142213963e-307) (/ (- (sqrt (+ (* a (* -4 c)) (* b b))) b) (* 2 a)) (if (<= b 8.771084515296323e+83) (* (/ (- a) (* 2 a)) (/ (* c 4) (+ (sqrt (- (* b b) (* (* c 4) a))) b))) (/ (- c) b)))))
Precision single result: (λ (a b c) 0)
|      |start prog|double|single|
|double|32.5520760|6.6167|56.213|
|single|29.4537055|28.192|8.5017|

Now running test: The quadratic formula (r2)
Starting program: (λ (a b c) (/ (- (- b) (sqrt (- (* b b) (* 4 (* a c))))) (* 2 a)))
Precision double result: (λ (a b c) (if (<= b -1.0036180035002285e+154) (/ (- c) b) (if (<= b -1.6436022268857546e-302) (/ (* 2 c) (+ (sqrt (- (* b b) (* a (* 4 c)))) (- b))) (if (<= b 2.914122129477659e+31) (/ (- (- b) (sqrt (+ (* (* c -4) a) (* b b)))) (* 2 a)) (/ (- b) a)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|33.0804144|6.5797|#f    |
|single|#f        |#f    |#f    |

Now running test: Difference of squares
Starting program: (λ (a b) (- (* a a) (* b b)))
Precision double result: (λ (a b) (* (+ b a) (- a b)))
Precision single result: (λ (a b) (- (* (* (cbrt (* a a)) (* (cbrt a) (cbrt a))) (* (cbrt a) (cbrt a))) (* b b)))
|      |start prog|double|single|
|double|0.00625   |0.0002|0.7423|
|single|0.10507556|0.1046|0.1645|

Now running test: Area of a triangle
Starting program: (λ (a b c) (sqrt (* (* (* (/ (+ (+ a b) c) 2) (- (/ (+ (+ a b) c) 2) a)) (- (/ (+ (+ a b) c) 2) b)) (- (/ (+ (+ a b) c) 2) c))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: ln(1 + x)
Starting program: (λ (x) (log (+ 1 x)))
Precision double result: (λ (x) (if (<= x 9.472423466923002e-05) (+ (* (* x x) (- (* x 1/3) 1/2)) x) (log (+ 1 x))))
Precision single timed out or failed
|      |start prog|double|single|
|double|38.9497855|0.1500|#f    |
|single|#f        |#f    |#f    |

Now running test: Compound Interest
Starting program: (λ (i n) (* 100 (/ (- (pow (+ 1 (/ i n)) n) 1) (/ i n))))
Precision double result: (λ (i n) (if (<= i -108527828.23110962) (/ (- (pow (/ i n) n) 1) (/ (/ i n) 100)) (if (<= i 0.08712689838038958) (* (+ (pow (exp (* (cbrt (log (* (* 50/3 i) i))) (cbrt (log (* (* 50/3 i) i))))) (cbrt (log (* (* 50/3 i) i)))) (+ 100 (* i 50))) n) 0)))
Precision single result: (λ (i n) 0)
|      |start prog|double|single|
|double|47.5745944|14.125|51.119|
|single|20.2604301|3.5813|6.7584|

Now running test: x / (x^2 + 1)
Starting program: (λ (x) (/ x (+ (* x x) 1)))
Precision double result: (λ (x) (if (or (<= x -6375150113.711456) (not (<= x 126571844.9638926))) (- (+ (/ 1 (pow x 5)) (/ 1 x)) (/ 1 (pow x 3))) (* (/ x (- (* (* x x) (* x x)) 1)) (- (* x x) 1))))
Precision single timed out or failed
|      |start prog|double|single|
|double|14.5773824|0.0099|#f    |
|single|#f        |#f    |#f    |

Now running test: Complex division, real part
Starting program: (λ (a b c d) (/ (+ (* a c) (* b d)) (+ (* c c) (* d d))))
Precision double result: (λ (a b c d) (/ (/ (+ (* a c) (* b d)) (sqrt (+ (* c c) (* d d)))) (sqrt (+ (* c c) (* d d)))))
Precision single result: (λ (a b c d) 0)
|      |start prog|double|single|
|double|25.7570453|25.695|52.240|
|single|29.5525080|29.552|6.0386|

Now running test: Complex division, imag part
Starting program: (λ (a b c d) (/ (- (* b c) (* a d)) (+ (* c c) (* d d))))
Precision double result: (λ (a b c d) (if (<= c 5.020385192474173e+57) (/ (/ 1 (/ (sqrt (+ (* c c) (* d d))) (- (* b c) (* a d)))) (sqrt (+ (* c c) (* d d)))) (/ b (sqrt (+ (* c c) (* d d))))))
Precision single result: (λ (a b c d) 0)
|      |start prog|double|single|
|double|25.3807281|25.550|52.139|
|single|29.4736091|29.472|5.8392|

Now running test: arccos
Starting program: (λ (x) (* 2 (atan (sqrt (/ (- 1 x) (+ 1 x))))))
Precision double result: (λ (x) (* 2 (atan (/ (sqrt (- 1 x)) (sqrt (+ x 1))))))
Precision single result: (λ (x) (* (* (sqrt (atan (sqrt (/ (- 1 x) (+ x 1))))) (sqrt (atan (sqrt (/ (- 1 x) (+ x 1)))))) 2))
|      |start prog|double|single|
|double|0.012     |0.0145|0.9732|
|single|0.00732312|0.0097|0.0125|

Now running test: fma_test1
Starting program: (λ (t) (+ (* (+ 1 (* t 2e-16)) (+ 1 (* t 2e-16))) (- -1 (* 2 (* t 2e-16)))))
Precision double result: (λ (t) (* (* 2e-16 (* t 2e-16)) t))
Precision single result: (λ (t) (* (* t 3.9999999999999997e-32) t))
|      |start prog|double|single|
|double|61.8432473|0.3072|0.3198|
|single|27.4965050|0.6616|0.6049|

Now running test: fma_test2
Starting program: (λ (t) (- (* 1.7e+308 t) 1.7e+308))
Precision double result: (λ (t) (- (* t 1.7e+308) 1.7e+308))
Precision single timed out or failed
|      |start prog|double|single|
|double|49.1204056|49.120|#f    |
|single|#f        |#f    |#f    |

Now running test: NMSE Section 6.1 mentioned, A
Starting program: (λ (x eps) (/ (- (* (+ 1 (/ 1 eps)) (exp (- (* (- 1 eps) x)))) (* (- (/ 1 eps) 1) (exp (- (* (+ 1 eps) x))))) 2))
Precision double result: (λ (x eps) (if (<= x 303.8411347416159) (/ (+ (- 2 (* x x)) (* (* x 2/3) (* x x))) 2) (/ (- (* (+ 1 (/ 1 eps)) (pow E (* (- 1 eps) (- x)))) (* (- (/ 1 eps) 1) (exp (* (+ 1 eps) (- x))))) 2)))
Precision single result: (λ (x eps) (/ (- (+ (* (exp (* (* (cbrt (log (* x x))) (cbrt (log (* x x)))) (cbrt (log (* x x))))) (* x 2/3)) 2) (pow x 2)) 2))
|      |start prog|double|single|
|double|29.4075055|1.0181|16.487|
|single|27.1180182|6.8911|7.9150|

Now running test: NMSE Section 6.1 mentioned, B
Starting program: (λ (a b) (* (* (/ PI 2) (/ 1 (- (* b b) (* a a)))) (- (/ 1 a) (/ 1 b))))
Precision double result: (λ (a b) (* (/ (* 1/2 PI) (+ a b)) (/ (/ 1 a) b)))
Precision single result: (λ (a b) 0)
|      |start prog|double|single|
|double|14.1754372|0.2949|37.216|
|single|26.6955676|20.225|2.8412|

Now running test: Radioactive exchange between two surfaces
Starting program: (λ (x y) (- (pow x 4) (pow y 4)))
Precision double result: (λ (x y) (- (pow x 4) (pow y 4)))
Precision single result: (λ (x y) (- (* (* (* (* (* (* (cbrt (cbrt (cbrt (pow x 4)))) (cbrt (cbrt (cbrt (pow x 4))))) (cbrt (cbrt (cbrt (pow x 4))))) (cbrt (cbrt (pow x 4)))) (cbrt (cbrt (pow x 4)))) (cbrt (pow x 4))) (cbrt (pow x 4))) (* (sqrt (pow y 4)) (sqrt (pow y 4)))))
|      |start prog|double|single|
|double|0.00169812|0.0016|0.8265|
|single|0.10078665|0.1007|0.1257|

Now running test: Kahan's exp quotient
Starting program: (λ (x) (/ (- (exp x) 1) x))
Precision double result: (λ (x) (if (<= x -0.0002029020569216047) (/ (* (- (sqrt (exp x)) 1) (+ (sqrt (exp x)) 1)) x) (+ (* (pow x 2) 1/6) (+ (* 1/2 x) 1))))
Precision single timed out or failed
|      |start prog|double|single|
|double|40.3014253|0.3583|#f    |
|single|#f        |#f    |#f    |

Now running test: simple fma test
Starting program: (λ (x y z) (- (fma x y z) (+ 1 (+ (* x y) z))))
Precision double result: (λ (x y z) (if (or (<= z -361057238423.3522) (not (<= z 7447463265713305.0))) (* (cbrt (- (- (fma x y z) z) (+ (* x y) 1))) (* (cbrt (- (- (fma x y z) z) (+ (* x y) 1))) (cbrt (- (- (fma x y z) z) (+ (* x y) 1))))) (log (exp (- (- (fma x y z) (* x y)) (- z -1))))))
Precision single result: (λ (x y z) (- (- (fma x y z) z) (+ (* y x) 1)))
|      |start prog|double|single|
|double|45.4991573|20.831|31.354|
|single|26.6758769|26.200|26.226|

Now running test: Rectangular parallelepiped of dimension a×b×c
Starting program: (λ () (* 2 (+ (+ (* 1 (/ 1 9)) (* (/ 1 9) (/ 1 9))) (* (/ 1 9) 1))))
Precision double result: (λ () 38/81)
Precision single result: (λ () 38/81)
|      |start prog|double|single|
|double|0         |0     |0     |
|single|1.0       |0     |0     |

Now running test: Expression, p14
Starting program: (λ (a b c d) (* a (+ (+ b c) d)))
Precision double result: (λ (a b c d) (+ (+ (* c a) (* d a)) (* b a)))
Precision single result: (λ (a b c d) (* a (+ d (+ c b))))
|      |start prog|double|single|
|double|0.044375  |0.0416|0.0443|
|single|0.84989276|0.8489|0.8498|

Now running test: Expression 1, p15
Starting program: (λ (a b c d e) (+ (+ (+ (+ e d) c) b) a))
Precision double result: (λ (a b c d e) (log (* (exp a) (* (exp (+ b (+ c d))) (exp e)))))
Precision single result: (λ (a b c d e) (+ (/ (+ (pow b 3) (pow d 3)) (+ (- (* b b) (* b d)) (* d d))) (+ (log (exp (+ a c))) e)))
|      |start prog|double|single|
|double|0.39899793|0.162 |0.2897|
|single|0.42764210|0.213 |0.2134|

Now running test: Expression 2, p15
Starting program: (λ (x) (+ x (* x x)))
Precision double result: (λ (x) (+ (* x x) x))
Precision single result: (λ (x) (+ (* x x) x))
|      |start prog|double|single|
|double|0.000875  |0.0008|0.0008|
|single|0.00564624|0.0056|0.0056|

Now running test: Expression 3, p15
Starting program: (λ (x) (+ (* x (* x x)) (* x x)))
Precision double result: (λ (x) (+ (* x x) (* (* x x) x)))
Precision single result: (λ (x) (* (* (sqrt (* x x)) (sqrt (* x x))) (+ 1 x)))
|      |start prog|double|single|
|double|0.013125  |0.0131|0.0239|
|single|0.02982556|0.0298|0.0309|

Now running test: Expression 4, p15
Starting program: (λ (a b) (* (+ a b) (+ a b)))
Precision double result: (λ (a b) (+ (+ (pow b 2) (* 2 (* b a))) (pow a 2)))
Precision single result: (λ (a b) (/ (* (- (pow a 4) (pow b 4)) (- (* a a) (* b b))) (* (* (- a b) (- a b)) (+ (* b b) (* a a)))))
|      |start prog|double|single|
|double|0.02286560|0.0111|0.5626|
|single|0.50644154|0.5056|0.5897|

Now running test: Expression, p6
Starting program: (λ (a b c d) (* (+ a (+ b (+ c d))) 2))
Precision double result: (λ (a b c d) (* (+ (+ a d) (+ b c)) 2))
Precision single result: (λ (a b c d) (* 2 (* (cbrt (+ (/ (+ (* (* c c) c) (pow b 3)) (+ (* b b) (- (* c c) (* b c)))) (+ d a))) (* (cbrt (+ (/ (+ (* (* c c) c) (pow b 3)) (+ (* b b) (- (* c c) (* b c)))) (+ d a))) (cbrt (+ (/ (+ (* (* c c) c) (pow b 3)) (+ (* b b) (- (* c c) (* b c)))) (+ d a)))))))
|      |start prog|double|single|
|double|3.64942568|0     |1.8196|
|single|4.11114601|3.4279|3.4479|

Now running test: From Warwick Tucker's Validated Numerics
Starting program: (λ () (+ (+ (+ (* 333.75 (pow 33096 6)) (* (* 77617 77617) (+ (+ (+ (* (* 11 (* 77617 77617)) (* 33096 33096)) (- (pow 33096 6))) (* -121 (pow 33096 4))) -2))) (* 5.5 (pow 33096 8))) (/ 77617 (* 2 33096))))
Precision double result: (λ () (+ 77617/66192 (/ (pow E (log (- (* (+ (* 333.75 1314174534371215466459037696) -7917111779274712207494296632228773890) (+ (* 333.75 1314174534371215466459037696) -7917111779274712207494296632228773890)) (* (* 5.5 1439474789212538429291115400277262336) (* 5.5 1439474789212538429291115400277262336))))) (- (+ (* 333.75 1314174534371215466459037696) -7917111779274712207494296632228773890) (* 5.5 1439474789212538429291115400277262336)))))
Precision single result: (λ () (+ (+ (* 1439474789212538429291115400277262336 5.5) -524049462893751750438462482680487001249263/66192) (* 333.75 1314174534371215466459037696)))
|      |start prog|double|single|
|double|58.1363802|63.584|63.046|
|single|29.6137285|31.578|29.608|

Now running test: Rosa's DopplerBench
Starting program: (λ (u v t1) (/ (* (- t1) v) (* (+ t1 u) (+ t1 u))))
Precision double result: (λ (u v t1) (* (/ -1 (/ (+ t1 u) v)) (* (/ 1 (+ t1 u)) t1)))
Precision single result: (λ (u v t1) 0)
|      |start prog|double|single|
|double|17.9804348|1.8220|39.475|
|single|23.3765088|22.895|3.4992|

Now running test: Rosa's Benchmark
Starting program: (λ (x) (- (* 0.954929658551372 x) (* 0.12900613773279798 (* (* x x) x))))
Precision double result: (λ (x) (- (* 0.954929658551372 x) (* (* 0.12900613773279798 (* x x)) x)))
Precision single result: (λ (x) (- (* x 0.954929658551372) (* (* (* (* (cbrt (* x x)) (cbrt (* x x))) (cbrt (* x x))) x) 0.12900613773279798)))
|      |start prog|double|single|
|double|0.14351142|0.0935|0.3803|
|single|0.07961479|0.0702|0.0759|

Now running test: Rosa's FloatVsDoubleBenchmark
Starting program: (λ (x1 x2) (+ x1 (+ (+ (+ (+ (* (+ (* (* (* 2 x1) (/ (- (+ (* (* 3 x1) x1) (* 2 x2)) x1) (+ (* x1 x1) 1))) (- (/ (- (+ (* (* 3 x1) x1) (* 2 x2)) x1) (+ (* x1 x1) 1)) 3)) (* (* x1 x1) (- (* 4 (/ (- (+ (* (* 3 x1) x1) (* 2 x2)) x1) (+ (* x1 x1) 1))) 6))) (+ (* x1 x1) 1)) (* (* (* 3 x1) x1) (/ (- (+ (* (* 3 x1) x1) (* 2 x2)) x1) (+ (* x1 x1) 1)))) (* (* x1 x1) x1)) x1) (* 3 (/ (- (- (* (* 3 x1) x1) (* 2 x2)) x1) (+ (* x1 x1) 1))))))
Precision double timed out or failed
Precision single timed out or failed
|      |start prog|double|single|
|double|#f        |#f    |#f    |
|single|#f        |#f    |#f    |

Now running test: Rosa's TurbineBenchmark
Starting program: (λ (v w r) (- (- (+ 3 (/ 2 (* r r))) (/ (* (* 0.125 (- 3 (* 2 v))) (* (* (* w w) r) r)) (- 1 v))) 4.5))
Precision double result: (λ (v w r) (- (- (+ (/ 2 (* r r)) 3) 4.5) (* (* (/ (+ 3 (* v -2)) (/ (- 1 v) 0.125)) (* r w)) (* r w))))
Precision single timed out or failed
|      |start prog|double|single|
|double|12.6709761|0.3597|#f    |
|single|#f        |#f    |#f    |

Now running test: Maksimov and Kolovsky, Equation (3)
Starting program: (λ (J K U) (* (* (* -2 J) (cos (/ K 2))) (sqrt (+ 1 (pow (/ U (* (* 2 J) (cos (/ K 2)))) 2)))))
Precision double result: (λ (J K U) (if (<= (* (* (* J -2) (cos (/ K 2))) (sqrt (+ (pow (/ U (* (* J 2) (cos (/ K 2)))) 2) 1))) -inf.0) (* (* (/ U (* (cos (* 1/2 K)) J)) 1/2) (* (* J -2) (cos (/ K 2)))) (if (<= (* (* (* J -2) (cos (/ K 2))) (sqrt (+ (pow (/ U (* (* J 2) (cos (/ K 2)))) 2) 1))) 1.6566920573914675e+304) (* (* (* J -2) (cos (/ K 2))) (sqrt (+ (pow (/ U (* (* J 2) (cos (/ K 2)))) 2) 1))) (* (* (/ U (* (cos (* 1/2 K)) J)) 1/2) (* (* J -2) (cos (/ K 2)))))))
Precision single result: (λ (J K U) (* (* (* -2 J) (cos (/ K 2))) (sqrt (+ 1 (* (/ (/ (/ U 2) J) (cos (/ K 2))) (/ (/ (/ U 2) J) (cos (/ K 2))))))))
|      |start prog|double|single|
|double|17.0924002|13.187|17.121|
|single|27.1996981|27.111|27.199|

Now running test: Maksimov and Kolovsky, Equation (4)
Starting program: (λ (J l K U) (+ (* (* J (- (exp l) (exp (- l)))) (cos (/ K 2))) U))
Precision double result: (λ (J l K U) (+ (* (* (+ (+ (* (pow l 5) 1/60) (* l 2)) (* 1/3 (pow l 3))) (cos (/ K 2))) J) U))
Precision single result: (λ (J l K U) U)
|      |start prog|double|single|
|double|17.5719186|0.4199|18.853|
|single|19.0439842|18.869|4.0163|

Now running test: Maksimov and Kolovsky, Equation (32)
Starting program: (λ (K m n M l) (* (cos (- (/ (* K (+ m n)) 2) M)) (exp (- (- (pow (- (/ (+ m n) 2) M) 2)) (- l (fabs (- m n)))))))
Precision double result: (λ (K m n M l) (exp (- (- (pow (- (/ (+ m n) 2) M) 2)) (- l (fabs (- m n))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|14.9088283|1.3812|#f    |
|single|#f        |#f    |#f    |

Now running test: Bulmash initializePoisson
Starting program: (λ (NdChar Ec Vef EDonor mu KbT NaChar Ev EAccept) (+ (/ NdChar (+ 1 (exp (/ (- (- (- (- Ec Vef) EDonor) mu)) KbT)))) (/ NaChar (+ 1 (exp (/ (+ (+ (+ Ev Vef) EAccept) (- mu)) KbT))))))
Precision double result: (λ (NdChar Ec Vef EDonor mu KbT NaChar Ev EAccept) (+ (/ NdChar (+ 1 (exp (/ (+ (- mu Ec) (+ EDonor Vef)) KbT)))) (/ NaChar (+ 1 (exp (/ (+ (- Ev mu) (+ EAccept Vef)) KbT))))))
Precision single result: (λ (NdChar Ec Vef EDonor mu KbT NaChar Ev EAccept) (* (cbrt (* NaChar 1/2)) (* (cbrt (+ (* NdChar 1/2) (* NaChar 1/2))) (cbrt (+ (* NdChar 1/2) (* NaChar 1/2))))))
|      |start prog|double|single|
|double|0.02732783|0.0273|53.973|
|single|26.7508301|26.750|17.810|

Now running test: Migdal et al, Equation (51)
Starting program: (λ (k n) (* (/ 1 (sqrt k)) (pow (* (* 2 PI) n) (/ (- 1 k) 2))))
Precision double result: (λ (k n) (/ 1 (/ (pow (* n 2) (/ k 2)) (* (pow PI (/ (- 1 k) 2)) (/ (sqrt (* n 2)) (sqrt k))))))
Precision single result: (λ (k n) (* (/ (/ (sqrt (pow (* (* 2 n) PI) (/ (- 1 k) 2))) (sqrt (* (cbrt (sqrt k)) (cbrt (sqrt k))))) (sqrt (cbrt (sqrt k)))) (/ (sqrt (pow (* (* 2 n) PI) (/ (- 1 k) 2))) (sqrt (sqrt k)))))
|      |start prog|double|single|
|double|0.47956700|0.5076|0.8703|
|single|10.6524816|27.793|10.656|

Now running test: Migdal et al, Equation (64)
Starting program: (λ (a1 a2 th) (+ (* (/ (cos th) (sqrt 2)) (* a1 a1)) (* (/ (cos th) (sqrt 2)) (* a2 a2))))
Precision double result: (λ (a1 a2 th) (* (* (/ (/ 1 (* (cbrt (sqrt 2)) (cbrt (sqrt 2)))) (cbrt (cbrt (sqrt 2)))) (+ (* a1 a1) (* a2 a2))) (/ (cos th) (* (cbrt (cbrt (sqrt 2))) (cbrt (cbrt (sqrt 2)))))))
Precision single result: (λ (a1 a2 th) (+ (* (/ a1 (sqrt (sqrt 2))) (/ a1 (sqrt (sqrt 2)))) (/ (* (cbrt (pow a2 2)) (* (cbrt (pow a2 2)) (* (* (cbrt (cbrt (pow a2 2))) (cbrt (cbrt (pow a2 2)))) (cbrt (cbrt (pow a2 2)))))) (sqrt 2))))
|      |start prog|double|single|
|double|0.52282473|0.5364|25.463|
|single|13.7782960|13.842|3.0744|

Now running test: Falkner and Boettcher, Equation (20:1,3)
Starting program: (λ (v t) (/ (- 1 (* 5 (* v v))) (* (* (* PI t) (sqrt (* 2 (- 1 (* 3 (* v v)))))) (- 1 (* v v)))))
Precision double result: (λ (v t) (/ (* (/ (* (cbrt (- 1 (* (* 5 v) v))) (cbrt (- 1 (* (* 5 v) v)))) (sqrt (+ (* (* -6 v) v) 2))) (/ (/ (cbrt (- 1 (* (* 5 v) v))) PI) (- 1 (* v v)))) t))
Precision single result: (λ (v t) (/ (- 1 (* (* v v) 5)) (* (* (* (cbrt (sqrt (+ 2 (* (* v v) -6)))) (* t (* (cbrt (sqrt (* 2 (- 1 (* 3 (* v v)))))) (cbrt (sqrt (* 2 (- 1 (* 3 (* v v))))))))) PI) (- 1 (* v v)))))
|      |start prog|double|single|
|double|0.47125674|0.1273|0.5453|
|single|0.24757311|0.1934|0.1934|

Now running test: Falkner and Boettcher, Equation (22+)
Starting program: (λ (v) (/ 4 (* (* (* 3 PI) (- 1 (* v v))) (sqrt (- 2 (* 6 (* v v)))))))
Precision double result: (λ (v) (/ (* (/ 1 (- 1 (* v v))) (/ 4/3 PI)) (sqrt (- 2 (* (* 6 v) v)))))
Precision single result: (λ (v) (* (/ (/ (/ 1 PI) (cbrt (- 1 (* v v)))) (sqrt (- 2 (* (* v 6) v)))) (/ 4/3 (* (cbrt (- 1 (* v v))) (cbrt (- 1 (* v v)))))))
|      |start prog|double|single|
|double|0.98534436|0.0106|0.0234|
|single|0.00464624|0.0064|0.0069|

Now running test: Falkner and Boettcher, Appendix A
Starting program: (λ (a k m) (/ (* a (pow k m)) (+ (+ 1 (* 10 k)) (* k k))))
Precision double result: (λ (a k m) (/ (/ (* (pow k m) a) (sqrt (+ 1 (* (+ 10 k) k)))) (sqrt (+ 1 (* (+ 10 k) k)))))
Precision single result: (λ (a k m) (/ (* (pow k m) a) (+ (* (* k (cbrt (+ 10 k))) (* (cbrt (+ 10 k)) (cbrt (+ 10 k)))) 1)))
|      |start prog|double|single|
|double|1.94044101|1.9699|2.0038|
|single|13.5410951|11.379|11.337|

Now running test: Falkner and Boettcher, Appendix B, 1
Starting program: (λ (v) (acos (/ (- 1 (* 5 (* v v))) (- (* v v) 1))))
Precision double result: (λ (v) (log (/ (exp (/ PI 2)) (exp (asin (/ (- 1 (* 5 (* v v))) (- (* v v) 1)))))))
Precision single result: (λ (v) (acos (/ (- 1 (* (* 5 v) v)) (+ (* v v) -1))))
|      |start prog|double|single|
|double|0.52437530|0.5252|0.5242|
|single|0.08362664|0.0845|0.0835|

Now running test: Falkner and Boettcher, Appendix B, 2
Starting program: (λ (v) (* (* (/ (sqrt 2) 4) (sqrt (- 1 (* 3 (* v v))))) (- 1 (* v v))))
Precision double result: (λ (v) (* (exp (log (* (sqrt (- 1 (* 3 (* v v)))) (/ (sqrt 2) 4)))) (- 1 (* v v))))
Precision single result: (λ (v) (* (* (sqrt (- 1 (* 3 (* v v)))) (/ (sqrt 2) 4)) (- 1 (* v v))))
|      |start prog|double|single|
|double|0.01411560|0.0166|0.0141|
|single|0.004375  |0.0068|0.0043|

Now running test: Toniolo and Linder, Equation (2)
Starting program: (λ (t l Om Omc) (asin (sqrt (/ (- 1 (pow (/ Om Omc) 2)) (+ 1 (* 2 (pow (/ t l) 2)))))))
Precision double result: (λ (t l Om Omc) (asin (sqrt (/ (/ (- 1 (* (/ Om Omc) (/ Om Omc))) (sqrt (+ 1 (* 2 (* (/ t l) (/ t l)))))) (sqrt (+ 1 (* 2 (* (/ t l) (/ t l)))))))))
Precision single result: (λ (t l Om Omc) (asin (sqrt (/ (- 1 (* (/ Om Omc) (/ Om Omc))) (+ (* 2 (* (/ t l) (cbrt (* (/ t l) (* (/ t l) (/ t l)))))) 1)))))
|      |start prog|double|single|
|double|10.1074219|10.135|14.400|
|single|18.6231943|18.624|18.655|

Now running test: Toniolo and Linder, Equation (3a)
Starting program: (λ (l Om kx ky) (sqrt (* (/ 1 2) (+ 1 (/ 1 (sqrt (+ 1 (* (pow (/ (* 2 l) Om) 2) (+ (pow (sin kx) 2) (pow (sin ky) 2))))))))))
Precision double result: (λ (l Om kx ky) (sqrt (+ (/ 1/2 (sqrt (+ (* (+ (* (sin ky) (sin ky)) (* (sin kx) (sin kx))) (* (* (/ l Om) 2) (* (/ l Om) 2))) 1))) 1/2)))
Precision single result: (λ (l Om kx ky) (sqrt (+ (/ 1/2 (sqrt (+ (* (+ (* (sin ky) (sin ky)) (* (sin kx) (sin kx))) (* (* (/ l Om) 2) (* (/ l Om) 2))) 1))) 1/2)))
|      |start prog|double|single|
|double|1.06787626|1.0678|1.0678|
|single|26.0254611|25.668|25.668|

Now running test: Toniolo and Linder, Equation (3b), real
Starting program: (λ (kx ky th) (* (/ (sin ky) (sqrt (+ (pow (sin kx) 2) (pow (sin ky) 2)))) (sin th)))
Precision double result: (λ (kx ky th) (* (/ (sin th) (sqrt (+ (pow (sin ky) 2) (pow (sin kx) 2)))) (sin ky)))
Precision single result: (λ (kx ky th) (/ (* (sin ky) (sin th)) (sqrt (+ (* (sin ky) (sin ky)) (* (sin kx) (sin kx))))))
|      |start prog|double|single|
|double|3.84192688|3.8949|5.1170|
|single|29.1194557|29.119|29.119|

Now running test: Toniolo and Linder, Equation (7)
Starting program: (λ (x l t) (/ (* (sqrt 2) t) (sqrt (- (* (/ (+ x 1) (- x 1)) (+ (* l l) (* 2 (* t t)))) (* l l)))))
Precision double result: (λ (x l t) (if (<= t -2.052630437513696e+114) (/ (* t (sqrt 2)) (- (* (- (/ t 2) t) (/ (/ 2 x) (* (sqrt 2) x))) (* (+ (/ (/ 2 x) (sqrt 2)) (sqrt 2)) t))) (if (<= t -6.447717490869749e-168) (/ (* (sqrt (sqrt 2)) (* (sqrt (sqrt 2)) t)) (sqrt (+ (* l (/ (* 2 l) x)) (* (+ (/ 4 x) 2) (* t t))))) (if (<= t 5.58836206117599e-161) (/ (* t (sqrt 2)) (/ (sqrt (* (- 2 (/ 4 x)) (+ (* (+ (/ 4 x) 2) (* t (* t x))) (* l (* 2 l))))) (sqrt (* (- 2 (/ 4 x)) x)))) (if (<= t 8.672874071746664e+105) (/ (* t (sqrt 2)) (sqrt (+ (* (* l (/ 1 x)) (* 2 l)) (* (+ (/ 4 x) 2) (* t t))))) (/ (* t (sqrt 2)) (+ (* t (sqrt 2)) (- (* (+ (/ t x) t) (/ (/ 2 x) (sqrt 2))) (/ t (* (sqrt 2) (* x x)))))))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|41.9763141|7.3848|#f    |
|single|#f        |#f    |#f    |

Now running test: Toniolo and Linder, Equation (10+)
Starting program: (λ (t l k) (/ 2 (* (* (* (/ (pow t 3) (* l l)) (sin k)) (tan k)) (+ (+ 1 (pow (/ k t) 2)) 1))))
Precision double result: (λ (t l k) (if (or (<= t -6.5117678537519536e-83) (not (<= t 3.4438015334767017e-72))) (* (/ (/ 1 t) (sin k)) (* (/ (* (/ 2 t) l) (+ 2 (* (/ k t) (/ k t)))) (/ (/ l t) (tan k)))) (* (/ (* l (cbrt (/ 2 (tan k)))) (/ (/ (sin k) (/ l t)) (cbrt (/ 2 (tan k))))) (/ (cbrt (/ 2 (tan k))) (+ (* k k) (* 2 (* t t)))))))
Precision single result: (λ (t l k) (/ (/ (/ 2 (tan k)) (/ (* (sin k) t) (* (/ l t) (/ l t)))) (+ 2 (* (/ k t) (/ k t)))))
|      |start prog|double|single|
|double|31.3000556|8.7707|18.688|
|single|28.9919739|28.736|28.706|

Now running test: Toniolo and Linder, Equation (10-)
Starting program: (λ (t l k) (/ 2 (* (* (* (/ (pow t 3) (* l l)) (sin k)) (tan k)) (- (+ 1 (pow (/ k t) 2)) 1))))
Precision double result: (λ (t l k) (if (or (<= k -5.805842349843301e+18) (not (<= k 4.6625077634562604e+70))) (* (/ (/ l (sin k)) (* k (tan k))) (* (/ 2 t) (/ l k))) (* (/ (cos k) (/ (sin k) (/ l k))) (/ (/ (/ 2 t) k) (/ (sin k) l)))))
Precision single result: (λ (t l k) (* (+ (/ -1/3 (* k k)) (/ 2 (pow k 4))) (/ l (/ t l))))
|      |start prog|double|single|
|double|46.8507014|1.2244|29.331|
|single|30.7586284|28.317|20.082|

Now running test: Toniolo and Linder, Equation (13)
Starting program: (λ (n U t l Om U*) (sqrt (* (* (* 2 n) U) (- (- t (* 2 (/ (* l l) Om))) (* (* n (pow (/ l Om) 2)) (- U U*))))))
Precision double result: (λ (n U t l Om U*) (if (<= Om 4.522197645397011e-251) (sqrt (+ (+ (* t (* 2 (* U n))) (* (/ l Om) (* (* U n) (* -4 l)))) (* (* (* -2 (* U n)) (/ l Om)) (* (* n (- U U*)) (/ l Om))))) (if (<= Om 6.149072075053433e+24) (sqrt (+ (* (* n (- U U*)) (* (* (/ l Om) (/ l Om)) (* -2 (* U n)))) (- (* 2 (* (* t U) n)) (* 4 (/ (* (* (pow l 2) U) n) Om))))) (sqrt (+ (* (* (/ l Om) (* (* -2 (* U n)) (/ l Om))) (* n (- U U*))) (+ (* (* (/ l Om) (* U n)) (* -4 l)) (* t (* 2 (* U n)))))))))
Precision single result: (λ (n U t l Om U*) 0)
|      |start prog|double|single|
|double|33.0505770|30.142|61.356|
|single|27.6576002|27.512|11.161|

Now running test: VandenBroeck and Keller, Equation (6)
Starting program: (λ (F l) (- (* PI l) (* (/ 1 (* F F)) (tan (* PI l)))))
Precision double result: (λ (F l) (- (* PI l) (* (/ 1 (- (/ F (* PI l)) (* (* (* PI F) l) 1/3))) (/ 1 F))))
Precision single result: (λ (F l) (- (* PI l) (/ (/ (tan (* PI l)) F) F)))
|      |start prog|double|single|
|double|15.7395828|8.1430|11.808|
|single|6.47804987|25.859|5.2817|

Now running test: VandenBroeck and Keller, Equation (20)
Starting program: (λ (f) (- (* (/ 1 (/ PI 4)) (log (/ (+ (exp (* (/ PI 4) f)) (exp (- (* (/ PI 4) f)))) (- (exp (* (/ PI 4) f)) (exp (- (* (/ PI 4) f)))))))))
Precision double result: (λ (f) (- (/ (+ (log (/ (sqrt (+ (exp (* (- f) (/ PI 4))) (exp (* (/ PI 4) f)))) (+ (+ (* 1/192 (* (pow PI 3) (pow f 3))) (* (* PI f) 1/2)) (* (* (pow PI 5) (pow f 5)) 1/61440)))) (log (sqrt (+ (exp (* (/ PI 4) f)) (exp (/ (- PI) (/ 4 f))))))) (/ PI 4))))
Precision single result: (λ (f) (* (/ -1 (/ PI 4)) (- (+ (* (* (pow f 2) (pow PI 2)) 1/48) (log (/ 4 PI))) (+ (log f) (* (* (exp (* (log PI) 4)) (pow f 4)) 7/23040)))))
|      |start prog|double|single|
|double|59.5570803|2.2211|2.3461|
|single|29.3213429|26.230|25.809|

Now running test: VandenBroeck and Keller, Equation (23)
Starting program: (λ (F B x) (+ (- (* x (/ 1 (tan B)))) (* (/ F (sin B)) (pow (+ (+ (* F F) 2) (* 2 x)) (- (/ 1 2))))))
Precision double result: (λ (F B x) (- (/ (* (pow (+ (* F F) (+ 2 (* x 2))) -1/2) F) (sin B)) (* (/ x (sin B)) (cos B))))
Precision single result: (λ (F B x) (/ (- x) (+ B (+ (* 2/15 (pow B 5)) (* (pow B 3) 1/3)))))
|      |start prog|double|single|
|double|13.7324605|10.875|50.272|
|single|28.2047966|28.204|20.693|

Now running test: VandenBroeck and Keller, Equation (24)
Starting program: (λ (B x) (+ (- (* x (/ 1 (tan B)))) (/ 1 (sin B))))
Precision double result: (λ (B x) (- (/ 1 (sin B)) (* (cos B) (/ x (sin B)))))
Precision single result: (λ (B x) (- (* (* (cbrt (/ 1 (sin B))) (cbrt (/ 1 (sin B)))) (cbrt (/ 1 (sin B)))) (/ x (* (* (cbrt (tan B)) (cbrt (tan B))) (cbrt (tan B))))))
|      |start prog|double|single|
|double|0.21121936|0.1925|1.3086|
|single|26.7410361|26.740|26.805|

Now running test: Henrywood and Agarwal, Equation (3)
Starting program: (λ (c0 A V l) (* c0 (sqrt (/ A (* V l)))))
Precision double result: (λ (c0 A V l) (if (<= (* l V) -9.75151803472391e+129) (* (sqrt (/ (/ A V) l)) c0) (if (<= (* l V) -1.2096826374226449e-205) (* (sqrt (/ A (* l V))) c0) (if (or (<= (* l V) -0.0) (not (<= (* l V) 5.206170635034287e+268))) (* (sqrt (/ (/ A V) l)) c0) (* c0 (* (sqrt (/ 1 (* l V))) (sqrt A)))))))
Precision single result: (λ (c0 A V l) 0)
|      |start prog|double|single|
|double|18.8019467|11.274|54.940|
|single|25.1344455|25.175|6.7133|

Now running test: Henrywood and Agarwal, Equation (9a)
Starting program: (λ (w0 M D h l d) (* w0 (sqrt (- 1 (* (pow (/ (* M D) (* 2 d)) 2) (/ h l))))))
Precision double result: (λ (w0 M D h l d) (if (or (<= (/ h l) -1.7730232139717778e+308) (not (<= (/ h l) -1.2617056913852888e-269))) w0 (* (sqrt (- 1 (* (* (/ (* D M) (* d 2)) (/ h l)) (/ (* D M) (* d 2))))) w0)))
Precision single result: (λ (w0 M D h l d) (* (sqrt (- 1 (* (* (* (/ M 2) (/ D d)) (* (/ M 2) (/ D d))) (/ h l)))) w0))
|      |start prog|double|single|
|double|13.4976044|8.9770|13.405|
|single|27.7622093|10.361|27.769|

Now running test: Henrywood and Agarwal, Equation (12)
Starting program: (λ (d h l M D) (* (* (pow (/ d h) (/ 1 2)) (pow (/ d l) (/ 1 2))) (- 1 (* (* (/ 1 2) (pow (/ (* M D) (* 2 d)) 2)) (/ h l)))))
Precision double result: (λ (d h l M D) (if (<= h -6.1044653911093215e-33) (* (- 1 (* (/ 1 l) (* (* 1/2 (pow (/ (* D M) (* d 2)) 2)) h))) (* (* (sqrt (/ -1 l)) (pow (/ -1 d) -1/2)) (pow (/ d h) 1/2))) (if (<= h 1.0224783572756e-310) (* (* (pow (/ d l) 1/2) (* (sqrt (/ -1 h)) (pow (/ -1 d) -1/2))) (- 1 (* (/ 1 l) (* (* 1/2 (pow (/ (* D M) (* d 2)) 2)) h)))) (if (<= h 2.93845693816564e-67) (* (- 1 (* (/ 1 l) (* (* 1/2 (pow (/ (* D M) (* d 2)) 2)) h))) (* (* (pow (/ 1 h) 1/2) (sqrt d)) (pow (/ d l) 1/2))) (* (- 1 (* (/ 1 l) (* (* 1/2 (pow (/ (* D M) (* d 2)) 2)) h))) (* (pow (/ d h) 1/2) (* (sqrt d) (pow (/ 1 l) 1/2))))))))
Precision single result: (λ (d h l M D) (* (- 1 (* (* 1/2 (pow (/ (* M D) (* d 2)) 2)) (/ h l))) (* (pow (/ d h) 1/2) (pow (/ d l) 1/2))))
|      |start prog|double|single|
|double|25.9296013|16.530|25.929|
|single|30.4957384|30.482|30.495|

Now running test: Henrywood and Agarwal, Equation (13)
Starting program: (λ (c0 w h D d M) (* (/ c0 (* 2 w)) (+ (/ (* c0 (* d d)) (* (* w h) (* D D))) (sqrt (- (* (/ (* c0 (* d d)) (* (* w h) (* D D))) (/ (* c0 (* d d)) (* (* w h) (* D D)))) (* M M))))))
Precision double result: (λ (c0 w h D d M) (if (<= (* (/ c0 (* w 2)) (+ (/ (* c0 (* d d)) (* (* D D) (* h w))) (sqrt (- (* (/ (* c0 (* d d)) (* (* D D) (* h w))) (/ (* c0 (* d d)) (* (* D D) (* h w)))) (* M M))))) 4.897826246707015e+238) (* (/ c0 (* w 2)) (+ (/ (* c0 (* d d)) (* (* D D) (* h w))) (sqrt (- (* (/ (* c0 (* d d)) (* (* D D) (* h w))) (/ (* c0 (* d d)) (* (* D D) (* h w)))) (* M M))))) 0))
Precision single result: (λ (c0 w h D d M) 0)
|      |start prog|double|single|
|double|58.2134384|30.354|31.856|
|single|30.9462532|2.3999|2.3999|

Now running test: Bouland and Aaronson, Equation (24)
Starting program: (λ (a b) (- (+ (pow (+ (* a a) (* b b)) 2) (* 4 (+ (* (* a a) (- 1 a)) (* (* b b) (+ 3 a))))) 1))
Precision double result: (λ (a b) (- (+ (+ (* (* (pow b 2) (pow a 2)) 2) (+ (pow b 4) (pow a 4))) (* (+ (* a (* (- 1 a) a)) (* (* b b) (+ a 3))) 4)) 1))
Precision single result: (λ (a b) (- (+ (* (cbrt (pow (+ (* a a) (* b b)) 2)) (* (cbrt (* (cbrt (+ (* a a) (* b b))) (+ (* a a) (* b b)))) (* (cbrt (pow (cbrt (+ (* a a) (* b b))) 2)) (cbrt (pow (+ (* a a) (* b b)) 2))))) (* (+ (* (- 1 a) (* a a)) (* (* b b) (+ 3 a))) 4)) 1))
|      |start prog|double|single|
|double|0.18950517|0.0249|0.4755|
|single|0.06413818|0.0644|0.0756|

Now running test: Bouland and Aaronson, Equation (25)
Starting program: (λ (a b) (- (+ (pow (+ (* a a) (* b b)) 2) (* 4 (+ (* (* a a) (+ 1 a)) (* (* b b) (- 1 (* 3 a)))))) 1))
Precision double result: (λ (a b) (+ (+ (+ (* (* (pow b 2) (pow a 2)) 2) (+ (pow b 4) (pow a 4))) (* (* a 4) (+ (* a a) a))) (- (* (+ 1 (* a -3)) (* (* b b) 4)) 1)))
Precision single result: (λ (a b) (- (+ (pow (+ (* b b) (* a a)) 2) (* (+ (* (* (cbrt (* b b)) (* (* (* (cbrt (cbrt (* b b))) (cbrt (cbrt (* b b)))) (cbrt (cbrt (* b b)))) (cbrt (* b b)))) (- 1 (* 3 a))) (* (+ 1 a) (* a a))) 4)) 1))
|      |start prog|double|single|
|double|0.19093198|0.0231|0.1948|
|single|0.06114509|0.0644|0.0623|

Now running test: Bouland and Aaronson, Equation (26)
Starting program: (λ (a b) (- (+ (pow (+ (* a a) (* b b)) 2) (* 4 (* b b))) 1))
Precision double result: (λ (a b) (- (+ (+ (* (* (pow b 2) (pow a 2)) 2) (+ (pow a 4) (pow b 4))) (* (* b b) 4)) 1))
Precision single result: (λ (a b) (+ (+ (* (* (pow a 2) (pow b 2)) 2) (+ (pow a 4) (pow b 4))) (+ (* (* b b) 4) -1)))
|      |start prog|double|single|
|double|0.18324793|0.0086|0.0113|
|single|0.06044759|0.0575|0.0592|

Now running test: Graphics.Rendering.Chart.Backend.Diagrams:calcFontMetrics from Chart-diagrams-1.5.1
Starting program: (λ (x y z t) (* x (/ (* (/ y z) t) t)))
Precision double result: (λ (x y z t) (if (<= (/ y z) -1.3664976242876146e+167) (/ (* x y) z) (if (<= (/ y z) -2.073986464140719e-220) (* (/ y z) x) (if (<= (/ y z) 5.4737027744614886e-267) (/ (/ x z) (/ 1 y)) (if (<= (/ y z) 3.190628590276035e+183) (* (/ y z) x) (/ (* x y) z))))))
Precision single result: (λ (x y z t) (* (/ y z) x))
|      |start prog|double|single|
|double|14.0990396|0.4689|6.1637|
|single|29.6638925|20.879|20.913|

Now running test: (+ x (- (tan (+ y z)) (tan a)))
Starting program: (λ (x y z a) (+ x (- (tan (+ y z)) (tan a))))
Precision double result: (λ (x y z a) (+ x (* (/ (- (* (* (* (- (tan y) (tan z)) (+ (tan z) (tan y))) (cos a)) (+ (+ 1 (* (tan y) (tan z))) (* (* (tan y) (tan z)) (* (tan y) (tan z))))) (* (- 1 (pow (* (tan y) (tan z)) 3)) (* (sin a) (- (tan y) (tan z))))) (* (* (+ (+ (* (* (tan y) (tan z)) (* (tan y) (tan z))) (* (tan y) (tan z))) 1) (- (tan y) (tan z))) (cos a))) (/ 1 (- 1 (* (tan y) (tan z)))))))
Precision single result: (λ (x y z a) (exp (log x)))
|      |start prog|double|single|
|double|13.2608255|0.2462|43.674|
|single|25.8419341|28.679|17.843|

Now running test: cos(2*x)/(cos^2(x)*sin^2(x))
Starting program: (λ (x cos sin) (/ (cos (* 2 x)) (* (pow cos 2) (* (* x (pow sin 2)) x))))
Precision double result: (λ (x cos sin) (* (/ 1 (* cos (* sin x))) (/ (cos (* 2 x)) (* cos (* sin x)))))
Precision single result: (λ (x cos sin) (/ (cos (* 2 x)) (* (* (cbrt (* x (* sin cos))) (* (cbrt (* x (* sin cos))) (cbrt (* x (* sin cos))))) (* (cbrt (* x (* sin cos))) (* (cbrt (* x (* sin cos))) (cbrt (* x (* sin cos))))))))
|      |start prog|double|single|
|double|26.9504684|2.6573|3.4545|
|single|28.7802645|28.583|28.536|

Now running test: x
Starting program: (λ (x) x)
Precision double result: (λ (x) x)
Precision single result: (λ (x) x)
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0         |0     |0     |

Now running test: r*sin(b)/cos(a+b), A
Starting program: (λ (r a b) (/ (* r (sin b)) (cos (+ a b))))
Precision double result: (λ (r a b) (* r (/ (sin b) (- (* (cos b) (cos a)) (* (sin a) (sin b))))))
Precision single result: (λ (r a b) (/ (* r (sin b)) (- 1 (log (pow (exp b) (+ a (* 1/2 b)))))))
|      |start prog|double|single|
|double|15.1065246|0.3305|41.477|
|single|23.3066390|23.303|17.400|

Now running test: r*sin(b)/cos(a+b), B
Starting program: (λ (r a b) (* r (/ (sin b) (cos (+ a b)))))
Precision double result: (λ (r a b) (* (* (/ (sin b) (- (pow (* (cos b) (cos a)) 3) (pow (* (sin a) (sin b)) 3))) r) (+ (* (* (sin a) (sin b)) (+ (* (sin a) (sin b)) (* (cos b) (cos a)))) (* (* (cos b) (cos a)) (* (cos b) (cos a))))))
Precision single result: (λ (r a b) (* r (/ (sin b) (- 1 (* (+ (* 1/2 a) b) a)))))
|      |start prog|double|single|
|double|14.7624266|0.4691|42.126|
|single|23.1287780|23.129|17.077|

Now running test: Fuzzer 001
Starting program: (λ (a) (/ a (- (acos a))))
Precision double result: (λ (a) (/ 1 (- (/ (acos a) a))))
Precision single result: (λ (a) (/ (/ a (sqrt (acos a))) (- (sqrt (acos a)))))
|      |start prog|double|single|
|double|0.24825   |0.3491|1.1439|
|single|0.04909436|0.0490|0.0462|

Now running test: Fuzzer 002
Starting program: (λ (a) (pow (atan (fmod a (asin a))) (* a a)))
Precision double result: (λ (a) (pow (atan (fmod a (asin a))) (* a a)))
Precision single result: (λ (a) (pow (atan (fmod a (asin a))) (log (exp (* a a)))))
|      |start prog|double|single|
|double|30.6818024|30.681|0.1277|
|single|1.76595881|1.7659|0.0407|

Now running test: Numeric.SpecFunctions:logGammaL from math-functions-0.1.5.2
Starting program: (λ (x y z t a) (+ (- (+ (log (+ x y)) (log z)) t) (* (- a 0.5) (log t))))
Precision double result: (λ (x y z t a) (+ (* (- a 0.5) (log t)) (- (+ (log z) (log (+ y x))) t)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.25769575|0.2576|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:logGamma from math-functions-0.1.5.2
Starting program: (λ (x y z t a b c i) (/ (+ (* (+ (* (+ (* (+ (* x y) z) y) 27464.7644705) y) 230661.510616) y) t) (+ (* (+ (* (+ (* (+ y a) y) b) y) c) y) i)))
Precision double result: (λ (x y z t a b c i) (/ 1 (/ (+ i (* (+ c (* (+ (* (+ y a) y) b) y)) y)) (+ (* (+ (* (+ 27464.7644705 (* (+ (* x y) z) y)) y) 230661.510616) y) t))))
Precision single result: (λ (x y z t a b c i) 0)
|      |start prog|double|single|
|double|28.2755884|28.463|59.157|
|single|30.0419645|30.041|8.3923|

Now running test: Linear.V4:$cdot from linear-1.19.1.3
Starting program: (λ (x y z t a b c i) (+ (+ (+ (* x y) (* z t)) (* a b)) (* c i)))
Precision double result: (λ (x y z t a b c i) (+ (* (cbrt (+ (* i c) (* x y))) (* (cbrt (+ (* i c) (* x y))) (cbrt (+ (* i c) (* x y))))) (+ (* a b) (* z t))))
Precision single result: (λ (x y z t a b c i) (+ (+ (* (sqrt (* b a)) (sqrt (* b a))) (+ (* y x) (* z t))) (* c i)))
|      |start prog|double|single|
|double|0.02475   |0.6676|27.107|
|single|27.7868175|27.789|27.853|

Now running test: Linear.Matrix:det44 from linear-1.19.1.3
Starting program: (λ (x y z t a b c i j k y0 y1 y2 y3 y4 y5) (+ (- (+ (+ (- (* (- (* x y) (* z t)) (- (* a b) (* c i))) (* (- (* x j) (* z k)) (- (* y0 b) (* y1 i)))) (* (- (* x y2) (* z y3)) (- (* y0 c) (* y1 a)))) (* (- (* t j) (* y k)) (- (* y4 b) (* y5 i)))) (* (- (* t y2) (* y y3)) (- (* y4 c) (* y5 a)))) (* (- (* k y2) (* j y3)) (- (* y4 y1) (* y5 y0)))))
Precision double result: (λ (x y z t a b c i j k y0 y1 y2 y3 y4 y5) (- (+ (* (- (* b a) (* i c)) (- (* y x) (* t z))) (* (cbrt (* (* (cbrt (- (* y2 k) (* y3 j))) (- (* y1 y4) (* y0 y5))) (* (cbrt (- (* y2 k) (* y3 j))) (cbrt (- (* y2 k) (* y3 j)))))) (* (cbrt (* (- (* y1 y4) (* y0 y5)) (- (* y2 k) (* y3 j)))) (cbrt (* (- (* y1 y4) (* y0 y5)) (- (* y2 k) (* y3 j))))))) (- (- (* (- (* j x) (* k z)) (- (* b y0) (* i y1))) (* (- (* x y2) (* z y3)) (- (* c y0) (* y1 a)))) (- (* (- (* y4 b) (* y5 i)) (- (* t j) (* k y))) (* (- (* c y4) (* y5 a)) (- (* y2 t) (* y3 y)))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|25.6540478|25.740|#f    |
|single|#f        |#f    |#f    |

Now running test: Linear.Matrix:det33 from linear-1.19.1.3
Starting program: (λ (x y z t a b c i j) (+ (- (* x (- (* y z) (* t a))) (* b (- (* c z) (* i a)))) (* j (- (* c t) (* i y)))))
Precision double result: (λ (x y z t a b c i j) (if (<= t -1.3996316140141162e-43) (+ (- (* (- (* z y) (* a t)) x) (* b (- (* c z) (* a i)))) (+ (* (* j c) t) (* (* i y) (- j)))) (if (<= t 8.20792700318787e-172) (+ (* j (- (* t c) (* i y))) (- (* (* x (* (cbrt (- (* z y) (* a t))) (cbrt (- (* z y) (* a t))))) (cbrt (- (* z y) (* a t)))) (* b (- (* c z) (* a i))))) (if (<= t 7.4343706931397476e-152) (+ (* j (- (* t c) (* i y))) (* (- (* z y) (* a t)) x)) (+ (- (* (- (* z y) (* a t)) x) (* b (- (* c z) (* a i)))) (+ (* (- y) (* i j)) (* j (* t c))))))))
Precision single result: (λ (x y z t a b c i j) 0)
|      |start prog|double|single|
|double|12.2389362|11.903|62.234|
|single|28.8427581|28.847|14.781|

Now running test: Hakyll.Web.Tags:renderTagCloud from hakyll-4.7.2.3
Starting program: (λ (x y z t a) (+ x (* (/ (- y z) (- (+ t 1.0) z)) (- a x))))
Precision double result: (λ (x y z t a) (if (<= z 1.0058987918751911e+188) (+ (* (* (/ 1 (cbrt (- (+ t 1.0) z))) (- a x)) (/ (- y z) (* (cbrt (- (+ t 1.0) z)) (cbrt (- (+ t 1.0) z))))) x) (+ a (* (- x a) (/ y z)))))
Precision single result: (λ (x y z t a) x)
|      |start prog|double|single|
|double|9.15935983|8.7003|43.022|
|single|21.9602118|21.974|9.8720|

Now running test: Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1
Starting program: (λ (x y z t a b c i j k) (- (- (+ (- (* (* (* (* x 18.0) y) z) t) (* (* a 4.0) t)) (* b c)) (* (* x 4.0) i)) (* (* j 27.0) k)))
Precision double result: (λ (x y z t a b c i j k) (if (or (<= x -4.499091042358741e+91) (not (<= x 6.708281727899649e-24))) (+ (- (- (* b c) (* (* 4.0 x) i)) (* (* k 27.0) j)) (* (- (* x (* (* z y) 18.0)) (* a 4.0)) t)) (- (- (+ (- (* t (* (* y (* x 18.0)) z)) (* t (* a 4.0))) (* b c)) (* (* 4.0 x) i)) (* k (* j 27.0)))))
Precision single result: (λ (x y z t a b c i j k) (- (- (log (exp (* c b))) (* (* (cbrt (* (* 4.0 x) i)) (cbrt (* (* 4.0 x) i))) (cbrt (* (* 4.0 x) i)))) (* j (* k 27.0))))
|      |start prog|double|single|
|double|5.41354884|4.0107|42.718|
|single|29.4244905|29.424|26.596|

Now running test: Bouland and Aaronson, Equation (25)
Starting program: (λ (a b) (- (+ (pow (+ (* a a) (* b b)) 2) (* 4 (+ (* (* a a) (+ 1 a)) (* (* b b) (- 1 (* 3 a)))))) 1))
Precision double result: (λ (a b) (+ (+ (+ (* (* (pow b 2) (pow a 2)) 2) (+ (pow a 4) (pow b 4))) (* (* a 4) (+ (* a a) a))) (- (* (+ 1 (* a -3)) (* (* b b) 4)) 1)))
Precision single result: (λ (a b) (+ (- (* (* (* b b) 4) (+ (* -3 a) 1)) 1) (+ (* (exp (log (sqrt (+ (* a a) (* b b))))) (* (+ (* a a) (* b b)) (sqrt (+ (* a a) (* b b))))) (* (* a 4) (+ (* a a) a)))))
|      |start prog|double|single|
|double|0.18732853|0.0204|1.4352|
|single|0.06073145|0.0587|0.1108|

Now running test: The quadratic formula (r1)
Starting program: (λ (a b c) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)))
Precision double result: (λ (a b c) (if (<= b -2.1438958247247315e+71) (- (/ c b) (/ b a)) (if (<= b 3.906834207052612e-296) (/ 1 (/ (* 2 a) (- (sqrt (- (* b b) (* (* c 4) a))) b))) (if (<= b 6.510943465084569e+74) (/ (* (/ 1/2 a) (* (* a -4) c)) (+ b (sqrt (+ (* b b) (* a (* -4 c)))))) (- (/ c b))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|33.2471196|8.8833|#f    |
|single|#f        |#f    |#f    |

Now running test: NMSE problem 3.2.1
Starting program: (λ (a b_2 c) (/ (- (- b_2) (sqrt (- (* b_2 b_2) (* a c)))) a))
Precision double result: (λ (a b_2 c) (if (<= b_2 -1.6529730931306886e-33) (* -1/2 (/ c b_2)) (if (<= b_2 7.859008612856951e+74) (/ (- (- b_2) (sqrt (+ (* b_2 b_2) (* a (- c))))) a) (- (* 1/2 (/ c b_2)) (* 2 (/ b_2 a))))))
Precision single timed out or failed
|      |start prog|double|single|
|double|33.0642288|10.112|#f    |
|single|#f        |#f    |#f    |

Now running test: Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2
Starting program: (λ (x y z t a b c) (/ x (+ x (* y (exp (* 2.0 (- (/ (* z (sqrt (+ t a))) t) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0)))))))))))
Precision double result: (λ (x y z t a b c) (if (or (<= t -1.113387694182304e+21) (not (<= t 2.009639600143707e-143))) (/ x (+ x (* y (exp (* 2.0 (- (/ z (/ t (sqrt (+ t a)))) (* (- b c) (- (+ a (/ 5.0 6.0)) (/ 2.0 (* t 3.0)))))))))) (/ x (+ (* y (exp (* (cbrt (pow (/ (- (* (* z (* t 3.0)) (- a (/ 5.0 6.0))) (* (* (/ (- b c) (sqrt (+ t a))) (* t (- a (/ 5.0 6.0)))) (- (* (* t 3.0) (+ a (/ 5.0 6.0))) 2.0))) (* (/ (* t 3.0) (sqrt (+ t a))) (* t (- a (/ 5.0 6.0))))) 3)) 2.0))) x))))
Precision single result: (λ (x y z t a b c) 0)
|      |start prog|double|single|
|double|3.74831715|1.0280|32.215|
|single|29.8347071|30.070|15.251|

Now running test: Numeric.SpecFunctions:incompleteBetaWorker from math-functions-0.1.5.2
Starting program: (λ (x y z t a b) (/ (* x (exp (- (+ (* y (log z)) (* (- t 1.0) (log a))) b))) y))
Precision double result: (λ (x y z t a b) (/ (* (exp (- (+ (* (log z) y) (* (log a) (- t 1.0))) b)) x) y))
Precision single timed out or failed
|      |start prog|double|single|
|double|1.94558053|1.9455|#f    |
|single|#f        |#f    |#f    |

Now running test: fabs fraction 1
Starting program: (λ (x y z) (fabs (- (/ (+ x 4) y) (* (/ x y) z))))
Precision double result: (λ (x y z) (if (or (<= x -1.0152677944398479e+68) (not (<= x 7.016493676046114e-60))) (fabs (- (+ (/ x y) (/ 4 y)) (/ z (/ y x)))) (fabs (- (/ (+ x 4) y) (/ (* x z) y)))))
Precision single result: (λ (x y z) (fabs (- (/ (+ x 4) y) (/ (* z x) y))))
|      |start prog|double|single|
|double|1.35827026|0.3237|3.3385|
|single|16.0974715|16.135|16.171|

Now running test: fabs fraction 2
Starting program: (λ (a b) (/ (fabs (- a b)) 2))
Precision double result: (λ (a b) (/ (fabs (- a b)) 2))
Precision single result: (λ (a b) (/ (fabs (- a b)) 2))
|      |start prog|double|single|
|double|0         |0     |0     |
|single|0.06770598|0.0677|0.0677|

Now running test: subtraction fraction
Starting program: (λ (f n) (/ (- (+ f n)) (- f n)))
Precision double result: (λ (f n) (/ (- (+ f n)) (- f n)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.02745056|0.0274|#f    |
|single|#f        |#f    |#f    |

Now running test: exp neg sub
Starting program: (λ (x) (exp (- (- 1 (* x x)))))
Precision double result: (λ (x) (exp (+ (* x x) -1)))
Precision single result: (λ (x) (exp (+ (* x x) -1)))
|      |start prog|double|single|
|double|0.01470651|0.0147|0.0147|
|single|0.01104710|0.0110|0.0110|

Now running test: sqrt times
Starting program: (λ (x) (* (sqrt (- x 1)) (sqrt x)))
Precision double result: (λ (x) (+ (+ -1/2 x) (/ -1/8 x)))
Precision single timed out or failed
|      |start prog|double|single|
|double|0.487625  |0.4300|#f    |
|single|#f        |#f    |#f    |

Now running test: neg log
Starting program: (λ (x) (- (log (- (/ 1 x) 1))))
Precision double result: (λ (x) (- (log (- (/ 1 x) 1))))
Precision single result: (λ (x) (- (- (* -1/2 (* x x)) (+ x (* (exp (log (* (cbrt (log x)) (cbrt (log x))))) (cbrt (log x)))))))
|      |start prog|double|single|
|double|0.01926364|0.0192|1.7612|
|single|26.1090872|26.109|25.772|

Now running test: VandenBroeck and Keller, Equation (24)
Starting program: (λ (B x) (+ (- (* x (/ 1 (tan B)))) (/ 1 (sin B))))
Precision double result: (λ (B x) (- (/ 1 (sin B)) (* x (/ 1 (tan B)))))
Precision single result: (λ (B x) (- (/ 1 (sin B)) (/ x (tan B))))
|      |start prog|double|single|
|double|0.21687520|0.2168|0.1565|
|single|26.8367477|26.836|26.836|

Now running test: sqrt sqr
Starting program: (λ (x) (- (/ x x) (* (/ 1 x) (sqrt (* x x)))))
Precision double result: (λ (x) (- 1 (/ (fabs x) x)))
Precision single result: (λ (x) (- 1 (/ (fabs x) x)))
|      |start prog|double|single|
|double|32.4642939|0     |0     |
|single|29.3312304|26.325|26.325|

Now running test: jeff quadratic root 1
Starting program: (λ (a b c) (if (>= b 0) (/ (- (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a)) (/ (* 2 c) (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))))))
Precision double result: (λ (a b c) (if (<= b 1.9083447015222738e+151) (if (>= b 0) (/ (- (- b) (* (sqrt (sqrt (+ (* b b) (* (* -4 c) a)))) (sqrt (sqrt (+ (* b b) (* (* -4 c) a)))))) (* 2 a)) (/ (* 2 c) (- (sqrt (+ (* b b) (* (* -4 c) a))) b))) (if (>= b 0) (/ (- (- b) b) (* 2 a)) (/ (* 2 c) (- (sqrt (+ (* b b) (* (* -4 c) a))) b)))))
Precision single timed out or failed
|      |start prog|double|single|
|double|19.5698585|12.921|#f    |
|single|#f        |#f    |#f    |

Now running test: jeff quadratic root 2
Starting program: (λ (a b c) (if (>= b 0) (/ (* 2 c) (- (- b) (sqrt (- (* b b) (* (* 4 a) c))))) (/ (+ (- b) (sqrt (- (* b b) (* (* 4 a) c)))) (* 2 a))))
Precision double result: (λ (a b c) (if (<= b -6.780366793051805e+158) (if (>= b 0) (/ (* c 2) (- (- b) (sqrt (- (* b b) (* c (* a 4)))))) (/ (+ (- (* (/ (* a c) b) 2) b) (- b)) (* a 2))) (if (<= b 59293746.15368933) (if (>= b 0) (/ (* c 2) (- (- b) (* (* (cbrt (sqrt (- (* b b) (* c (* a 4))))) (cbrt (sqrt (- (* b b) (* c (* a 4)))))) (cbrt (sqrt (- (* b b) (* c (* a 4)))))))) (/ (+ (sqrt (- (* b b) (* c (* a 4)))) (- b)) (* a 2))) (if (>= b 0) (* (/ (/ c 2) (- (* (/ a b) c) b)) 2) (/ (+ (* (sqrt (sqrt (- (* b b) (* c (* a 4))))) (sqrt (sqrt (- (* b b) (* c (* a 4)))))) (- b)) (* a 2))))))
Precision single result: (λ (a b c) (if (>= b 0) 0 (/ (* (cbrt (- c)) (cbrt (- c))) (log (exp (/ b (cbrt (- c))))))))
|      |start prog|double|single|
|double|19.2270081|8.3860|56.443|
|single|22.7659085|23.204|8.8083|

Now running test: Cancel like terms
Starting program: (λ (x) (- (+ 1 x) x))
Precision double result: (λ (x) 1)
Precision single result: (λ (x) 1)
|      |start prog|double|single|
|double|29.1071210|0     |0     |
|single|14.8495035|0     |0     |

Now running test: Expanding a square
Starting program: (λ (x) (- (* (+ x 1) (+ x 1)) 1))
Precision double result: (λ (x) (* x (+ 2 x)))
Precision single result: (λ (x) (* x (+ 2 x)))
|      |start prog|double|single|
|double|38.9927168|0.0118|0.0118|
|single|3.20723279|0.0524|0.0524|

Now running test: Commute and associate
Starting program: (λ (x y z) (- (+ (+ x y) z) (+ x (+ y z))))
Precision double result: (λ (x y z) 0)
Precision single result: (λ (x y z) 0)
|      |start prog|double|single|
|double|0.00753567|0     |0     |
|single|25.1464618|0     |0     |

